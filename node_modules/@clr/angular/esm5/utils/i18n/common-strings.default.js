/*
 * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
export var commonStringsDefault = {
    open: 'Open',
    close: 'Close',
    show: 'Show',
    hide: 'Hide',
    expand: 'Expand',
    collapse: 'Collapse',
    more: 'More',
    select: 'Select',
    selectAll: 'Select All',
    previous: 'Previous',
    next: 'Next',
    current: 'Jump to current',
    info: 'Info',
    success: 'Success',
    warning: 'Warning',
    danger: 'Error',
    rowActions: 'Available actions',
    pickColumns: 'Show or hide columns',
    showColumns: 'Show Columns',
    sortColumn: 'Sort Column',
    firstPage: 'First Page',
    lastPage: 'Last Page',
    nextPage: 'Next Page',
    previousPage: 'Previous Page',
    currentPage: 'Current Page',
    totalPages: 'Total Pages',
    minValue: 'Min value',
    maxValue: 'Max value',
    modalContentStart: 'Beginning of Modal Content',
    modalContentEnd: 'End of Modal Content',
    showColumnsMenuDescription: 'Show or hide columns menu',
    allColumnsSelected: 'All columns selected',
    signpostToggle: 'Signpost Toggle',
    signpostClose: 'Signpost Close',
    loading: 'Loading',
    // Datagrid
    detailPaneStart: 'Start of row details',
    detailPaneEnd: 'End of row details',
    singleSelectionAriaLabel: 'Single selection header',
    singleActionableAriaLabel: 'Single actionable header',
    detailExpandableAriaLabel: 'Toggle more row content',
    datagridFilterAriaLabel: 'Toggle column filter',
    // Alert
    alertCloseButtonAriaLabel: 'Close alert',
    // Date Picker
    datepickerToggle: 'Toggle datepicker',
    datepickerPreviousMonth: 'Previous month',
    datepickerCurrentMonth: 'Current month',
    datepickerNextMonth: 'Next month',
    datepickerPreviousDecade: 'Previous decade',
    datepickerNextDecade: 'Next decade',
    datepickerCurrentDecade: 'Current decade',
    datepickerSelectMonthText: 'Select month, the current month is {CALENDAR_MONTH}',
    datepickerSelectYearText: 'Select year, the current year is {CALENDAR_YEAR}',
    daypickerSRCurrentMonthPhrase: 'The current month is {CURRENT_MONTH}',
    daypickerSRCurrentYearPhrase: 'The current year is {CURRENT_YEAR}',
    daypickerSRCurrentDecadePhrase: 'The current decade is {DECADE_RANGE}',
    // Stack View
    stackViewChanged: 'Value changed.',
    // Forms
    formErrorSummary: 'The form has {ERROR_NUMBER} errors.',
    //Vertical Nav
    verticalNavToggle: 'Toggle vertical navigation',
    verticalNavGroupToggle: 'Toggle vertical navigation group',
    // Timeline steps
    timelineStepNotStarted: 'Not started',
    timelineStepCurrent: 'Current',
    timelineStepSuccess: 'Completed',
    timelineStepError: 'Error',
    timelineStepProcessing: 'In progress',
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbW9uLXN0cmluZ3MuZGVmYXVsdC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BjbHIvYW5ndWxhci8iLCJzb3VyY2VzIjpbInV0aWxzL2kxOG4vY29tbW9uLXN0cmluZ3MuZGVmYXVsdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7OztHQUlHO0FBSUgsTUFBTSxDQUFDLElBQU0sb0JBQW9CLEdBQXFCO0lBQ3BELElBQUksRUFBRSxNQUFNO0lBQ1osS0FBSyxFQUFFLE9BQU87SUFDZCxJQUFJLEVBQUUsTUFBTTtJQUNaLElBQUksRUFBRSxNQUFNO0lBQ1osTUFBTSxFQUFFLFFBQVE7SUFDaEIsUUFBUSxFQUFFLFVBQVU7SUFDcEIsSUFBSSxFQUFFLE1BQU07SUFDWixNQUFNLEVBQUUsUUFBUTtJQUNoQixTQUFTLEVBQUUsWUFBWTtJQUN2QixRQUFRLEVBQUUsVUFBVTtJQUNwQixJQUFJLEVBQUUsTUFBTTtJQUNaLE9BQU8sRUFBRSxpQkFBaUI7SUFDMUIsSUFBSSxFQUFFLE1BQU07SUFDWixPQUFPLEVBQUUsU0FBUztJQUNsQixPQUFPLEVBQUUsU0FBUztJQUNsQixNQUFNLEVBQUUsT0FBTztJQUNmLFVBQVUsRUFBRSxtQkFBbUI7SUFDL0IsV0FBVyxFQUFFLHNCQUFzQjtJQUNuQyxXQUFXLEVBQUUsY0FBYztJQUMzQixVQUFVLEVBQUUsYUFBYTtJQUN6QixTQUFTLEVBQUUsWUFBWTtJQUN2QixRQUFRLEVBQUUsV0FBVztJQUNyQixRQUFRLEVBQUUsV0FBVztJQUNyQixZQUFZLEVBQUUsZUFBZTtJQUM3QixXQUFXLEVBQUUsY0FBYztJQUMzQixVQUFVLEVBQUUsYUFBYTtJQUN6QixRQUFRLEVBQUUsV0FBVztJQUNyQixRQUFRLEVBQUUsV0FBVztJQUNyQixpQkFBaUIsRUFBRSw0QkFBNEI7SUFDL0MsZUFBZSxFQUFFLHNCQUFzQjtJQUN2QywwQkFBMEIsRUFBRSwyQkFBMkI7SUFDdkQsa0JBQWtCLEVBQUUsc0JBQXNCO0lBQzFDLGNBQWMsRUFBRSxpQkFBaUI7SUFDakMsYUFBYSxFQUFFLGdCQUFnQjtJQUMvQixPQUFPLEVBQUUsU0FBUztJQUNsQixXQUFXO0lBQ1gsZUFBZSxFQUFFLHNCQUFzQjtJQUN2QyxhQUFhLEVBQUUsb0JBQW9CO0lBQ25DLHdCQUF3QixFQUFFLHlCQUF5QjtJQUNuRCx5QkFBeUIsRUFBRSwwQkFBMEI7SUFDckQseUJBQXlCLEVBQUUseUJBQXlCO0lBQ3BELHVCQUF1QixFQUFFLHNCQUFzQjtJQUMvQyxRQUFRO0lBQ1IseUJBQXlCLEVBQUUsYUFBYTtJQUN4QyxjQUFjO0lBQ2QsZ0JBQWdCLEVBQUUsbUJBQW1CO0lBQ3JDLHVCQUF1QixFQUFFLGdCQUFnQjtJQUN6QyxzQkFBc0IsRUFBRSxlQUFlO0lBQ3ZDLG1CQUFtQixFQUFFLFlBQVk7SUFDakMsd0JBQXdCLEVBQUUsaUJBQWlCO0lBQzNDLG9CQUFvQixFQUFFLGFBQWE7SUFDbkMsdUJBQXVCLEVBQUUsZ0JBQWdCO0lBQ3pDLHlCQUF5QixFQUFFLHFEQUFxRDtJQUNoRix3QkFBd0IsRUFBRSxrREFBa0Q7SUFDNUUsNkJBQTZCLEVBQUUsc0NBQXNDO0lBQ3JFLDRCQUE0QixFQUFFLG9DQUFvQztJQUNsRSw4QkFBOEIsRUFBRSxzQ0FBc0M7SUFDdEUsYUFBYTtJQUNiLGdCQUFnQixFQUFFLGdCQUFnQjtJQUNsQyxRQUFRO0lBQ1IsZ0JBQWdCLEVBQUUscUNBQXFDO0lBQ3ZELGNBQWM7SUFDZCxpQkFBaUIsRUFBRSw0QkFBNEI7SUFDL0Msc0JBQXNCLEVBQUUsa0NBQWtDO0lBQzFELGlCQUFpQjtJQUNqQixzQkFBc0IsRUFBRSxhQUFhO0lBQ3JDLG1CQUFtQixFQUFFLFNBQVM7SUFDOUIsbUJBQW1CLEVBQUUsV0FBVztJQUNoQyxpQkFBaUIsRUFBRSxPQUFPO0lBQzFCLHNCQUFzQixFQUFFLGFBQWE7Q0FDdEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTYtMjAyMCBWTXdhcmUsIEluYy4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIFRoaXMgc29mdHdhcmUgaXMgcmVsZWFzZWQgdW5kZXIgTUlUIGxpY2Vuc2UuXG4gKiBUaGUgZnVsbCBsaWNlbnNlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBpbiBMSUNFTlNFIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHByb2plY3QuXG4gKi9cblxuaW1wb3J0IHsgQ2xyQ29tbW9uU3RyaW5ncyB9IGZyb20gJy4vY29tbW9uLXN0cmluZ3MuaW50ZXJmYWNlJztcblxuZXhwb3J0IGNvbnN0IGNvbW1vblN0cmluZ3NEZWZhdWx0OiBDbHJDb21tb25TdHJpbmdzID0ge1xuICBvcGVuOiAnT3BlbicsXG4gIGNsb3NlOiAnQ2xvc2UnLFxuICBzaG93OiAnU2hvdycsXG4gIGhpZGU6ICdIaWRlJyxcbiAgZXhwYW5kOiAnRXhwYW5kJyxcbiAgY29sbGFwc2U6ICdDb2xsYXBzZScsXG4gIG1vcmU6ICdNb3JlJyxcbiAgc2VsZWN0OiAnU2VsZWN0JyxcbiAgc2VsZWN0QWxsOiAnU2VsZWN0IEFsbCcsXG4gIHByZXZpb3VzOiAnUHJldmlvdXMnLFxuICBuZXh0OiAnTmV4dCcsXG4gIGN1cnJlbnQ6ICdKdW1wIHRvIGN1cnJlbnQnLFxuICBpbmZvOiAnSW5mbycsXG4gIHN1Y2Nlc3M6ICdTdWNjZXNzJyxcbiAgd2FybmluZzogJ1dhcm5pbmcnLFxuICBkYW5nZXI6ICdFcnJvcicsXG4gIHJvd0FjdGlvbnM6ICdBdmFpbGFibGUgYWN0aW9ucycsXG4gIHBpY2tDb2x1bW5zOiAnU2hvdyBvciBoaWRlIGNvbHVtbnMnLFxuICBzaG93Q29sdW1uczogJ1Nob3cgQ29sdW1ucycsXG4gIHNvcnRDb2x1bW46ICdTb3J0IENvbHVtbicsXG4gIGZpcnN0UGFnZTogJ0ZpcnN0IFBhZ2UnLFxuICBsYXN0UGFnZTogJ0xhc3QgUGFnZScsXG4gIG5leHRQYWdlOiAnTmV4dCBQYWdlJyxcbiAgcHJldmlvdXNQYWdlOiAnUHJldmlvdXMgUGFnZScsXG4gIGN1cnJlbnRQYWdlOiAnQ3VycmVudCBQYWdlJyxcbiAgdG90YWxQYWdlczogJ1RvdGFsIFBhZ2VzJyxcbiAgbWluVmFsdWU6ICdNaW4gdmFsdWUnLFxuICBtYXhWYWx1ZTogJ01heCB2YWx1ZScsXG4gIG1vZGFsQ29udGVudFN0YXJ0OiAnQmVnaW5uaW5nIG9mIE1vZGFsIENvbnRlbnQnLFxuICBtb2RhbENvbnRlbnRFbmQ6ICdFbmQgb2YgTW9kYWwgQ29udGVudCcsXG4gIHNob3dDb2x1bW5zTWVudURlc2NyaXB0aW9uOiAnU2hvdyBvciBoaWRlIGNvbHVtbnMgbWVudScsXG4gIGFsbENvbHVtbnNTZWxlY3RlZDogJ0FsbCBjb2x1bW5zIHNlbGVjdGVkJyxcbiAgc2lnbnBvc3RUb2dnbGU6ICdTaWducG9zdCBUb2dnbGUnLFxuICBzaWducG9zdENsb3NlOiAnU2lnbnBvc3QgQ2xvc2UnLFxuICBsb2FkaW5nOiAnTG9hZGluZycsXG4gIC8vIERhdGFncmlkXG4gIGRldGFpbFBhbmVTdGFydDogJ1N0YXJ0IG9mIHJvdyBkZXRhaWxzJyxcbiAgZGV0YWlsUGFuZUVuZDogJ0VuZCBvZiByb3cgZGV0YWlscycsXG4gIHNpbmdsZVNlbGVjdGlvbkFyaWFMYWJlbDogJ1NpbmdsZSBzZWxlY3Rpb24gaGVhZGVyJyxcbiAgc2luZ2xlQWN0aW9uYWJsZUFyaWFMYWJlbDogJ1NpbmdsZSBhY3Rpb25hYmxlIGhlYWRlcicsXG4gIGRldGFpbEV4cGFuZGFibGVBcmlhTGFiZWw6ICdUb2dnbGUgbW9yZSByb3cgY29udGVudCcsXG4gIGRhdGFncmlkRmlsdGVyQXJpYUxhYmVsOiAnVG9nZ2xlIGNvbHVtbiBmaWx0ZXInLFxuICAvLyBBbGVydFxuICBhbGVydENsb3NlQnV0dG9uQXJpYUxhYmVsOiAnQ2xvc2UgYWxlcnQnLFxuICAvLyBEYXRlIFBpY2tlclxuICBkYXRlcGlja2VyVG9nZ2xlOiAnVG9nZ2xlIGRhdGVwaWNrZXInLFxuICBkYXRlcGlja2VyUHJldmlvdXNNb250aDogJ1ByZXZpb3VzIG1vbnRoJyxcbiAgZGF0ZXBpY2tlckN1cnJlbnRNb250aDogJ0N1cnJlbnQgbW9udGgnLFxuICBkYXRlcGlja2VyTmV4dE1vbnRoOiAnTmV4dCBtb250aCcsXG4gIGRhdGVwaWNrZXJQcmV2aW91c0RlY2FkZTogJ1ByZXZpb3VzIGRlY2FkZScsXG4gIGRhdGVwaWNrZXJOZXh0RGVjYWRlOiAnTmV4dCBkZWNhZGUnLFxuICBkYXRlcGlja2VyQ3VycmVudERlY2FkZTogJ0N1cnJlbnQgZGVjYWRlJyxcbiAgZGF0ZXBpY2tlclNlbGVjdE1vbnRoVGV4dDogJ1NlbGVjdCBtb250aCwgdGhlIGN1cnJlbnQgbW9udGggaXMge0NBTEVOREFSX01PTlRIfScsXG4gIGRhdGVwaWNrZXJTZWxlY3RZZWFyVGV4dDogJ1NlbGVjdCB5ZWFyLCB0aGUgY3VycmVudCB5ZWFyIGlzIHtDQUxFTkRBUl9ZRUFSfScsXG4gIGRheXBpY2tlclNSQ3VycmVudE1vbnRoUGhyYXNlOiAnVGhlIGN1cnJlbnQgbW9udGggaXMge0NVUlJFTlRfTU9OVEh9JyxcbiAgZGF5cGlja2VyU1JDdXJyZW50WWVhclBocmFzZTogJ1RoZSBjdXJyZW50IHllYXIgaXMge0NVUlJFTlRfWUVBUn0nLFxuICBkYXlwaWNrZXJTUkN1cnJlbnREZWNhZGVQaHJhc2U6ICdUaGUgY3VycmVudCBkZWNhZGUgaXMge0RFQ0FERV9SQU5HRX0nLFxuICAvLyBTdGFjayBWaWV3XG4gIHN0YWNrVmlld0NoYW5nZWQ6ICdWYWx1ZSBjaGFuZ2VkLicsXG4gIC8vIEZvcm1zXG4gIGZvcm1FcnJvclN1bW1hcnk6ICdUaGUgZm9ybSBoYXMge0VSUk9SX05VTUJFUn0gZXJyb3JzLicsXG4gIC8vVmVydGljYWwgTmF2XG4gIHZlcnRpY2FsTmF2VG9nZ2xlOiAnVG9nZ2xlIHZlcnRpY2FsIG5hdmlnYXRpb24nLFxuICB2ZXJ0aWNhbE5hdkdyb3VwVG9nZ2xlOiAnVG9nZ2xlIHZlcnRpY2FsIG5hdmlnYXRpb24gZ3JvdXAnLFxuICAvLyBUaW1lbGluZSBzdGVwc1xuICB0aW1lbGluZVN0ZXBOb3RTdGFydGVkOiAnTm90IHN0YXJ0ZWQnLFxuICB0aW1lbGluZVN0ZXBDdXJyZW50OiAnQ3VycmVudCcsXG4gIHRpbWVsaW5lU3RlcFN1Y2Nlc3M6ICdDb21wbGV0ZWQnLFxuICB0aW1lbGluZVN0ZXBFcnJvcjogJ0Vycm9yJyxcbiAgdGltZWxpbmVTdGVwUHJvY2Vzc2luZzogJ0luIHByb2dyZXNzJyxcbn07XG4iXX0=