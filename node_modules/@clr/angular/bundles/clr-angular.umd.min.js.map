{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@clr/angular/utils/popover/enums/viewport-violation.enum.ts","ng://@clr/angular/utils/popover/enums/alignment.enum.ts","ng://@clr/angular/icon/icon.ts","ng://@clr/angular/icon/icon.module.ts","ng://@clr/angular/utils/popover/providers/popover-toggle.service.ts","ng://@clr/angular/utils/popover/providers/popover-events.service.ts","ng://@clr/angular/utils/popover/position-operators.ts","ng://@clr/angular/utils/popover/enums/axis.enum.ts","ng://@clr/angular/utils/loading/loading.ts","ng://@clr/angular/utils/popover/providers/popover-position.service.ts","ng://@clr/angular/utils/popover/popover-content.ts","ng://@clr/angular/utils/popover/popover-open-close-button.ts","ng://@clr/angular/utils/popover/popover-close-button.ts","ng://@clr/angular/utils/popover/popover-anchor.ts","ng://@clr/angular/utils/popover/popover.module.ts","ng://@clr/angular/utils/loading/loading-listener.ts","ng://@clr/angular/button/providers/button-in-group.service.ts","ng://@clr/angular/button/button-group/button.ts","ng://@clr/angular/utils/i18n/common-strings.default.ts","ng://@clr/angular/utils/i18n/common-strings.service.ts","ng://@clr/angular/utils/id-generator/id-generator.service.ts","ng://@clr/angular/utils/popover/enums/side.enum.ts","ng://@clr/angular/utils/popover/enums/positions.enum.ts","ng://@clr/angular/utils/a11y/aria-live.service.ts","ng://@clr/angular/button/button-group/button-group.ts","ng://@clr/angular/button/button-group/button-group.module.ts","ng://@clr/angular/button/button-loading/loading-button.ts","ng://@clr/angular/button/button-loading/loading-button.module.ts","ng://@clr/angular/button/button.module.ts","ng://@clr/angular/utils/host-wrapping/empty-anchor.ts","ng://@clr/angular/utils/host-wrapping/host-wrapping.module.ts","ng://@clr/angular/forms/common/providers/control-id.service.ts","ng://@clr/angular/forms/common/providers/layout.service.ts","ng://@clr/angular/forms/common/providers/control-class.service.ts","ng://@clr/angular/forms/common/error.ts","ng://@clr/angular/forms/common/helper.ts","ng://@clr/angular/forms/common/providers/ng-control.service.ts","ng://@clr/angular/forms/common/if-error/if-error.service.ts","ng://@clr/angular/forms/common/if-error/if-error.ts","ng://@clr/angular/forms/common/label.ts","ng://@clr/angular/forms/common/providers/mark-control.service.ts","ng://@clr/angular/forms/common/form.ts","ng://@clr/angular/forms/common/layout.ts","ng://@clr/angular/forms/common/abstract-container.ts","ng://@clr/angular/forms/common/control-container.ts","ng://@clr/angular/utils/host-wrapping/host-wrapper.ts","ng://@clr/angular/forms/common/wrapped-control.ts","ng://@clr/angular/forms/common/control.ts","ng://@clr/angular/forms/common/common.module.ts","ng://@clr/angular/forms/checkbox/checkbox-wrapper.ts","ng://@clr/angular/forms/checkbox/checkbox.ts","ng://@clr/angular/forms/checkbox/checkbox-container.ts","ng://@clr/angular/forms/checkbox/checkbox.module.ts","ng://@clr/angular/utils/conditional/if-active.service.ts","ng://@clr/angular/utils/conditional/if-active.directive.ts","ng://@clr/angular/utils/conditional/if-open.directive.ts","ng://@clr/angular/utils/conditional/if-expanded.service.ts","ng://@clr/angular/utils/conditional/if-expanded.directive.ts","ng://@clr/angular/utils/conditional/conditional.module.ts","ng://@clr/angular/utils/focus-trap/focus-trap-tracker.service.ts","ng://@clr/angular/utils/focus-trap/focus-trap.directive.ts","ng://@clr/angular/utils/focus-trap/focus-trap.module.ts","ng://@clr/angular/forms/datepicker/utils/constants.ts","ng://@clr/angular/forms/datepicker/utils/date-utils.ts","ng://@clr/angular/forms/datepicker/model/day-view.model.ts","ng://@clr/angular/forms/datepicker/model/day.model.ts","ng://@clr/angular/forms/datepicker/model/calendar-view.model.ts","ng://@clr/angular/forms/datepicker/model/calendar.model.ts","ng://@clr/angular/forms/datepicker/providers/date-navigation.service.ts","ng://@clr/angular/forms/datepicker/providers/datepicker-focus.service.ts","ng://@clr/angular/forms/datepicker/providers/locale-helper.service.ts","ng://@clr/angular/forms/datepicker/providers/date-io.service.ts","ng://@clr/angular/forms/datepicker/calendar.ts","ng://@clr/angular/utils/key-codes/key-codes.ts","ng://@clr/angular/forms/common/providers/focus.service.ts","ng://@clr/angular/forms/datepicker/providers/date-form-control.service.ts","ng://@clr/angular/forms/datepicker/providers/datepicker-enabled.service.ts","ng://@clr/angular/utils/breakpoints/breakpoints.ts","ng://@clr/angular/forms/datepicker/providers/view-manager.service.ts","ng://@clr/angular/forms/datepicker/date-container.ts","ng://@clr/angular/utils/component/is-boolean-attribute-set.ts","ng://@clr/angular/forms/datepicker/date-input.ts","ng://@clr/angular/forms/datepicker/datepicker-view-manager.ts","ng://@clr/angular/forms/datepicker/day.ts","ng://@clr/angular/forms/datepicker/daypicker.ts","ng://@clr/angular/forms/datepicker/monthpicker.ts","ng://@clr/angular/forms/datepicker/model/year-range.model.ts","ng://@clr/angular/forms/datepicker/yearpicker.ts","ng://@clr/angular/forms/datepicker/datepicker.module.ts","ng://@clr/angular/forms/input/input-container.ts","ng://@clr/angular/forms/input/input.ts","ng://@clr/angular/forms/input/input.module.ts","ng://@clr/angular/forms/password/password-container.ts","ng://@clr/angular/utils/drag-and-drop/interfaces/drag-event.interface.ts","ng://@clr/angular/forms/password/password.ts","ng://@clr/angular/forms/password/password.module.ts","ng://@clr/angular/forms/radio/radio-wrapper.ts","ng://@clr/angular/forms/radio/radio.ts","ng://@clr/angular/forms/radio/radio-container.ts","ng://@clr/angular/forms/radio/radio.module.ts","ng://@clr/angular/forms/select/select-container.ts","ng://@clr/angular/forms/select/select.ts","ng://@clr/angular/forms/select/select.module.ts","ng://@clr/angular/forms/textarea/textarea-container.ts","ng://@clr/angular/forms/textarea/textarea.ts","ng://@clr/angular/forms/textarea/textarea.module.ts","ng://@clr/angular/forms/range/range-container.ts","ng://@clr/angular/forms/range/range.ts","ng://@clr/angular/forms/range/range.module.ts","ng://@clr/angular/forms/datalist/providers/datalist-id.service.ts","ng://@clr/angular/forms/datalist/datalist-container.ts","ng://@clr/angular/forms/datalist/datalist-input.ts","ng://@clr/angular/forms/datalist/datalist.ts","ng://@clr/angular/forms/datalist/datalist.module.ts","ng://@clr/angular/forms/forms.module.ts","ng://@clr/angular/utils/loading/loading.module.ts","ng://@clr/angular/utils/outside-click/outside-click.ts","ng://@clr/angular/utils/outside-click/index.ts","ng://@clr/angular/utils/outside-click/outside-click.module.ts","ng://@clr/angular/utils/dom-adapter/dom-adapter.ts","ng://@clr/angular/utils/drag-and-drop/drag-event.ts","ng://@clr/angular/data/datagrid/enums/sort-order.enum.ts","ng://@clr/angular/utils/drag-and-drop/providers/drag-and-drop-event-bus.service.ts","ng://@clr/angular/utils/drag-and-drop/providers/drag-event-listener.service.ts","ng://@clr/angular/utils/drag-and-drop/providers/draggable-snapshot.service.ts","ng://@clr/angular/utils/drag-and-drop/draggable-ghost.ts","ng://@clr/angular/utils/drag-and-drop/if-dragged.ts","ng://@clr/angular/utils/drag-and-drop/providers/drag-handle-registrar.service.ts","ng://@clr/angular/utils/drag-and-drop/providers/global-drag-mode.service.ts","ng://@clr/angular/utils/drag-and-drop/draggable/draggable.ts","ng://@clr/angular/utils/drag-and-drop/droppable/droppable.ts","ng://@clr/angular/utils/drag-and-drop/drag-handle.ts","ng://@clr/angular/utils/drag-and-drop/drag-and-drop.module.ts","ng://@clr/angular/utils/animations/expandable-animation/expandable-animation.ts","ng://@clr/angular/utils/animations/expandable-animation/index.ts","ng://@clr/angular/utils/animations/expandable-animation/expandable-animation.module.ts","ng://@clr/angular/progress/spinner/spinner.ts","ng://@clr/angular/progress/spinner/spinner.module.ts","ng://@clr/angular/utils/focus/focus-on-view-init/focus-on-view-init.provider.ts","ng://@clr/angular/utils/focus/focus-on-view-init/focus-on-view-init.ts","ng://@clr/angular/utils/focus/focus-on-view-init/focus-on-view-init.module.ts","ng://@clr/angular/data/datagrid/providers/custom-filter.ts","ng://@clr/angular/data/datagrid/providers/state-debouncer.provider.ts","ng://@clr/angular/data/datagrid/providers/page.ts","ng://@clr/angular/data/datagrid/providers/filters.ts","ng://@clr/angular/data/datagrid/utils/datagrid-filter-registrar.ts","ng://@clr/angular/data/datagrid/datagrid-filter.ts","ng://@clr/angular/data/datagrid/built-in/nested-property.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-property-string-filter.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-string-filter-impl.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-string-filter.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-property-numeric-filter.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-numeric-filter-impl.ts","ng://@clr/angular/data/datagrid/built-in/filters/datagrid-numeric-filter.ts","ng://@clr/angular/utils/chocolate/oompa-loompa.ts","ng://@clr/angular/data/datagrid/providers/row-action-service.ts","ng://@clr/angular/utils/chocolate/willy-wonka.ts","ng://@clr/angular/data/datagrid/chocolate/datagrid-willy-wonka.ts","ng://@clr/angular/data/datagrid/chocolate/actionable-oompa-loompa.ts","ng://@clr/angular/data/datagrid/providers/detail.service.ts","ng://@clr/angular/data/datagrid/providers/global-expandable-rows.ts","ng://@clr/angular/data/datagrid/chocolate/expandable-oompa-loompa.ts","ng://@clr/angular/data/datagrid/built-in/comparators/datagrid-property-comparator.ts","ng://@clr/angular/data/datagrid/enums/display-mode.enum.ts","ng://@clr/angular/data/datagrid/enums/render-step.enum.ts","ng://@clr/angular/data/datagrid/providers/sort.ts","ng://@clr/angular/data/datagrid/wrapped-column.ts","ng://@clr/angular/data/datagrid/datagrid-column.ts","ng://@clr/angular/data/datagrid/providers/items.ts","ng://@clr/angular/data/datagrid/datagrid-items.ts","ng://@clr/angular/data/datagrid/datagrid-placeholder.ts","ng://@clr/angular/popover/common/popover-host-anchor.token.ts","ng://@clr/angular/popover/signpost/providers/signpost-focus-manager.service.ts","ng://@clr/angular/popover/signpost/providers/signpost-id.service.ts","ng://@clr/angular/popover/signpost/signpost-trigger.ts","ng://@clr/angular/popover/signpost/signpost.ts","ng://@clr/angular/data/datagrid/wrapped-cell.ts","ng://@clr/angular/data/datagrid/datagrid-cell.ts","ng://@clr/angular/data/datagrid/enums/selection-type.ts","ng://@clr/angular/data/datagrid/render/render-organizer.ts","ng://@clr/angular/data/datagrid/providers/display-mode.service.ts","ng://@clr/angular/data/datagrid/providers/selection.ts","ng://@clr/angular/data/datagrid/enums/column-changes.enum.ts","ng://@clr/angular/data/datagrid/wrapped-row.ts","ng://@clr/angular/data/datagrid/datagrid-if-expanded.service.ts","ng://@clr/angular/data/datagrid/datagrid-row.ts","ng://@clr/angular/data/datagrid/providers/state.provider.ts","ng://@clr/angular/data/datagrid/providers/table-size.service.ts","ng://@clr/angular/data/datagrid/providers/columns.service.ts","ng://@clr/angular/data/datagrid/datagrid.ts","ng://@clr/angular/data/datagrid/datagrid-action-bar.ts","ng://@clr/angular/data/datagrid/datagrid-action-overflow.ts","ng://@clr/angular/data/datagrid/providers/column-resizer.service.ts","ng://@clr/angular/data/datagrid/datagrid-column-separator.ts","ng://@clr/angular/data/datagrid/datagrid-column-toggle-title.ts","ng://@clr/angular/data/datagrid/datagrid-column-toggle-button.ts","ng://@clr/angular/data/datagrid/datagrid-column-toggle.ts","ng://@clr/angular/data/datagrid/datagrid-detail-registerer.ts","ng://@clr/angular/data/datagrid/datagrid-detail-header.ts","ng://@clr/angular/data/datagrid/datagrid-detail.ts","ng://@clr/angular/data/datagrid/datagrid-if-detail.ts","ng://@clr/angular/data/datagrid/datagrid-detail-body.ts","ng://@clr/angular/data/datagrid/datagrid-footer.ts","ng://@clr/angular/data/datagrid/providers/column-state.provider.ts","ng://@clr/angular/utils/enums/key-codes.enum.ts","ng://@clr/angular/data/tree-view/models/selected-state.enum.ts","ng://@clr/angular/data/datagrid/datagrid-hideable-column.ts","ng://@clr/angular/data/datagrid/datagrid-items-trackby.ts","ng://@clr/angular/data/datagrid/datagrid-page-size.ts","ng://@clr/angular/data/datagrid/datagrid-pagination.ts","ng://@clr/angular/data/datagrid/datagrid-row-detail.ts","ng://@clr/angular/data/datagrid/render/cell-renderer.ts","ng://@clr/angular/data/datagrid/render/constants.ts","ng://@clr/angular/data/datagrid/render/header-renderer.ts","ng://@clr/angular/data/datagrid/render/noop-dom-adapter.ts","ng://@clr/angular/data/datagrid/render/row-renderer.ts","ng://@clr/angular/data/datagrid/render/main-renderer.ts","ng://@clr/angular/data/datagrid/datagrid.module.ts","ng://@clr/angular/data/stack-view/stack-block.ts","ng://@clr/angular/data/stack-view/stack-view.ts","ng://@clr/angular/data/stack-view/stack-header.ts","ng://@clr/angular/data/stack-view/stack-control.ts","ng://@clr/angular/data/stack-view/stack-input.ts","ng://@clr/angular/data/stack-view/stack-select.ts","ng://@clr/angular/data/stack-view/stack-view-custom-tags.ts","ng://@clr/angular/data/stack-view/stack-content-input.ts","ng://@clr/angular/data/stack-view/stack-view.module.ts","ng://@clr/angular/utils/focus/key-focus/util.ts","ng://@clr/angular/data/tree-view/models/tree-node.model.ts","ng://@clr/angular/data/tree-view/models/declarative-tree-node.model.ts","ng://@clr/angular/data/tree-view/tree-features.service.ts","ng://@clr/angular/data/tree-view/tree-focus-manager.service.ts","ng://@clr/angular/data/tree-view/tree-node-link.ts","ng://@clr/angular/data/tree-view/tree-node.ts","ng://@clr/angular/data/tree-view/tree.ts","ng://@clr/angular/data/tree-view/models/recursive-tree-node.model.ts","ng://@clr/angular/utils/focus/arrow-key-direction.enum.ts","ng://@clr/angular/data/tree-view/models/async-array.ts","ng://@clr/angular/data/tree-view/recursive-for-of.ts","ng://@clr/angular/data/tree-view/recursive-children.ts","ng://@clr/angular/data/tree-view/tree-view.module.ts","ng://@clr/angular/data/data.module.ts","ng://@clr/angular/utils/focus/focusable-item/focusable-item.ts","ng://@clr/angular/utils/focus/focusable-item/custom-focusable-item-provider.ts","ng://@clr/angular/utils/focus/focus.service.ts","ng://@clr/angular/utils/focus/focusable-item/linkers.ts","ng://@clr/angular/utils/focus/wrap-observable.ts","ng://@clr/angular/popover/dropdown/providers/dropdown-focus-handler.service.ts","ng://@clr/angular/popover/dropdown/providers/dropdown.service.ts","ng://@clr/angular/popover/common/popover.ts","ng://@clr/angular/popover/dropdown/dropdown.ts","ng://@clr/angular/utils/focus/focusable-item/basic-focusable-item.service.ts","ng://@clr/angular/popover/dropdown/dropdown-item.ts","ng://@clr/angular/layout/tabs/enums/tabs-layout.enum.ts","ng://@clr/angular/popover/common/abstract-popover.ts","ng://@clr/angular/popover/dropdown/dropdown-menu.ts","ng://@clr/angular/popover/dropdown/dropdown-trigger.ts","ng://@clr/angular/popover/dropdown/dropdown.module.ts","ng://@clr/angular/emphasis/alert/utils/alert-types.ts","ng://@clr/angular/emphasis/alert/providers/icon-and-types.service.ts","ng://@clr/angular/emphasis/alert/providers/multi-alert.service.ts","ng://@clr/angular/emphasis/alert/alert-text.ts","ng://@clr/angular/emphasis/alert/alert.ts","ng://@clr/angular/emphasis/alert/alert-item.ts","ng://@clr/angular/emphasis/alert/alerts.ts","ng://@clr/angular/emphasis/alert/alerts-pager.ts","ng://@clr/angular/emphasis/alert/alert.module.ts","ng://@clr/angular/emphasis/emphasis.module.ts","ng://@clr/angular/layout/nav/responsive-nav-codes.ts","ng://@clr/angular/layout/nav/responsive-nav-control-message.ts","ng://@clr/angular/layout/nav/providers/responsive-navigation.service.ts","ng://@clr/angular/layout/main-container/main-container.ts","ng://@clr/angular/layout/main-container/main-container.module.ts","ng://@clr/angular/layout/nav/chocolate/main-container-willy-wonka.ts","ng://@clr/angular/layout/nav/chocolate/nav-detection-oompa-loompa.ts","ng://@clr/angular/layout/nav/header.ts","ng://@clr/angular/layout/nav/nav-level.ts","ng://@clr/angular/layout/nav/navigation.module.ts","ng://@clr/angular/utils/template-ref/template-ref-container.ts","ng://@clr/angular/utils/template-ref/index.ts","ng://@clr/angular/utils/template-ref/template-ref.module.ts","ng://@clr/angular/layout/tabs/chocolate/tabs-willy-wonka.ts","ng://@clr/angular/layout/tabs/chocolate/active-oompa-loompa.ts","ng://@clr/angular/layout/tabs/providers/aria.service.ts","ng://@clr/angular/layout/tabs/providers/tabs.service.ts","ng://@clr/angular/layout/tabs/tab-content.ts","ng://@clr/angular/layout/tabs/tabs-id.provider.ts","ng://@clr/angular/utils/focus/key-focus/enums/focus-direction.enum.ts","ng://@clr/angular/layout/tabs/tab-link.directive.ts","ng://@clr/angular/layout/tabs/tab.ts","ng://@clr/angular/layout/tabs/tab-overflow-content.ts","ng://@clr/angular/accordion/enums/accordion-strategy.enum.ts","ng://@clr/angular/accordion/enums/accordion-status.enum.ts","ng://@clr/angular/utils/focus/key-focus/key-focus-item.ts","ng://@clr/angular/utils/focus/key-focus/key-focus.ts","ng://@clr/angular/layout/tabs/tabs.ts","ng://@clr/angular/utils/focus/key-focus/key-focus.module.ts","ng://@clr/angular/layout/tabs/tabs.module.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav-group-registration.service.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav-icon.service.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav.service.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav.ts","ng://@clr/angular/layout/vertical-nav/providers/vertical-nav-group.service.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-group.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-group-children.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-icon.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav-link.ts","ng://@clr/angular/layout/vertical-nav/vertical-nav.module.ts","ng://@clr/angular/layout/layout.module.ts","ng://@clr/angular/utils/scrolling/scrolling-service.ts","ng://@clr/angular/modal/modal.ts","ng://@clr/angular/modal/modal-body.ts","ng://@clr/angular/modal/modal.module.ts","ng://@clr/angular/popover/signpost/signpost-positions.ts","ng://@clr/angular/popover/signpost/signpost-content.ts","ng://@clr/angular/popover/signpost/signpost.module.ts","ng://@clr/angular/popover/tooltip/providers/tooltip-id.service.ts","ng://@clr/angular/popover/tooltip/tooltip.ts","ng://@clr/angular/popover/tooltip/tooltip-content.ts","ng://@clr/angular/popover/tooltip/tooltip-trigger.ts","ng://@clr/angular/popover/tooltip/tooltip.module.ts","ng://@clr/angular/popover/popover.module.ts","ng://@clr/angular/wizard/providers/button-hub.service.ts","ng://@clr/angular/wizard/providers/page-collection.service.ts","ng://@clr/angular/wizard/providers/wizard-navigation.service.ts","ng://@clr/angular/wizard/providers/header-actions.service.ts","ng://@clr/angular/wizard/wizard-header-action.ts","ng://@clr/angular/wizard/wizard-page-buttons.ts","ng://@clr/angular/wizard/wizard-page-header-actions.ts","ng://@clr/angular/wizard/wizard-page-navtitle.ts","ng://@clr/angular/wizard/wizard-page-title.ts","ng://@clr/angular/wizard/wizard-page.ts","ng://@clr/angular/wizard/wizard.ts","ng://@clr/angular/wizard/wizard-button.ts","ng://@clr/angular/wizard/wizard-custom-tags.ts","ng://@clr/angular/wizard/wizard-stepnav.ts","ng://@clr/angular/wizard/wizard-stepnav-item.ts","ng://@clr/angular/wizard/wizard.module.ts","ng://@clr/angular/accordion/models/accordion.model.ts","ng://@clr/angular/accordion/providers/accordion.service.ts","ng://@clr/angular/accordion/utils/animation.ts","ng://@clr/angular/utils/animations/constants.ts","ng://@clr/angular/accordion/accordion-description.ts","ng://@clr/angular/accordion/accordion-panel.ts","ng://@clr/angular/accordion/accordion-title.ts","ng://@clr/angular/accordion/accordion.ts","ng://@clr/angular/accordion/accordion-content.ts","ng://@clr/angular/accordion/chocolate/accordion-willy-wonka.ts","ng://@clr/angular/accordion/chocolate/accordion-oompa-loompa.ts","ng://@clr/angular/accordion/accordion.module.ts","ng://@clr/angular/accordion/stepper/models/stepper.model.ts","ng://@clr/angular/accordion/stepper/providers/stepper.service.ts","ng://@clr/angular/accordion/stepper/step-button.ts","ng://@clr/angular/accordion/stepper/stepper-panel.ts","ng://@clr/angular/utils/forms/validation.ts","ng://@clr/angular/timeline/enums/timeline-layout.enum.ts","ng://@clr/angular/timeline/enums/timeline-step-state.enum.ts","ng://@clr/angular/accordion/stepper/stepper.ts","ng://@clr/angular/accordion/stepper/chocolate/stepper-willy-wonka.ts","ng://@clr/angular/accordion/stepper/chocolate/stepper-oompa-loompa.ts","ng://@clr/angular/accordion/stepper/stepper.module.ts","ng://@clr/angular/progress/progress-bars/progress-bar.ts","ng://@clr/angular/progress/progress-bars/progress-bar.module.ts","ng://@clr/angular/timeline/providers/timeline-icon-attribute.service.ts","ng://@clr/angular/timeline/timeline.ts","ng://@clr/angular/timeline/timeline-step-title.ts","ng://@clr/angular/timeline/timeline-step.ts","ng://@clr/angular/timeline/timeline-step-description.ts","ng://@clr/angular/timeline/timeline-step-header.ts","ng://@clr/angular/timeline/timeline.module.ts","ng://@clr/angular/clr-angular.module.ts","ng://@clr/angular/popover/dropdown/menu-positions.ts","ng://@clr/angular/utils/animations/collapse/collapse.ts","ng://@clr/angular/utils/animations/fade/fade.ts","ng://@clr/angular/utils/animations/fade-slide/fade-slide.ts","ng://@clr/angular/utils/animations/slide/slide.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__values","o","Symbol","iterator","m","next","value","done","TypeError","__read","e","ar","push","error","__spread","concat","ClrViewportViolation","ClrAlignment","ClrIconCustomTag","Directive","selector","CLR_ICON_DIRECTIVES","ClrIconModule","NgModule","imports","CommonModule","declarations","exports","ClrPopoverToggleService","_open","_openChange","Subject","_openEventChange","asObservable","_openEvent","event","getEventChange","toggleWithEvent","openEvent","open","Injectable","ClrPopoverEventsService","renderer","smartOpenService","document","_this","outsideClickClose","scrollToClose","subscriptions","openChange","subscribe","addEscapeListener","addClickListener","addScrollListener","removeAllEventListeners","ignoredEvent","documentScroller","fromEvent","capture","scrollSubscription","pipe","filter","testForSmartPopoverContentContainer","setAnchorFocus","removeScrollListener","unsubscribe","classList","parentElement","localName","contains","documentClickListener","listen","focus","removeClickListener","escapeListener","removeEscapeListener","_anchorButtonRef","ref","_closeButtonRef","setCloseFocus","nativeElement","anchorButtonRef","_contentRef","host","ngOnDestroy","forEach","sub","Renderer2","HTMLDocument","type","Inject","args","DOCUMENT","ClrAxis","flipSides","position","side","nudgeContent","forward","nextAlignment","content","flipSidesAndNudgeContent","flip","nudge","nudgeBack","align","anchor","xDiff","left","yDiff","top","axis","alignHorizontal","height","width","alignVertical","xOffset","yOffset","horizontalOffset","START","CENTER","END","verticalOffset","ClrLoadingState","ClrPopoverPositionService","eventService","platformId","_shouldRealign","shouldRealign","realign","_position","alignContent","isPlatformBrowser","currentAnchorCoords","getBoundingClientRect","currentContentCoords","contentOffsets","visibilityViolations","offset","violations","mockCoords","TOP","LEFT","window","innerHeight","documentElement","clientHeight","BOTTOM","innerWidth","clientWidth","RIGHT","testVisibility","errorSum","reduce","count","current","VERTICAL","handleVerticalAxisOneViolation","HORIZONTAL","handleHorizontalAxisOneViolation","handleVerticalAxisTwoViolations","handleHorizontalAxisTwoViolations","flipAndNudgeLeft","flipAndNudgeRight","flipAndNudgeDown","flipAndNudgeUp","PLATFORM_ID","ClrPopoverContent","container","template","smartPositionService","smartEventsService","checkCollector","EventEmitter","clickToClose","ngAfterViewInit","change","addContent","removeContent","setStyle","view","rootNodes","debounceTime","node","removeChild","body","clear","createEmbeddedView","contentRef","addClass","appendChild","ngAfterContentChecked","emit","positionCoords","ViewContainerRef","TemplateRef","Input","ClrPopoverOpenCloseButton","openCloseChange","handleClick","Output","HostListener","[class.clr-smart-open-close]","ClrPopoverCloseButton","elementRef","closeChange","closeButtonRef","ElementRef","[class.clr-smart-close-button]","ClrPopoverAnchor","smartEventService","element","[class.clr-anchor]","ClrPopoverModuleNext","LoadingListener","ClrLoading","listener","_loadingState","DEFAULT","LOADING","loadingStateChange","loadingState","Optional","ButtonInGroupService","_changes","updateButtonGroup","button","ClrButton","buttonInGroupService","toggleService","_enableService","_inMenu","_classNames","_name","_type","_id","_disabled","_click","classNames","split","indexOf","join","state","loading","emitClick","$event","inMenu","SkipSelf","ViewChild","static","ClrButton_1","Component","providers","provide","useExisting","commonStringsDefault","close","show","hide","expand","collapse","more","select","selectAll","previous","info","success","warning","danger","rowActions","pickColumns","showColumns","sortColumn","firstPage","lastPage","nextPage","previousPage","currentPage","totalPages","minValue","maxValue","modalContentStart","modalContentEnd","showColumnsMenuDescription","allColumnsSelected","signpostToggle","signpostClose","detailPaneStart","detailPaneEnd","singleSelectionAriaLabel","singleActionableAriaLabel","detailExpandableAriaLabel","datagridFilterAriaLabel","alertCloseButtonAriaLabel","datepickerToggle","datepickerPreviousMonth","datepickerCurrentMonth","datepickerNextMonth","datepickerPreviousDecade","datepickerNextDecade","datepickerCurrentDecade","datepickerSelectMonthText","datepickerSelectYearText","daypickerSRCurrentMonthPhrase","daypickerSRCurrentYearPhrase","daypickerSRCurrentDecadePhrase","stackViewChanged","formErrorSummary","verticalNavToggle","verticalNavGroupToggle","timelineStepNotStarted","timelineStepCurrent","timelineStepSuccess","timelineStepError","timelineStepProcessing","ClrCommonStringsService","_strings","localize","overrides","parse","source","tokens","names","keys","output","name","replace","providedIn","NB_INSTANCES","UNIQUE_ID","InjectionToken","uniqueIdFactory","ClrSide","UNIQUE_ID_PROVIDER","useFactory","ClrAriaLivePoliteness","ClrPopoverPositions","BEFORE","AFTER","ClrButtonGroup","buttonGroupNewService","popoverId","commonStrings","popoverPosition","inlineButtons","menuButtons","ngAfterContentInit","initializeButtons","changes","rearrangeButton","buttons","fromView","toView","index","splice","moveIndex","getMoveIndex","buttonToMove","tempInlineButtons","tempInMenuButtons","_menuPosition","pos","ContentChildren","[class.btn-group]","CLR_BUTTON_GROUP_DIRECTIVES","ClrButtonGroupModule","ClrLoadingButton","el","buttonState","clrLoadingChange","removeStyle","disabled","removeAttribute","setExplicitButtonWidth","setAttribute","SUCCESS","ERROR","boundingClientRect","ClrLoadingButton_1","animations","trigger","transition","style","opacity","animate","keyframes","transform","[attr.disabled]","CLR_LOADING_BUTTON_DIRECTIVES","ClrLoadingButtonModule","ClrButtonModule","EmptyAnchor","ClrHostWrappingModule","entryComponents","counter","ControlIdService","_idChange","BehaviorSubject","Layouts","ClrAriaLiveService","ngZone","_document","announce","message","politeness","polite","off","ariaLiveElement","createContainer","textContent","runOutsideAngular","clearTimeout","previousTimeout","setTimeout","createElement","id","add","NgZone","LayoutService","minLabelSize","maxLabelSize","layout","layoutValues","map","_labelSize","size","labelSizeIsValid","isVertical","isHorizontal","isCompact","COMPACT","isValid","labelSize","Number","isInteger","ControlClassService","layoutService","className","controlClass","invalid","grid","additional","controlClasses","trim","initControlClass","klass","startsWith","removeClass","ClrControlError","controlIdService","controlClassService","ariaLiveService","[class.clr-subtext]","[id]","ClrControlHelper","NgControlService","_controlChanges","setControl","control","IfErrorService","ngControlService","_statusChanges","controlChanges","listenForChanges","statusChanges","sendValidity","touched","triggerStatusChange","ClrIfError","ifErrorService","displayed","Error","displayError","hasError","getError","ClrLabel","enableGrid","ngOnInit","forAttr","idChange","disableGrid","HostBinding","MarkControlService","_touched","markAsTouched","ClrForm","markControlService","invalidControls","markAsDirty","updateAriaLiveText","from","querySelectorAll","updateAriaLive","onFormSubmit","errorList","labels","label","find","ERROR_NUMBER","toString","descendants","[class.clr-form]","[class.clr-form-horizontal]","[class.clr-form-compact]","ClrLayout","ClrAbstractContainer","_dynamic","addGrid","ContentChild","ClrControlContainer","_super","[class.clr-form-control]","[class.clr-form-control-disabled]","[class.clr-row]","HostWrapper","containerType","vcr","injector","get","cfr","ComponentFactoryResolver","createComponent","resolveComponentFactory","factory","containerRef","undefined","remove","instance","token","notFoundValue","WrappedFormControl","wrapperType","ngControl","touchedChange","updateValueAndValidity","triggerValidation","getProviderFromContainer","_containerInjector","listenForErrorStateChanges","startWith","distinctUntilChanged","setAriaDescribedBy","getAriaDescribedById","Type","Injector","NgControl","ClrControl","Self","[class.clr-input]","ClrCommonFormsModule","IS_TOGGLE","isToggleFactory","IS_TOGGLE_PROVIDER","ClrCheckboxWrapper","toggle","[class.clr-checkbox-wrapper]","[class.clr-toggle-wrapper]","ClrCheckbox","Attribute","ClrCheckboxContainer","inline","ClrCheckboxModule","activeCounter","IF_ACTIVE_ID","tokenFactory","IF_ACTIVE_ID_PROVIDER","IfActiveService","_currentChange","_current","ClrIfActive","ifActiveService","wasActive","activeChange","checkAndUpdateView","subscription","currentChange","newCurrentId","currentId","isNowActive","updateView","ClrIfOpen","IfExpandService","expandable","_loading","_expanded","_expandChange","expanded","ClrIfExpanded","expandedChange","_subscriptions","expandChange","CONDITIONAL_DIRECTIVES","ClrConditionalModule","FocusTrapTracker","_previousFocusTraps","activatePreviousTrapper","pop","FocusTrapDirective","focusTrapsTracker","localFocusEscaped","_config","strict","config","onFocusIn","bottomReboundEl","previousTrappedActiveElement","topReboundEl","createFocusableOffScreenEl","offScreenSpan","addReboundEls","hostElement","insertBefore","nextSibling","parentNode","removeReboundEls","setPreviousFocus","previousActiveElement","activeElement","FOCUS_TRAP_DIRECTIVES","ClrFocusTrapModule","LITTLE_ENDIAN_REGEX","MIDDLE_ENDIAN_REGEX","DELIMITER_REGEX","USER_INPUT_REGEX","MOBILE_USERAGENT_REGEX","RTL_REGEX","LITTLE_ENDIAN","format","MIDDLE_ENDIAN","BIG_ENDIAN","getNumberOfDaysInTheMonth","year","month","Date","getDate","DayViewModel","dayModel","isTodaysDate","isExcluded","isDisabled","isSelected","isFocusable","DayModel","date","isEqual","day","toDate","incrementBy","getFullYear","getMonth","clone","toComparisonString","pad","num","toDateString","toLocaleDateString","CalendarViewModel","calendar","selectedDay","focusableDay","today","firstDayOfWeek","excludedDates","currMonthDayViews","initializeCalendarView","_calendarView","prevMonthCalendar","previousMonth","nextMonthCalendar","nextMonth","daysFromPrevMonthInCalView","numDaysFromPrevMonthInCalView","daysFromNextMonthInCalView","NO_OF_DAYS_IN_A_WEEK","days","prevMonthDayViews","nextMonthDayViews","generateDayViewModels","slice","generateCalendarView","initializeSelectedDay","initializeFocusableDay","isDateExcluded","_a","minDate","maxDate","to","isCurrentCalendar","dayViews","isDayInCalendar","currentYear","currentMonth","firstDayOfCurrMonth","getDay","isDayInCalendarView","prev","curr","combinationArr","calendarView","setFocusableFlag","flag","updateFocusableDay","CalendarModel","initializeDaysInCalendar","noOfDaysInCalendar","fill","DateNavigationService","_todaysFullDate","_selectedDayChange","_displayedCalendarChange","_focusOnCalendarChange","_focusedDayChange","_displayedCalendar","setDisplayedCalendar","initializeTodaysDate","_today","notifySelectedDayChanged","initializeCalendar","focusedDay","changeMonth","changeYear","moveToNextMonth","moveToPreviousMonth","moveToCurrentMonth","displayedCalendar","incrementFocusDay","DatepickerFocusService","_ngZone","focusCell","elRef","ngZoneIsStableInBrowser","focusEl","querySelector","focusInput","elementIsFocused","onStable","first","LocaleHelperService","locale","_firstDayOfWeek","initializeLocaleData","_localeDays","narrow","_localeMonthsAbbreviated","_localeMonthsWide","_localeDateFormat","initializeFirstDayOfWeek","initializeLocaleDateFormat","initializeLocaleMonthsAbbreviated","initializeLocaleMonthsWide","initializeLocaleDays","tempArr","tempWideArr","getLocaleDayNames","FormStyle","Standalone","TranslationWidth","Wide","tempNarrowArr","Narrow","prevDays","getLocaleMonthNames","Abbreviated","getLocaleFirstDayOfWeek","getLocaleDateFormat","FormatWidth","Short","LOCALE_ID","DateIOService","_localeHelperService","disabledDates","cldrLocaleDateFormat","localeDisplayFormat","delimiters","localeDateFormat","initializeLocaleDisplayFormat","setMinDate","parseInt","setMaxDate","toLocaleLowerCase","test","extractDelimiters","console","toLocaleDisplayFormatString","isNaN","getTime","dateNo","monthNo","dateStr","monthStr","isValidMonth","isValidDate","validateAndGetDate","y","result","currYear","Math","floor","parseToFourDigitYear","getDateValueFromDateString","dateParts","match","firstPart","secondPart","thirdPart","ClrCalendar","_dateNavigationService","_datepickerFocusService","_dateIOService","_elRef","_subs","initializeSubscriptions","localeDays","displayedCalendarChange","focusedDayChange","calendarViewModel","focusOnCalendarChange","onKeyDown","keyCode","preventDefault","FocusService","_focused","DateFormControlService","_touchedChange","_dirtyChange","setDisabled","DatepickerEnabledService","_isUserAgentMobile","defaultView","navigator","userAgent","_innerWidth","ViewManagerService","_currentView","changeToMonthView","changeToYearView","changeToDayView","ClrDateContainer","dateNavigationService","datepickerEnabledService","dateFormControlService","focusService","viewManagerService","focusChange","toggleButton","isEnabled","isBooleanAttributeSet","ClrDateInput","viewContainerRef","dateIOService","datepickerFocusService","dateChange","previousDateChange","updateDate","getValidDateValueFromDate","initialClrDateInputValue","dateString","populateServicesFromContainerComponent","listenForUserSelectedDayChanges","listenForControlValueChanges","listenForTouchChanges","listenForDirtyChanges","listenForInputRefocus","processInitialInputs","setFocusStates","setFocus","placeholder","placeholderText","usingNativeDatepicker","onValueChange","validDateValue","usingClarityDatepicker","emitDateOutput","focused","datepickerHasFormControl","setByUserInteraction","updateInput","setMinutes","getMinutes","getTimezoneOffset","setProperty","setValue","date1","date2","of","hasControl","switchMap","valueChanges","selectedDayChange","dirtyChange","v","ClrDatepickerViewManager","isMonthView","isYearView","isDayView","[class.datepicker]","[attr.aria-modal]","ClrDay","_toggleService","_dayView","dayString","onDayViewFocus","dayView","selectDay","[class.day]","ClrDaypicker","_viewManagerService","ariaLiveMonth","updateAriaLiveYear","CALENDAR_MONTH","calendarMonth","CALENDAR_YEAR","calendarYear","CURRENT_MONTH","CURRENT_YEAR","localeMonthsAbbreviated","[class.daypicker]","ClrMonthpicker","_focusedMonthIndex","calendarMonthIndex","localeMonthsWide","monthIndex","getTabIndex","[class.monthpicker]","YearRangeModel","yearRange","generateYearRange","remainder","ceil","generateRange","k","nextDecade","previousDecade","currentDecade","inRange","ClrYearpicker","yearRangeModel","_focusedYear","updateRange","DECADE_RANGE","decadeRange","incrementFocusYearBy","middleYear","yrm","ariaLiveDecadeText","[class.yearpicker]","CLR_DATEPICKER_DIRECTIVES","ClrDatepickerModule","ClrInputContainer","ClrInput","ClrInputModule","FormsModule","TOGGLE_SERVICE","ToggleServiceFactory","DragEventType","TOGGLE_SERVICE_PROVIDER","ClrPasswordContainer","_toggle","ClrPassword","triggerFocus","ClrPasswordModule","ClrRadioWrapper","[class.clr-radio-wrapper]","ClrRadio","ClrRadioContainer","ClrRadioModule","ClrSelectContainer","multi","valueAccessor","SelectMultipleControlValueAccessor","wrapperClass","ClrSelect","[class.clr-select]","ClrSelectModule","ClrTextareaContainer","ClrTextarea","[class.clr-textarea]","ClrTextareaModule","ClrRangeContainer","idService","_hasProgress","val","valBool","getRangeProgressFillWidth","input","selectRootElement","inputWidth","offsetWidth","inputMinValue","min","inputMaxValue","max","inputMiddle","ClrRange","[class.clr-range]","ClrRangeModule","DatalistIdService","ClrDatalistContainer","ClrDatalistInput","datalistIdService","listValue","[attr.list]","ClrDatalist","datalistId","idValue","ClrDatalistModule","ClrFormsModule","CLR_LOADING_DIRECTIVES","ClrLoadingModule","OutsideClick","outsideClick","documentClick","OUSTIDE_CLICK_DIRECTIVES","ClrOutsideClickModule","DomAdapter","userDefinedWidth","clientRect","scrollBarWidth","scrollWidth","computedHeight","getComputedStyle","getPropertyValue","elementClientRect","bottom","right","minWidth","ClrDragEvent","dragEvent","dragPosition","group","dragDataTransfer","dropPointPosition","ClrDatagridSortOrder","DragAndDropEventBusService","dragStart","dragMove","dragEnd","drop","broadcast","DRAG_START","DRAG_MOVE","DRAG_END","DROP","DragEventListenerService","eventBus","hasDragStarted","attachDragListeners","draggableEl","listeners","customDragEvent","detachDragListeners","nestedListeners","getNativeEventObject","changedTouches","startOnEvent","moveOnEvent","endOnEvent","startEvent","initialPosition","pageX","pageY","selectEvent","stopImmediatePropagation","moveEvent","endEvent","eventType","generateDragEvent","ghostElement","nativeEvent","moveX","moveY","DraggableSnapshotService","domAdapter","draggableElClientRect","snapshotDragEvent","discard","ClrDraggableGhost","dragEventListener","draggableSnapshot","leaveAnimConfig","params","draggableGhostEl","setDefaultGhostSize","hasDraggableState","isAnimationConfigured","dragMoved","animateToOnLeave","topLeftPosition","findTopLeftPosition","setPositionStyle","findDropPointPosition","setSizeStyle","run","ClrIfDragged","dragStarted","dragEnded","DragHandleRegistrarService","_defaultHandleEl","_customHandleEl","makeElementHandle","registerCustomHandle","unregisterCustomHandle","GlobalDragModeService","enter","exit","ClrDraggable","dragHandleRegistrar","globalDragMode","dragOn","dragStartEmitter","dragMoveEmitter","dragEndEmitter","componentFactory","createDefaultGhost","cloneNode","destroyDefaultGhost","defaultHandleEl","customGhost","[class.draggable]","[class.being-dragged]","ClrDroppable","isDraggableMatch","_isDraggableOver","_dropTolerance","dragLeaveEmitter","dragEnterEmitter","dropEmitter","droppableEl","_group","dropToleranceGenerator","toleranceValues","tolerance","unsubscribeFrom","checkGroupMatch","draggableGroup","some","groupKey","isInDropArea","point","onDragStart","dragStartEvent","dragMoveSubscription","dragMoveEvent","onDragMove","dragEndSubscription","dragEndEvent","onDragEnd","isDraggableOver","dragEnterEvent","DRAG_ENTER","dragLeaveEvent","DRAG_LEAVE","dropEvent","dragStartSubscription","[class.droppable]","[class.draggable-match]","ClrDragHandle","[class.drag-handle]","CLR_DRAG_AND_DROP_DIRECTIVES","ClrDragAndDropModule","ClrExpandableAnimation","startHeight","clrExpandTrigger","animationDone","updateStartHeight","overflow","EXPANDABLE_ANIMATION_DIRECTIVES","ClrExpandableAnimationModule","ClrSpinner","ariaLive","_inline","_inverse","_small","_medium","assertive","[attr.aria-busy]","CLR_SPINNER_DIRECTIVES","ClrSpinnerModule","FOCUS_ON_VIEW_INIT","FOCUS_ON_VIEW_INIT_PROVIDER","useValue","ClrFocusOnViewInit","focusOnViewInit","directFocus","_isEnabled","onFocusout","FOCUS_ON_VIEW_INIT_DIRECTIVES","ClrFocusOnViewInitModule","CustomFilter","StateDebouncer","_change","nbChanges","changeStart","changeDone","Page","stateDebouncer","preventEmit","activated","_size","_sizeChange","oldSize","_totalItems","total","last","_last","totalItems","page","lastInPage","resetPageSize","FiltersProvider","_page","_all","hasActiveFilters","_b","_c","isActive","getActiveFilters","ret","resetPageAndEmitFilterChange","hasUnregistered","registered","RegisteredFilter","matchIndex","findIndex","item","accepts","filters","unregister","DatagridFilterRegistrar","setFilter","deleteFilter","ClrDatagridFilter","_filters","smartToggleService","subs","ariaExpanded","smartPosition","read","ClrDatagridFilter_1","NestedProperty","prop","splitProp","getPropValue","nestedProp","DatagridPropertyStringFilter","exact","search","propValue","toLowerCase","DatagridStringFilterImpl","filterFn","_rawValue","_lowerCaseValue","lowerCaseValue","property","equals","other","DatagridStringFilter","filterValueChange","initFilterValue","DatagridStringFilter_1","DatagridPropertyNumericFilter","low","high","DatagridNumericFilterImpl","_low","_high","vals","DatagridNumericFilter","popoverToggleService","initFilterValues","values","isFinite","DatagridNumericFilter_1","OompaLoompa","cdr","willyWonka","chocolate","latestFlavor","flavor","disableChocolateCheck","detectChanges","RowActionService","actionableCount","register","WillyWonka","_chocolate","ngAfterViewChecked","DatagridWillyWonka","ActionableOompaLoompa","hasActionableRow","ChangeDetectorRef","DetailService","toggleState","_state","_enabled","cache","isRowOpen","ExpandableRowsCount","detailService","expandableCount","enabled","ExpandableOompaLoompa","hasExpandableRow","DatagridPropertyComparator","compare","a","propA","propB","DatagridDisplayMode","DatagridRenderStep","Sort","_reverse","_comparator","emitChange","sortBy","forceReverse","comparator","reverse","WrappedColumn","columnView","templateRef","destroy","ClrDatagridColumn","_sort","changeDetectorRef","showSeparator","_colType","_sorted","sortedChange","_sortOrder","UNSORTED","sortOrderChange","customFilter","listenForSortingChanges","listenForDetailPaneChanges","stateChange","markForCheck","sort","sortOrder","_sortBy","sortIcon","sorted","_field","field","setupDefaultFilter","colType","updateFilterValue","ASC","DESC","sortable","custom","newValue","wrappedInjector","[class.datagrid-column]","[attr.aria-sort]","role","changeDetection","ChangeDetectionStrategy","OnPush","Items","trackBy","_smart","_displayed","_allChanges","_filtersSub","_sortSub","_pageSub","smartenUp","_filterItems","_sortItems","_changePage","items","emitAllChanges","smart","refresh","uninitialized","_filtered","firstItem","lastItem","ClrDatagridItems","differs","differ","iterableProxy","NgForOf","newItems","ngForOf","ngDoCheck","_rawItems","ngForTrackBy","diff","all","IterableDiffers","ClrDatagridPlaceholder","[class.datagrid-placeholder-container]","POPOVER_HOST_ANCHOR","SignpostFocusManager","_triggerEl","focusTrigger","SignpostIdService","setId","ClrSignpostTrigger","signpostIdService","signpostFocusManager","triggerEl","isOpen","prevIsOpen","focusOnClose","ariaControl","onSignpostTriggerClick","class","[attr.aria-label]","[attr.aria-expanded]","[attr.aria-controls]","[class.active]","ClrSignpost","useCustomTrigger","[class.signpost]","WrappedCell","cellView","ClrDatagridCell","[class.datagrid-cell]","[class.datagrid-signpost-trigger]","SelectionType","DatagridRenderOrganizer","_renderStep","alreadySized","filterRenderSteps","step","renderStep","testStep","resize","CALCULATE_MODE_ON","CLEAR_WIDTHS","COMPUTE_COLUMN_WIDTHS","ALIGN_COLUMNS","CALCULATE_MODE_OFF","DisplayModeService","renderOrganizer","_view","DISPLAY","CALCULATE","DatagridColumnChanges","nbSelection","Selection","_items","preserveSelection","prevSelectionRefs","lockedRefs","_selectionType","None","rowSelectionMode","debounce","_selectable","clearSelection","allChanges","updatedItems","updateLockedRef","selectionType","Single","newSingle_1","trackBy_1","selectionUpdated_1","currentSingle","prevSingleSelectionRef","lookup","maybe","Multi","leftOver_1","trackBy_2","selectionUpdated_2","selectedIndex","selected","_currentSingle","updateCurrent","selectItem","deselectItem","indexOfItem","removedItems_1","locked","setSelected","isAllSelected","displayedItems","isLocked","canItBeLocked","lockItem","lock","ref_1","lockedItem","toggleAll","currentIndex","WrappedRow","rowView","DatagridIfExpandService","_replace","_animate","setReplace","replaceValue","nbRow","ClrDatagridRow","selection","rowActionService","globalExpandable","displayMode","SELECTION_TYPE","expandAnimationTrigger","_selected","selectedChanged","_detailOpenLabel","_detailCloseLabel","displayCells","radioId","checkboxId","combineLatest","expandReplaceValue","expandChangeValue","replaced","toggleExpand","expandAnimation","dgCells","cell","destroyed","_scrollableCells","insert","viewChange","detach","_calculatedCells","[class.datagrid-row]","[class.datagrid-selected]","[attr.aria-owns]","StateProvider","debouncer","by","activeFilters","activeFilters_1","activeFilters_1_1","TableSizeService","_tableRef","table","tableRef","getColumnDragHeight","ALL_COLUMN_CHANGES","ColumnsService","columns","_cache","subject","hasCache","resetToLastCache","column","columnStates","hideable","emitStateChangeAt","columnIndex","emitStateChange","ClrDatagrid","organizer","expandableRows","stateProvider","datagridId","singleSelectedChanged","clrDgSingleSelectionAriaLabel","clrDgSingleActionableAriaLabel","clrDetailExpandableAriaLabel","dataChanged","rows","row","_displayedRows","datagridTable","_projectedDisplayColumns","_projectedCalculationColumns","_calculationRows","[class.datagrid-host]","[class.datagrid-detail-open]","ClrDatagridActionBar","[class.datagrid-action-bar]","clrDgActionId","ClrDatagridActionOverflow","zone","openState","focusFirstButton","closeOverflowContent","firstButton","ColumnResizerService","_resizedBy","widthBeforeResize","minColumnWidth","startResize","isWithinMaxResizeRange","endResize","calculateResize","maxResizeRange","ClrDatagridColumnSeparator","columnResizerService","tableSizeService","columnSeparatorId","showTracker","resizeTrackerEl","tableHeight","moveTracker","resizedBy","redFlagTracker","hideTracker","[class.datagrid-column-separator]","ClrDatagridColumnToggleTitle","ClrDatagridColumnToggleButton","columnsService","allSelected","hideableColumns","hidden","hideableColumn","HIDDEN","ClrDatagridColumnToggle","columnSwitchId","_allColumnsVisible","hideableColumnStates","columnState","toggleColumnState","columnToToggle","toggleSwitchPanel","menuDescriptionElement","allSelectedElement","trackByFn","[class.column-switch-wrapper]","DatagridDetailRegisterer","expandableRowsCount","ClrDatagridDetailHeader","[class.datagrid-detail-header]","ClrDatagridDetail","closeCheck","[class.datagrid-detail-pane]","ClrIfDetail","viewContainer","skip","model","togglePanel","showPanel","stateChangeParams","$implicit","ClrDatagridDetailBody","[class.datagrid-detail-body]","ClrDatagridFooter","hasHideableColumns","[class.datagrid-footer]","COLUMN_STATE","columnStateFactory","KeyCodes","IEKeyCodes","ClrSelectedState","COLUMN_STATE_PROVIDER","ClrDatagridHideableColumn","titleTemplateRef","hiddenChange","clrDgHidden","_hidden","ClrDatagridItemsTrackBy","ClrDatagridPageSize","pageSizeOptions","ClrDatagridPagination","currentChanged","_pageSubscription","middlePages","updateCurrentPage","parsed","currentPageInputRef","[class.pagination]","ClrDatagridRowDetail","replacedRow","replaceChange","[class.datagrid-row-flex]","[class.datagrid-row-detail]","[class.datagrid-container]","DatagridCellRenderer","clearWidth","stateSubscription","runAllChanges","stateChanges","WIDTH","setWidth","setHidden","strictWidth","DatagridHeaderRenderer","resizeEmitter","widthSet","autoSet","detectStrictWidth","widthAfterResize","computeWidth","getColumnWidthState","setColumnState","NoopDomAdapter","DatagridRowRenderer","cells","domAdapterFactory","DatagridMainRenderer","_heightSet","columnsSizesStable","shouldStabilizeColumns","computeHeadersWidth","sizeChange","resetDatagridHeight","toggleDetailPane","setupColumns","headers","stabilizeColumns","shouldComputeHeight","computeDatagridHeight","header","nbColumns","allStrict","deps","CLR_DATAGRID_DIRECTIVES","ClrDatagridModule","ClrStackBlock","parent","uniqueId","_changedChildren","_fullyInitialized","_changed","addChild","getStackChildrenId","[class.stack-block]","ClrStackView","editable","save","_editMode","editingChange","ClrStackHeader","stackView","StackControl","modelChange","editing","ClrStackInput","inputs","outputs","ClrStackSelect","ClrStackViewCustomTags","ClrStackContentInput","[attr.aria-labelledby]","CLR_STACK_VIEW_DIRECTIVES","ClrStackViewModule","keyValidator","ArrowUp","ArrowDown","ArrowRight","ArrowLeft","Space","Escape","preventArrowKeyScroll","validKey","getKeyCodes","code","TreeNodeModel","UNSELECTED","complete","propagateUp","propagateDown","INDETERMINATE","children","child","_updateSelectionFromChildren","toggleSelection","propagate","newState","SELECTED","computeSelectionStateFromChildren","oneSelected","oneUnselected","DeclarativeTreeNodeModel","_addChild","_removeChild","TreeFeaturesService","selectable","eager","childrenFetched","treeFeaturesFactory","existing","TREE_FEATURES_PROVIDER","TreeFocusManagerService","_focusRequest","_focusChange","findSiblings","rootNodeModels","findLastVisibleInNode","lastChild","findNextFocusable","siblings","selfIndex","findLastVisibleInTree","lastRootNode","findNodeAbove","findNodeBelow","focusNode","nodeId","broadcastFocusedNode","focusedNodeId","focusParent","focusFirstVisibleNode","focusModel","focusLastVisibleNode","focusNodeAbove","focusNodeBelow","ClrTreeNodeLink","activate","click","ClrTreeNode","featuresService","expandService","focusManager","STATES","skipEmitChange","selectedChange","contentContainerTabindex","recursion","_model","context","clrModel","_lView","isExpandable","focusRequest","focusTreeNode","checkTabIndex","treeNodeLinkList","setTabIndex","contentContainer","broadcastFocusOnContainer","expandOrFocusFirstChild","collapseOrFocusParent","Home","End","Enter","triggerDefaultAction","treeNodeLink","overflow-y","[attr.role]","[class.clr-tree-node]","ClrTree","focusManagerService","tabindex","setRootNodes","[attr.tabindex]","[attr.aria-multiselectable]","ArrowKeyDirection","RecursiveTreeNodeModel","getChildren","_children","clearChildren","fetchChildren","asyncChildren","then","raw","wrapChildren","isObservable","rawModels","ClrRecursiveForOf","ngOnChanges","wrapped","isArray","nodes","childrenFetchSubscription","root","RecursiveChildren","shouldRender","getContext","CLR_TREE_VIEW_DIRECTIVES","ClrTreeViewModule","ClrDataModule","FocusableItem","customFocusableItemProvider","implementation","_unlistenFuncs","reset","listenToArrowKeys","move","UP","DOWN","registerContainer","activateCurrent","moveTo","blur","direction","moved","detachListeners","unlisten","clrFocusServiceFactory","FOCUS_SERVICE_PROVIDER","Linkers","linkParent","linkVertical","loop","up","down","wrapObservable","observable","onSubscribe","onUnsubscribe","Observable","observer","DropdownFocusHandler","focusBackOnTrigger","resetChildren","moveToFirstItemWhenOpen","handleRootFocus","originalEvent","_trigger","_container","stopPropagation","take","relatedTarget","openAndGetChildren","closeAndGetThis","ReplaySubject","addChildren","DROPDOWN_FOCUS_HANDLER_PROVIDER","RootDropdownService","closeMenus","clrRootDropdownFactory","Point","ROOT_DROPDOWN_PROVIDER","ClrDropdown","dropdownService","isMenuClosable","[class.dropdown]","[class.open]","BasicFocusableItem","BASIC_FOCUSABLE_ITEM_PROVIDER","useClass","ClrDropdownItem","dropdown","_dropdownService","focusableItem","setByDeprecatedDisabled","onDropdownItemClick","[class.disabled]","[class.dropdown-item]","[attr.aria-disabled]","[attr.id]","TabsLayout","Popover","scrollableElements","boundOnScrollListener","emitScrollEvent","bind","anchorAlign","popoverAlign","offsetX","_d","offsetY","_e","useAnchorParent","addScrollEventListeners","anchorRect","popoverRect","leftDiff","topDiff","LEFT_TOP","TOP_LEFT","TOP_CENTER","TOP_RIGHT","RIGHT_TOP","LEFT_BOTTOM","BOTTOM_LEFT","BOTTOM_CENTER","BOTTOM_RIGHT","RIGHT_BOTTOM","LEFT_CENTER","RIGHT_CENTER","popoverComputedStyle","marginLeft","marginRight","marginTop","marginBottom","round","_scroll","release","removeScrollEventListeners","isPositioned","scrolls","addEventListener","removeEventListener","computedStyles","overflowX","overflowY","AbstractPopover","parentHost","updateAnchor","popoverOptions","closeOnOutsideClick","anchorElem","popoverInstance","attachESCListener","detachESCListener","ignore","detachOutsideClickListener","anchorPoint","popoverPoint","attachOutsideClickListener","ignoreGlobalESCListener","documentESCListener","hostClickListener","ignoredElement","ignoredElementClickListener","ClrDropdownMenu","nested","focusHandler","allowMultipleOpen","toArray","notifyOnChanges","[class.dropdown-menu]","ClrDropdownTrigger","isRootLevelToggle","onDropdownTriggerClick","[class.dropdown-toggle]","[class.expandable]","[attr.aria-haspopup]","CLR_DROPDOWN_DIRECTIVES","ClrDropdownModule","ALERT_TYPES","AlertIconAndTypesService","defaultIconShape","_alertIconShape","_alertType","iconInfoFromType","shape","title","returnObj","cssClass","MultiAlertService","allAlerts","alert","_closed","activeAlerts","manage","alerts","ClrAlertText","ClrAlert","iconService","multiAlertService","isSmall","closable","isAppLevel","clrCloseButtonAriaLabel","_closedChanged","currentAlert","announceAriaLiveMessage","alertType","alertIconShape","alertTexts","alertText","ClrAlertItem","ClrAlerts","currentAlertIndexChange","currentAlertChange","[class.alerts]","[class.alert-danger]","[class.alert-info]","[class.alert-success]","[class.alert-warning]","ClrAlertsPager","multiAlertServiceChanges","pageUp","pageDown","[class.alerts-pager]","CLR_ALERT_DIRECTIVES","ClrAlertModule","ClrEmphasisModule","ResponsiveNavCodes","NAV_LEVEL_1","NAV_LEVEL_2","NAV_CLOSE_ALL","NAV_OPEN","NAV_CLOSE","NAV_TOGGLE","NAV_CLASS_HAMBURGER_MENU","NAV_CLASS_OVERFLOW_MENU","NAV_CLASS_TRIGGER_1","NAV_CLASS_TRIGGER_2","NAV_CLASS_LEVEL_1","NAV_CLASS_LEVEL_2","ResponsiveNavControlMessage","_controlCode","_navLevel","ResponsiveNavigationService","responsiveNavList","registerNavSubject","controlNavSubject","closeAllNavs","registerNav","navLevel","isNavRegistered","unregisterNav","sendControlMessage","controlCode","ClrMainContainer","responsiveNavService","_classList","_subscription","navControl","processMessage","navClass","controlNav","[class.main-container]","CLR_LAYOUT_DIRECTIVES","ClrMainContainerModule","MainContainerWillyWonka","NavDetectionOompaLoompa","sum","ClrHeader","isNavLevel1OnPage","isNavLevel2OnPage","openNavLevel","responsiveNavCodes","registeredNavs","navLevelList","initializeNavTriggers","resetNavTriggers","navList","closeOpenNav","toggleNav","[class.header]","ClrNavLevel","level","addNavClass","navHostClassList","_level","onMouseClick","navHost","CLR_NAVIGATION_DIRECTIVES","ClrNavigationModule","TemplateRefContainer","TEMPLATE_REF_DIRECTIVES","ClrTemplateRefModule","TabsWillyWonka","ActiveOompaLoompa","ifActive","AriaService","TabsService","tab","active","tabLink","inOverflow","nbTabContentComponents","ClrTabContent","ariaService","tabsService","tabContentId","viewRef","tabContentViewContainer","ariaLabelledBy","ariaControls","nbTabsComponent","TABS_ID","ClrFocusDirection","TABS_ID_PROVIDER","nbTabLinkComponents","ClrTabLink","tabsId","tabLinkId","templateRefContainer","_inOverflow","[attr.aria-hidden]","[class.btn]","ClrTab","ClrTabOverflowContent","AccordionStrategy","AccordionStatus","ClrKeyFocusItem","ClrKeyFocus","focusOnLoad","_focusableItems","clrKeyFocusItems","elements","initializeFocus","focusableItems","currentItem","focusCurrent","positionInRange","listenForItemUpdates","handleKeyboardEvent","currentItemElement","getItemPosition","prevKeyPressed","currentFocusIsNotFirstItem","nextKeyPressed","currentFocusIsNotLastItem","setClickedItemCurrent","_item","keyCodes","BOTH","ClrTabs","_tabLinkDirectives","tabLinkElements","_mousedown","link","overflowTabs","activeTab","keyFocus","overflowPosition","toggleOverflowOnPosition","_tabOverflowEl","resetKeyFocusCurrentToActive","activeTabPosition","toggleOverflowOnClick","isCurrentInOverflow","openOverflowOnFocus","closeOnFocusOut","closeOnEscapeKey","tabOverflowTrigger","listenForTabLinkChanges","tabs","tabLinkDirectives","KEY_FOCUS_DIRECTIVES","ClrKeyFocusModule","CLR_TABS_DIRECTIVES","ClrTabsModule","VerticalNavGroupRegistrationService","navGroupCount","registerNavGroup","unregisterNavGroup","VerticalNavIconService","_icons","registerIcon","unregisterIcon","VerticalNavService","_animateOnCollapsed","_collapsedChanged","_collapsed","_collapsible","collapsible","updateCollapseBehavior","collapsed","ClrVerticalNav","_navService","_navIconService","_navGroupRegistrationService","_sub","collapsedChanged","hasIcons","toggleByButton","[class.is-collapsed]","[class.has-nav-groups]","[class.has-icons]","VerticalNavGroupService","ClrVerticalNavGroup","_itemExpand","_navGroupService","wasExpanded","_expandAnimationState","expandAnimationState","animateOnCollapsed","goingToCollapse","expandGroup","collapseGroup","expandAnimationDone","toState","visibility","EXPANDED_STATE","ClrVerticalNavGroupChildren","ClrVerticalNavIcon","_verticalNavIconService","ClrVerticalNavLink","expandParentNavGroup","CLR_VERTICAL_NAV_DIRECTIVES","ClrVerticalNavModule","ClrLayoutModule","ScrollingService","stopScrolling","resumeScrolling","ClrModal","_scrollingService","modalId","_openChanged","staticBackdrop","skipAnimation","bypassScrollService","stopClose","altClose","currentValue","focusTrap","fadeDone","viewProviders","ClrModalBody","mouseDown","mouseUp","CLR_MODAL_DIRECTIVES","ClrModalModule","SIGNPOST_POSITIONS","top-left","top-middle","top-right","right-top","right-middle","right-bottom","bottom-right","bottom-middle","bottom-left","left-bottom","left-middle","left-top","default","POSITIONS","ClrSignpostContent","signpostContentId","setPosition","[class.signpost-content]","CLR_SIGNPOST_DIRECTIVES","ClrSignpostModule","TooltipIdService","updateId","ClrTooltip","[class.tooltip]","SIZES","ClrTooltipContent","tooltipIdService","[class.tooltip-content]","[style.opacity]","ClrTooltipTrigger","tooltipId","ariaDescribedBy","showTooltip","hideTooltip","[class.tooltip-trigger]","[attr.aria-describedby]","CLR_TOOLTIP_DIRECTIVES","ClrTooltipModule","ClrPopoverModule","ButtonHubService","buttonsReady","_previousBtnClicked","_nextBtnClicked","_dangerBtnClicked","_cancelBtnClicked","_finishBtnClicked","_customBtnClicked","buttonClicked","buttonType","PageCollectionService","_pagesReset","pages","pageCount","pagesCount","pagesAsArray","getPageById","foundPages","checkResults","getPageByIndex","pagesLastIndex","getPageIndex","results","requestedPageId","foundPagesCount","pageRange","start","end","getPageRangeFromPages","otherPage","startIndex","endIndex","pageIndex","otherPageIndex","getPreviousPage","previousPageIndex","previousPageIsCompleted","completed","getNextPage","nextPageIndex","getStepItemIdForPage","pageIdParts","commitPage","pageHasOverrides","stopNext","onCommit","updateCompletedStates","firstIncompleteIndex","findFirstIncompletePageIndex","returnIndex","findFirstIncompletePage","myIncompleteIndex","WizardNavigationService","pageCollection","buttonService","_currentChanged","navServiceLoaded","forceForwardNavigation","_movedToNextPage","_wizardFinished","_movedToPreviousPage","_cancelWizard","wizardHasAltCancel","wizardHasAltNext","wizardStopNavigation","wizardDisableStepnav","previousButtonSubscription","previousBtnClicked","currentPageIsFirst","previousStepDisabled","previousButtonClicked","nextButtonSubscription","nextBtnClicked","checkAndCommitCurrentPage","dangerButtonSubscription","dangerBtnClicked","finishButtonSubscription","finishBtnClicked","customButtonSubscription","customBtnClicked","customButtonClicked","cancelButtonSubscription","cancelBtnClicked","pageOnCancel","cancel","pagesResetSubscription","pagesReset","setFirstPageCurrent","_currentPage","onLoad","currentPageIsLast","forceNext","iAmTheLastPage","isNext","isDanger","isDangerNext","isFinish","readyToComplete","primaryButtonClicked","finishButtonClicked","dangerButtonClicked","nextButtonClicked","finish","goTo","pageToGoToOrId","lazyComplete","pageToGoTo","myPages","pagesToCheck","goingForward","currentPageIndex","canGoTo","previousPagePasses","okayToMove","setLastEnabledPageCurrent","allPages","lastCompletedPageIndex","updateNavigation","toSetCurrent","HeaderActionService","navService","wizardHdrActions","wizardHeaderActions","hasHeaderActions","currentPageHasHeaderActions","wizardHasHeaderActions","wizardHeaderActionIndex","ClrWizardHeaderAction","headerActionClicked","ClrWizardPageButtons","pageButtonsTemplateRef","ClrWizardPageHeaderActions","pageHeaderActionsTemplateRef","ClrWizardPageNavTitle","pageNavTitleTemplateRef","ClrWizardPageTitle","pageTitleTemplateRef","wizardPageIndex","ClrWizardPage","_nextStepDisabled","nextStepDisabledChange","_previousStepDisabled","previousStepDisabledChange","_hasError","_stopCancel","stopCancelChange","_stopNext","_complete","nextStepDisabled","previousCompleted","pageTitle","pageNavTitle","_headerActions","_buttons","makeCurrent","[class.clr-wizard-page]","ClrWizard","headerActionService","_forceForward","_stopNavigation","_disableStepnav","_stopModalAnimations","onCancel","wizardFinished","onReset","currentPageChanged","onMoveNext","onMovePrevious","listenForNextPageChanges","listenForPreviousPageChanges","listenForCancelChanges","listenForFinishedChanges","listenForPageChanges","headerActions","updateNavOnPageChanges","skipChecksAndEmits","forceFinish","stopNavigation","modalCancel","checkAndCancel","currentPageHasOverrides","stopCancel","pageId","movedToNextPage","wizardTitle","movedToPreviousPage","notifyWizardCancel","emitWizardFinished","forEachAddedItem","forEachRemovedItem","[class.clr-wizard]","[class.wizard-md]","[class.wizard-lg]","[class.wizard-xl]","[class.lastPage]","DEFAULT_BUTTON_TYPES","CUSTOM_BUTTON_TYPES","ClrWizardButton","wasClicked","checkDefaultAndCustomType","valueToCheck","typeToLookUp","nav","isCancel","isPrevious","ClrWizardCustomTags","ClrWizardStepnav","pageService","ClrWizardStepnavItem","pageGuard","isComplete","isCurrent","[attr.aria-selected]","[class.clr-nav-link]","[class.nav-item]","[class.no-click]","[class.complete]","[class.error]","CLR_WIZARD_DIRECTIVES","ClrWizardModule","accordionCount","AccordionPanelModel","accordionId","status","Inactive","templateId","AccordionModel","strategy","Default","_panels","setStrategy","updatePanelOrder","ids","removeOldPanels","addPanel","panelId","panelIsOpen","closeAllPanels","disablePanel","panels","panel","AccordionService","accordion","_panelsChanges","getPanelChanges","emitUpdatedPanels","panelAnimation","display","stepAnimation","ClrAccordionDescription","[class.clr-accordion-description]","ClrAccordionPanel","accordionService","ifExpandService","panelOpen","panelOpenChange","isAccordion","tap","emitPanelChange","previousValue","collapsePanelOnAnimationDone","getPanelStateClasses","getAccordionContentId","getAccordionHeaderId","[class.clr-accordion-panel]","ClrAccordionTitle","[class.clr-accordion-title]","ClrAccordion","multiPanel","setAccordionStrategy","listenForDOMChanges","[class.clr-accordion]","ClrAccordionContent","AccordionWillyWonka","AccordionOompaLoompa","ClrAccordionModule","StepperModel","stepperModelInitialize","getNumberOfIncompletePanels","getNumberOfOpenPanels","openFirstPanel","Complete","navigateToNextPanel","currentPanelId","currentPanelValid","completePanel","openNextPanel","setPanelError","overrideInitialPanel","setPanelsWithErrors","resetPanels","resetPanel","getNextPanel","resetAllFuturePanels","firstPanel","getFirstPanel","nextPanel","StepperService","panelsCompleted","getAllCompletedPanelChanges","_activeStepChanges","activeStep","updateNextStep","allPanelsCompleted","ClrStepButtonType","ClrStepperPanel","formGroupName","ngModelGroup","stepperService","_value","triggerAllFormControlValidationIfError","listenToFocusChanges","headerButton","triggerAllFormControlValidation","formGroup","controls","FormControl","FormGroup","FormGroupName","NgModelGroup","ClrTimelineLayout","ClrTimelineStepState","ClrStepButton","clrStep","Next","submitButton","Submit","valid","[class.clr-step-button]","[type]","ClrStepper","ngForm","form","listenForPanelsCompleted","listenForFormResetChanges","initialPanel","pristine","ngSubmit","setPanelsWithFormErrors","panelsWithErrors","FormGroupDirective","NgForm","[class.clr-stepper-forms]","StepperWillyWonka","StepperOompaLoompa","ClrStepperModule","ClrProgressBar","externalId","_ID","displayAriaLive","displayValue","_labeled","_fade","_loop","_success","_danger","_flash","_flashDanger","displayval","CLR_PROGRESS_BAR_DIRECTIVES","ClrProgressBarModule","TimelineIconAttributeService","attributeMap","Map","set","NOT_STARTED","iconShape","ariaLabel","CURRENT","PROCESSING","getAriaLabel","getIconShape","ClrTimeline","[class.clr-timeline]","ClrTimelineStepTitle","[class.clr-timeline-step-title]","ClrTimelineStep","iconAttributeService","stepTitle","stepTitleText","innerText","[class.clr-timeline-step]","ClrTimelineStepDescription","[class.clr-timeline-step-description]","ClrTimelineStepHeader","[class.clr-timeline-step-header]","CLR_TIMELINE_DIRECTIVES","ClrTimelineModule","ClarityModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrViewportViolation {\n  BOTTOM = 0,\n  LEFT = 1,\n  RIGHT = 2,\n  TOP = 3,\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrAlignment {\n  START = 0,\n  CENTER = 0.5,\n  END = 1,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-icon' })\nexport class ClrIconCustomTag {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrIconCustomTag } from './icon';\n\nexport const CLR_ICON_DIRECTIVES: Type<any>[] = [ClrIconCustomTag];\n\n@NgModule({ imports: [CommonModule], declarations: [CLR_ICON_DIRECTIVES], exports: [CLR_ICON_DIRECTIVES] })\nexport class ClrIconModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class ClrPopoverToggleService {\n  /**\n   *  Popovers might need to ignore click events on an element\n   *  (eg: popover opens on focus on an input field. Clicks should be ignored in this case)\n   */\n  private _open: boolean = false;\n  private _openChange: Subject<boolean> = new Subject<boolean>();\n  private _openEvent: Event;\n  private _openEventChange: Subject<Event> = new Subject<Event>();\n\n  public get openChange(): Observable<boolean> {\n    return this._openChange.asObservable();\n  }\n\n  public set openEvent(event: Event) {\n    this._openEvent = event;\n    this._openEventChange.next(event);\n  }\n\n  public get openEvent(): Event {\n    return this._openEvent;\n  }\n\n  public getEventChange(): Observable<Event> {\n    return this._openEventChange.asObservable();\n  }\n\n  public set open(value: boolean) {\n    value = !!value;\n    if (this._open !== value) {\n      this._open = value;\n      this._openChange.next(value);\n    }\n  }\n\n  public get open(): boolean {\n    return this._open;\n  }\n\n  get originalEvent(): Event {\n    return this._openEvent;\n  }\n\n  /**\n   * Sometimes, we need to remember the event that triggered the toggling to avoid loops.\n   * This is for instance the case of components that open on a click, but close on a click outside.\n   */\n  public toggleWithEvent(event: any) {\n    this.openEvent = event;\n    this.open = !this.open;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ElementRef, Injectable, Renderer2, Inject, OnDestroy } from '@angular/core';\nimport { ClrPopoverToggleService } from './popover-toggle.service';\nimport { Observable, fromEvent, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n// https://github.com/angular/angular/issues/20351#issuecomment-344009887\n/** @dynamic */\n@Injectable()\nexport class ClrPopoverEventsService implements OnDestroy {\n  public outsideClickClose = true;\n  public scrollToClose = true;\n  private documentClickListener: () => void;\n  public ignoredEvent: any;\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private renderer: Renderer2,\n    private smartOpenService: ClrPopoverToggleService,\n    @Inject(DOCUMENT) private document: HTMLDocument\n  ) {\n    this.subscriptions.push(\n      smartOpenService.openChange.subscribe(open => {\n        if (open) {\n          this.addEscapeListener();\n          this.addClickListener();\n          this.addScrollListener();\n        } else {\n          this.removeAllEventListeners();\n        }\n      }),\n      smartOpenService.getEventChange().subscribe(event => {\n        // Remember the event that was used to open the content\n        this.ignoredEvent = event;\n      })\n    );\n  }\n\n  private scrollSubscription: Subscription;\n  public addScrollListener() {\n    if (this.scrollToClose) {\n      this.documentScroller = fromEvent(this.document, 'scroll', { capture: true });\n      this.scrollSubscription = this.documentScroller\n        .pipe(filter(this.testForSmartPopoverContentContainer))\n        .subscribe(() => {\n          this.smartOpenService.open = false;\n          this.setAnchorFocus();\n        });\n    } else {\n      // I think this is where dynamic re-positioning will be added\n      // Instead of testing like we do in the close pipe below\n      // we need to switch positioning to use an observable and then\n      // debounce the scroll events to recalculate content position in a performant way\n      // For now, ignore scrolling events.\n      return;\n    }\n  }\n\n  public removeScrollListener() {\n    if (this.documentScroller) {\n      this.scrollSubscription.unsubscribe();\n      delete this.documentScroller;\n    }\n  }\n\n  private testForSmartPopoverContentContainer(event: Event): boolean {\n    // Filter for the documentScroller observable event targets\n    let target: Element = <Element>event.target;\n\n    // Walk up the DOM tree until we get to the element that is a direct child of the body.\n    while (target.classList && target.parentElement.localName !== 'body') {\n      target = target.parentElement;\n    }\n\n    // Target is the child element of body where the scroll events originated.\n    // Return false and prevent the popover content container from closing for any scroll events inside a popover\n    // content container.\n    if (target.classList) {\n      // check scroll events to see if they are happening in popover content or elsewhere\n      return target.classList.contains('clr-popover-content') ? false : true;\n    } else {\n      // prevents it from closing right after first opening\n      return false;\n    }\n  }\n\n  public addClickListener() {\n    if (this.outsideClickClose) {\n      this.documentClickListener = this.renderer.listen(this.document, 'click', (event: MouseEvent) => {\n        if (event === this.ignoredEvent) {\n          // Here we ignore the opening click event (w/o this content opens and immediately closes.\n          delete this.ignoredEvent;\n        } else {\n          this.smartOpenService.open = false;\n          // Rather than a complex change to the focus trap I put focus on the element that was clicked\n          const clickedElement: HTMLElement = <HTMLElement>event.target;\n          clickedElement.focus();\n        }\n      });\n    }\n  }\n\n  public removeClickListener() {\n    if (this.outsideClickClose) {\n      delete this.ignoredEvent;\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        delete this.documentClickListener;\n      }\n    }\n  }\n\n  private escapeListener: () => void;\n  public addEscapeListener() {\n    this.escapeListener = this.renderer.listen(this.document, 'keydown.escape', event => {\n      this.smartOpenService.open = false;\n      this.setAnchorFocus();\n    });\n  }\n\n  public removeEscapeListener() {\n    if (this.escapeListener) {\n      this.escapeListener();\n      delete this.escapeListener;\n    }\n  }\n\n  private _anchorButtonRef: ElementRef;\n  public set anchorButtonRef(ref: ElementRef) {\n    this._anchorButtonRef = ref;\n  }\n  public get anchorButtonRef(): ElementRef {\n    return this._anchorButtonRef;\n  }\n\n  private _closeButtonRef: ElementRef;\n  public set closeButtonRef(ref: ElementRef) {\n    this._closeButtonRef = ref;\n  }\n  public get closeButtonRef(): ElementRef {\n    return this._closeButtonRef;\n  }\n\n  public setCloseFocus(): void {\n    this._closeButtonRef.nativeElement.focus();\n  }\n\n  public setAnchorFocus(): void {\n    this.anchorButtonRef.nativeElement.focus();\n  }\n\n  private _contentRef: ElementRef;\n  public set contentRef(host: ElementRef) {\n    this._contentRef = host;\n  }\n  public get contentRef(): ElementRef {\n    return this._contentRef;\n  }\n\n  private documentScroller: Observable<Event>;\n\n  private removeAllEventListeners() {\n    this.removeScrollListener();\n    this.removeClickListener();\n    this.removeEscapeListener();\n  }\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.removeAllEventListeners();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ClrPopoverPosition } from './interfaces/popover-position.interface';\nimport { ClrPopoverContentOffset } from './interfaces/popover-content-offset.interface';\nimport { ClrViewportViolation } from './enums/viewport-violation.enum';\nimport { ClrVisibilityCoords } from './interfaces/visibility-coords.interface';\nimport { ClrAlignment } from './enums/alignment.enum';\n\n// Put the forward arg here but it is only needed when nudging content or anchors.\nexport type ClrTransform = (position: ClrPopoverPosition, back?: boolean) => ClrPopoverPosition;\n\nexport const flipSides: ClrTransform = position => {\n  return {\n    ...position,\n    side: -1 * position.side,\n  };\n};\n\n// This could be used in more advanced positioning algorithms.\n// flipAxisFlipSideAndNudgeContent(flipAxis, flipSide, nudge, nudgeForward?): ClrTransform {...}\n// I would like to keep it for now.\nexport const flipAxis: ClrTransform = position => {\n  return {\n    ...position,\n    axis: position.axis === 0 ? 1 : 0,\n  };\n};\n\nexport const nudgeContent: ClrTransform = (position, forward) => {\n  const nextAlignment = position.content + (forward ? 0.5 : -0.5);\n  if (nextAlignment < 0 || nextAlignment > 1) {\n    return position;\n  } else {\n    return {\n      ...position,\n      content: nextAlignment,\n    };\n  }\n};\n\nexport function flipSidesAndNudgeContent(flip: ClrTransform, nudge: ClrTransform, nudgeBack?: boolean): ClrTransform {\n  return (position: ClrPopoverPosition): ClrPopoverPosition => nudge(flip(position), nudgeBack);\n}\n\nexport function align(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): ClrPopoverContentOffset {\n  let xDiff = anchor.left;\n  let yDiff = anchor.top;\n\n  // When ClrAxis is VERTICAL BEFORE = left, AFTER = right\n  // When ClrAxis is HORIZONTAL BEFORE is top, AFTER is bottom\n  switch (position.axis + position.side) {\n    case -1: {\n      // ClrAxis.VERTICAL + ClrSide.BEFORE\n      xDiff += alignHorizontal(position, anchor, content);\n      yDiff -= content.height; // pull content up to the top of the anchor\n      break;\n    }\n    case 1: {\n      // ClrAxis.VERTICAL + ClrSide.AFTER\n      xDiff += alignHorizontal(position, anchor, content);\n      yDiff += anchor.height; // push the content down to below the anchor\n      break;\n    }\n    case 0: {\n      // ClrAxis.HORIZONTAL + ClrSide.BEFORE\n      xDiff -= content.width; // pull the content left of the anchor\n      yDiff += alignVertical(position, anchor, content);\n      break;\n    }\n    case 2: {\n      // ClrAxis.HORIZONTAL + ClrSide.AFTER\n      xDiff += anchor.width; // push the content right of of the anchor\n      yDiff += alignVertical(position, anchor, content);\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return { xOffset: xDiff, yOffset: yDiff };\n}\n\nfunction alignHorizontal(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): number {\n  let horizontalOffset = 0;\n  // horizontal offset for the anchor position\n  switch (position.anchor /*calculate for the anchor alignment*/) {\n    case ClrAlignment.START: {\n      // nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      horizontalOffset += anchor.width / 2; // push content over 1/2 anchor width\n      break;\n    }\n    case ClrAlignment.END: {\n      horizontalOffset += anchor.width; //  push content over width of the anchor\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  // horizontal offsets for anchor alignment\n  switch (\n    position.content // calculate for the content alignment\n  ) {\n    case ClrAlignment.START: {\n      // Nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      horizontalOffset -= content.width / 2; // pull content left by a value of 1/2 content width\n      break;\n    }\n    case ClrAlignment.END: {\n      // subtract the width of currentContent from horizontalOffset to pull it back\n      horizontalOffset -= content.width;\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  return horizontalOffset;\n}\n\nfunction alignVertical(position: ClrPopoverPosition, anchor: ClientRect, content: ClientRect): number {\n  // y axis offsets for anchor alignment\n  let verticalOffset = 0;\n\n  // Calculate y offset for anchor position\n  switch (position.anchor) {\n    case ClrAlignment.START: {\n      // nothing to calculate here\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      verticalOffset += anchor.height / 2; // push content down to the middle of the anchor rect\n      break;\n    }\n    case ClrAlignment.END: {\n      verticalOffset += anchor.height; // push content down to the bottom of the anchor\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n\n  // Calculate y offsets for content alignment\n  switch (position.content) {\n    case ClrAlignment.START: {\n      // aligned to the top of the content rect\n      break;\n    }\n    case ClrAlignment.CENTER: {\n      verticalOffset -= content.height / 2; // pull content back up to the middle of the content rect\n      break;\n    }\n    case ClrAlignment.END: {\n      verticalOffset -= content.height; // pull content back up to the bottom of the content rect\n      break;\n    }\n    default: {\n      break;\n    }\n  }\n  return verticalOffset;\n}\n\nexport function testVisibility(offset: ClrPopoverContentOffset, content: ClientRect): ClrViewportViolation[] {\n  const violations: ClrViewportViolation[] = [];\n  const mockCoords: ClrVisibilityCoords = {\n    bottom: offset.yOffset + content.height,\n    left: offset.xOffset,\n    right: offset.xOffset + content.width,\n    top: offset.yOffset,\n  };\n\n  if (!(mockCoords.top >= 0)) {\n    violations.push(ClrViewportViolation.TOP);\n  }\n  if (!(mockCoords.left >= 0)) {\n    violations.push(ClrViewportViolation.LEFT);\n  }\n  if (!(mockCoords.bottom <= (window.innerHeight || document.documentElement.clientHeight))) {\n    violations.push(ClrViewportViolation.BOTTOM);\n  }\n  if (!(mockCoords.right <= (window.innerWidth || document.documentElement.clientWidth))) {\n    violations.push(ClrViewportViolation.RIGHT);\n  }\n\n  return violations;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrAxis {\n  VERTICAL,\n  HORIZONTAL,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, OnDestroy, Optional } from '@angular/core';\n\nimport { LoadingListener } from './loading-listener';\n\nexport enum ClrLoadingState {\n  DEFAULT,\n  LOADING,\n  SUCCESS,\n  ERROR,\n}\n\n@Directive({ selector: '[clrLoading]' })\nexport class ClrLoading implements OnDestroy {\n  // We find the first parent that handles something loading\n  constructor(@Optional() private listener: LoadingListener) {}\n\n  private _loadingState: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  public get loadingState() {\n    return this._loadingState;\n  }\n\n  @Input('clrLoading')\n  public set loadingState(value: boolean | ClrLoadingState) {\n    if (value === true) {\n      value = ClrLoadingState.LOADING;\n    } else if (!value) {\n      value = ClrLoadingState.DEFAULT;\n    }\n\n    if (value === this._loadingState) {\n      return;\n    }\n\n    this._loadingState = value;\n    if (this.listener) {\n      this.listener.loadingStateChange(value);\n    }\n  }\n\n  ngOnDestroy() {\n    this.loadingState = ClrLoadingState.DEFAULT;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport { Injectable, PLATFORM_ID, Inject } from '@angular/core';\n\nimport { ClrPopoverEventsService } from './popover-events.service';\nimport { ClrPopoverPosition } from '../interfaces/popover-position.interface';\nimport { ClrPopoverContentOffset } from '../interfaces/popover-content-offset.interface';\nimport { ClrViewportViolation } from '../enums/viewport-violation.enum';\nimport { align, flipSidesAndNudgeContent, flipSides, nudgeContent, testVisibility } from '../position-operators';\nimport { ClrAxis } from '../enums/axis.enum';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable()\nexport class ClrPopoverPositionService {\n  private currentAnchorCoords: ClientRect;\n  private currentContentCoords: ClientRect;\n  private contentOffsets: ClrPopoverContentOffset;\n  private _position: ClrPopoverPosition;\n\n  private _shouldRealign: Subject<void> = new Subject();\n  shouldRealign: Observable<void> = this._shouldRealign.asObservable();\n\n  realign() {\n    this._shouldRealign.next();\n  }\n\n  set position(position: ClrPopoverPosition) {\n    this._position = position;\n  }\n  get position(): ClrPopoverPosition {\n    return this._position;\n  }\n\n  constructor(private eventService: ClrPopoverEventsService, @Inject(PLATFORM_ID) public platformId: Object) {}\n\n  public alignContent(content: HTMLElement): ClrPopoverContentOffset {\n    if (!isPlatformBrowser(this.platformId)) {\n      // Only position when in a browser.\n      // Default to the browser origin and prevent getBoundingClientRect from running.\n      return {\n        xOffset: 0,\n        yOffset: 0,\n      };\n    }\n\n    this.currentAnchorCoords = this.eventService.anchorButtonRef.nativeElement.getBoundingClientRect();\n    this.currentContentCoords = content.getBoundingClientRect();\n    this.contentOffsets = align(this.position, this.currentAnchorCoords, this.currentContentCoords);\n\n    const visibilityViolations: ClrViewportViolation[] = testVisibility(this.contentOffsets, this.currentContentCoords);\n    /**\n     * Calculate the sum of viewport errors. This calculation is used below with the provided Axis in the given\n     * ClrPopoverPosition. Its worth putting the ClrViewportViolation enum values here:\n     *\n     *   BOTTOM = 0,\n     *   LEFT = 1,\n     *   RIGHT = 2,\n     *   TOP = 3,\n     *\n     *   So, this.visibilityViolations.length tells us how many sides of the viewport that the popover content was\n     *   clipped on. We can only help when the content has an issue on one or two sides.\n     *   errorSum is calculated to determine _how_ to change the position. Looking at both the axis and the number\n     *   of violations I can use the errorSum to determine how to transform the position (on the fly) and adjust\n     *   where it can be improved.\n     *\n     *   Note, more than 3 viewport violations and there isn't anything we can do to help. Also when there are two\n     *   violations, we can't help if the violations are TOP+BOTTOM || LEFT+RIGHT => There is no transformation we\n     *   can make to the postion that will help.\n     *\n     *   Some examples:\n     *   There is only one error and Primary axis is VERTICAL\n     *   - this.handleVerticalAxisOneViolation has a switch that will use the error sum to apply the correct\n     *   transform to the postion based on the reduction of visibilityViolations.\n     *\n     *   There are two errors and Primary axis is HORIZONTAL\n     *   - handleHorizontalAxisTwoViolations has a switch that uses the error sum to apply both transforms needed to\n     *   improve the content position based on the reduction of visibilityViolations.\n     */\n\n    const errorSum = visibilityViolations.reduce((count, current) => {\n      return count + current;\n    }, 0);\n\n    if (visibilityViolations.length === 1 && this.position.axis === ClrAxis.VERTICAL) {\n      // When primary axis is VERTICAL and there is one viewport violation\n      this.handleVerticalAxisOneViolation(errorSum);\n    } else if (visibilityViolations.length === 1 && this.position.axis === ClrAxis.HORIZONTAL) {\n      // When primary axis is HORIZONTAL and there is one viewport violation\n      this.handleHorizontalAxisOneViolation(errorSum);\n    } else if (visibilityViolations.length === 2 && this.position.axis === ClrAxis.VERTICAL) {\n      // When primary axis is VERTICAL and there are two viewport violations\n      this.handleVerticalAxisTwoViolations(errorSum);\n    } else if (visibilityViolations.length === 2 && this.position.axis === ClrAxis.HORIZONTAL) {\n      // When primary axis is HORIZONTAL and there are two viewport violations\n      this.handleHorizontalAxisTwoViolations(errorSum);\n    }\n    return this.contentOffsets;\n  }\n\n  private handleVerticalAxisOneViolation(errorSum: number): void {\n    switch (errorSum) {\n      case 0:\n      case 3: {\n        // BOTTOM(0) or TOP(3) are primary violations and we can just flip sides\n        this.contentOffsets = align(flipSides(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 1: {\n        // LEFT(1) is secondary and needs to nudge content right\n        this.contentOffsets = align(nudgeContent(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 2: {\n        // RIGHT(2) is secondary and  needs to nudge content left\n        this.contentOffsets = align(\n          nudgeContent(this.position, true),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleVerticalAxisTwoViolations(errorSum: number): void {\n    switch (errorSum) {\n      // We know there are two violations. We can use the errorSum to determine which combination of sides were\n      // violated and handle appropriately.\n      case 5: {\n        // TOP(3)+RIGHT(2) is case 5. We need to flip sides and nudge the content to the left\n        const flipAndNudgeLeft = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(\n          flipAndNudgeLeft(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 4: {\n        //TOP(3)+LEFT(1) is case 4, we need to flip sides and nudge content to the right\n        const flipAndNudgeRight = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeRight(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3)+BOTTOM(0) || left(1)+RIGHT(2) is case 3. There is nothing we can do position wise to improve the\n        // placement for this content.\n        break;\n      }\n      case 2: {\n        // BOTTOM(0)+RIGHT(2) is case 2. We need to flip sides and nudge the content to the left\n        const flipAndNudgeLeft = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(\n          flipAndNudgeLeft(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 1: {\n        // BOTTOM(0)+LEFT(1) is case 1. We need to flip sides and nudge to the right\n        const flipAndNudgeRight = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeRight(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleHorizontalAxisOneViolation(errorSum: number): void {\n    switch (errorSum) {\n      case 1:\n      case 2: {\n        // LEFT(1) and RIGHT(2) are primary violations so we can flip sides\n        this.contentOffsets = align(flipSides(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      case 0: {\n        // BOTTOM(0) is a secondary violation and we need to nudge content up\n        this.contentOffsets = align(\n          nudgeContent(this.position, true),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3) is a secondary violation and we need to nudge content down\n        this.contentOffsets = align(nudgeContent(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n\n  private handleHorizontalAxisTwoViolations(errorSum: number): void {\n    switch (errorSum) {\n      case 5:\n      case 4: {\n        // TOP(3)+LEFT(1) is case 4.\n        // TOP(3)+RIGHT(2) is case 5.\n        // In both of these cases we need to flip sides and nudge content down\n        const flipAndNudgeDown = flipSidesAndNudgeContent(flipSides, nudgeContent, false);\n        this.contentOffsets = align(\n          flipAndNudgeDown(this.position),\n          this.currentAnchorCoords,\n          this.currentContentCoords\n        );\n        break;\n      }\n      case 3: {\n        // TOP(3)+BOTTOM(0) || left(1)+RIGHT(2) is case 3. There is nothing we can do position wise to improve the\n        // placement for this content.\n        break;\n      }\n      case 2:\n      case 1: {\n        // BOTTOM(0)+RIGHT(2) is case 2.\n        // BOTTOM(0)+LEFT(1) is case 1.\n        // In both cases we  need to flip sides and nudge content up\n        const flipAndNudgeUp = flipSidesAndNudgeContent(flipSides, nudgeContent, true);\n        this.contentOffsets = align(flipAndNudgeUp(this.position), this.currentAnchorCoords, this.currentContentCoords);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\nimport {\n  Directive,\n  EmbeddedViewRef,\n  Inject,\n  Input,\n  OnDestroy,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n  AfterContentChecked,\n  EventEmitter,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\nimport { ClrPopoverPositionService } from './providers/popover-position.service';\nimport { ClrPopoverPosition } from './interfaces/popover-position.interface';\nimport { debounceTime } from 'rxjs/operators';\n\n// https://github.com/angular/angular/issues/20351#issuecomment-344009887\n/** @dynamic */\n@Directive({ selector: '[clrPopoverContent]' })\nexport class ClrPopoverContent implements AfterContentChecked, OnDestroy {\n  private view: EmbeddedViewRef<void>;\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrPopoverContent')\n  public set open(value: boolean) {\n    this.smartOpenService.open = !!value;\n  }\n\n  @Input('clrPopoverContentAt')\n  set contentAt(position: ClrPopoverPosition) {\n    this.smartPositionService.position = position;\n  }\n\n  @Input('clrPopoverContentOutsideClickToClose')\n  set outsideClickClose(clickToClose) {\n    this.smartEventsService.outsideClickClose = !!clickToClose;\n  }\n\n  @Input('clrPopoverContentScrollToClose')\n  set scrollToClose(scrollToClose) {\n    this.smartEventsService.scrollToClose = !!scrollToClose;\n  }\n\n  constructor(\n    @Inject(DOCUMENT) private document: HTMLDocument,\n    private container: ViewContainerRef,\n    private template: TemplateRef<any>,\n    private renderer: Renderer2,\n    private smartPositionService: ClrPopoverPositionService,\n    private smartEventsService: ClrPopoverEventsService,\n    private smartOpenService: ClrPopoverToggleService\n  ) {}\n\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.smartOpenService.openChange.subscribe(change => {\n        if (change) {\n          this.addContent();\n        } else {\n          this.removeContent();\n        }\n      }),\n      this.smartPositionService.shouldRealign.subscribe(() => {\n        this.shouldRealign = true;\n        // Avoid flickering on initialization, caused by the asynchronous nature of the\n        // check-collector pattern.\n        this.renderer.setStyle(this.view.rootNodes[0], 'opacity', '0');\n      }),\n      // Here we collect subsequent synchronously received content-check events and only take action\n      // at the end of the cycle. See below for details on the check-collector pattern.\n      this.checkCollector.pipe(debounceTime(0)).subscribe(() => {\n        this.alignContent();\n        this.shouldRealign = false;\n        this.renderer.setStyle(this.view.rootNodes[0], 'opacity', '1');\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.removeContent();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private removeContent(): void {\n    if (!this.view) {\n      return;\n    }\n    this.view.rootNodes.forEach(node => this.renderer.removeChild(this.document.body, node));\n    this.container.clear();\n    delete this.view;\n  }\n\n  /**\n   * TODO(matt): investigate why DebugElement retains a reference to the nodes and causes a memory leak.\n   * A note about the use of appendChild/removeChild\n   * The DebugElement is keeping a reference to the detached node and its unclear why.\n   * This does warrant further investigation. But, since it doesn't happen in production mode\n   * it is a low priority issue for now.\n   */\n  private addContent() {\n    // Create the view container\n    this.view = this.container.createEmbeddedView(this.template);\n    this.smartEventsService.contentRef = this.view.rootNodes[0]; // So we know where/what to set close focus on\n    this.renderer.addClass(this.view.rootNodes[0], 'clr-popover-content');\n    // Reset to the begining of the document to be available for sizing/positioning calculations.\n    // If we add new content to the bottom it triggers changes in the layout that may lead to false anchor\n    // coordinates values.\n    this.renderer.setStyle(this.view.rootNodes[0], 'top', '0px');\n    this.renderer.setStyle(this.view.rootNodes[0], 'left', '0px');\n    // We need to hide it during the calculation phase, while it's not yet finally positioned.\n    this.renderer.setStyle(this.view.rootNodes[0], 'opacity', '0');\n    this.renderer.listen(this.view.rootNodes[0], 'click', event => {\n      this.smartOpenService.openEvent = event;\n    });\n    this.view.rootNodes.forEach(node => {\n      this.renderer.appendChild(this.document.body, node);\n    });\n    // Mark for realingment on the next content-check cycle.\n    this.shouldRealign = true;\n  }\n\n  private shouldRealign = false;\n\n  // Check-collector pattern:\n  // In order to get accurate content height/width values, we cannot calculate alignment offsets until\n  // after the projected content has stabilized.\n  // As multiple check events may happen in the same rendering cycle, we need to collect all events\n  // and only act after the content is really stable. Or we may get wrong intermediate positioning values.\n  // We will channel subsequent content check events through this observable.\n  private checkCollector: EventEmitter<void> = new EventEmitter();\n\n  ngAfterContentChecked(): void {\n    if (this.smartOpenService.open && this.view && this.shouldRealign) {\n      // Channel content-check event through the check-collector\n      this.checkCollector.emit();\n    }\n  }\n\n  private alignContent() {\n    if (!this.view) {\n      return;\n    }\n    const positionCoords = this.smartPositionService.alignContent(this.view.rootNodes[0]);\n    this.renderer.setStyle(this.view.rootNodes[0], 'top', `${positionCoords.yOffset}px`);\n    this.renderer.setStyle(this.view.rootNodes[0], 'left', `${positionCoords.xOffset}px`);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, EventEmitter, HostListener, OnDestroy, Output } from '@angular/core';\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrPopoverOpenCloseButton]',\n  host: {\n    '[class.clr-smart-open-close]': 'true',\n  },\n})\nexport class ClrPopoverOpenCloseButton implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(private smartOpenService: ClrPopoverToggleService) {\n    this.subscriptions.push(\n      this.smartOpenService.openChange.subscribe(change => {\n        this.openCloseChange.next(change);\n      })\n    );\n  }\n\n  @Output('clrPopoverOpenCloseChange') openCloseChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  @HostListener('click', ['$event'])\n  handleClick(event: MouseEvent) {\n    this.smartOpenService.toggleWithEvent(event);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, ElementRef, EventEmitter, Output, HostListener, OnDestroy, AfterViewInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\nimport { ClrPopoverToggleService } from './providers/popover-toggle.service';\nimport { filter } from 'rxjs/operators';\n\n@Directive({\n  selector: '[clrPopoverCloseButton]',\n  host: {\n    '[class.clr-smart-close-button]': 'true',\n  },\n})\nexport class ClrPopoverCloseButton implements OnDestroy, AfterViewInit {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private elementRef: ElementRef,\n    private smartEventsService: ClrPopoverEventsService,\n    private smartOpenService: ClrPopoverToggleService\n  ) {\n    this.subscriptions.push(\n      smartOpenService.openChange.pipe(filter(value => !value)).subscribe(() => {\n        this.closeChange.next();\n      })\n    );\n  }\n\n  @Output('clrPopoverOnCloseChange') closeChange: EventEmitter<void> = new EventEmitter<void>();\n\n  @HostListener('click', ['$event'])\n  handleClick(event: MouseEvent) {\n    this.smartOpenService.toggleWithEvent(event);\n    this.smartEventsService.setAnchorFocus();\n  }\n\n  ngAfterViewInit() {\n    this.smartEventsService.closeButtonRef = this.elementRef;\n    this.smartEventsService.setCloseFocus();\n  }\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Directive, ElementRef } from '@angular/core';\nimport { ClrPopoverEventsService } from './providers/popover-events.service';\n\n@Directive({\n  selector: '[clrPopoverAnchor]',\n  host: {\n    '[class.clr-anchor]': 'true',\n  },\n})\nexport class ClrPopoverAnchor {\n  constructor(smartEventService: ClrPopoverEventsService, element: ElementRef) {\n    smartEventService.anchorButtonRef = element;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClrPopoverContent } from './popover-content';\nimport { ClrPopoverOpenCloseButton } from './popover-open-close-button';\nimport { ClrPopoverCloseButton } from './popover-close-button';\nimport { ClrPopoverAnchor } from './popover-anchor';\n\n@NgModule({\n  imports: [],\n  declarations: [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent],\n  exports: [ClrPopoverAnchor, ClrPopoverCloseButton, ClrPopoverOpenCloseButton, ClrPopoverContent],\n})\nexport class ClrPopoverModuleNext {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrLoadingState } from './loading';\n\n/**\n * This is an abstract class because we need it to still be a valid token for dependency injection after transpiling.\n * This does not mean you should extend it, simply implementing it is fine.\n */\nexport abstract class LoadingListener {\n  abstract loadingStateChange(state: ClrLoadingState): void;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrButton } from '../button-group/button';\n\n@Injectable()\nexport class ButtonInGroupService {\n  private _changes: Subject<ClrButton> = new Subject<ClrButton>();\n\n  get changes(): Observable<ClrButton> {\n    return this._changes.asObservable();\n  }\n\n  updateButtonGroup(button: ClrButton): void {\n    this._changes.next(button);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Optional, Output, SkipSelf, TemplateRef, ViewChild } from '@angular/core';\n\nimport { ClrLoadingState } from '../../utils/loading/loading';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\nimport { ButtonInGroupService } from '../providers/button-in-group.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-button',\n  template: `\n        <ng-template #buttonProjectedRef>\n            <button\n                [class]=\"classNames\"\n                (click)=\"emitClick($event)\"\n                [attr.type]=\"type\"\n                [attr.name]=\"name\"\n                [attr.disabled]=\"disabled\"\n                [attr.id]=\"id\">\n                <span class=\"spinner spinner-inline\" *ngIf=\"loading\"></span>\n                <ng-content></ng-content>\n            </button>\n        </ng-template>\n    `,\n  providers: [{ provide: LoadingListener, useExisting: ClrButton }],\n})\nexport class ClrButton implements LoadingListener {\n  private _enableService: boolean = false;\n\n  @ViewChild('buttonProjectedRef', { static: true })\n  templateRef: TemplateRef<ClrButton>;\n\n  constructor(\n    @SkipSelf()\n    @Optional()\n    public buttonInGroupService: ButtonInGroupService,\n    private toggleService: ClrPopoverToggleService\n  ) {}\n\n  private _inMenu: boolean = false;\n\n  get inMenu(): boolean {\n    return this._inMenu;\n  }\n\n  @Input('clrInMenu')\n  set inMenu(value: boolean) {\n    value = !!value;\n    if (this._inMenu !== value) {\n      this._inMenu = value;\n      // We check if the service flag is enabled\n      // and if the service exists because the service is optional\n      if (this._enableService && this.buttonInGroupService) {\n        this.buttonInGroupService.updateButtonGroup(this);\n      }\n    }\n  }\n\n  private _classNames: string = 'btn';\n\n  get classNames(): string {\n    return this._classNames;\n  }\n\n  @Input('class')\n  set classNames(value: string) {\n    if (typeof value === 'string') {\n      const classNames: string[] = value.split(' ');\n      if (classNames.indexOf('btn') === -1) {\n        classNames.push('btn');\n      }\n      this._classNames = classNames.join(' ');\n    }\n  }\n\n  private _name: string = null;\n\n  get name(): string {\n    return this._name;\n  }\n\n  @Input('name')\n  set name(value: string) {\n    if (typeof value === 'string') {\n      this._name = value;\n    }\n  }\n\n  private _type: string = null;\n\n  get type(): string {\n    return this._type;\n  }\n\n  @Input('type')\n  set type(value: string) {\n    if (typeof value === 'string') {\n      this._type = value;\n    }\n  }\n\n  private _id: string = null;\n\n  get id(): string {\n    return this._id;\n  }\n\n  @Input('id')\n  set id(value: string) {\n    if (typeof value === 'string') {\n      this._id = value;\n    }\n  }\n\n  private _disabled: any = null;\n\n  get disabled(): any {\n    return this._disabled;\n  }\n\n  @Input('disabled')\n  set disabled(value: any) {\n    if (value !== null && value !== false) {\n      this._disabled = '';\n    } else {\n      this._disabled = null;\n    }\n  }\n\n  public loading: boolean;\n\n  loadingStateChange(state: ClrLoadingState): void {\n    this.loading = state === ClrLoadingState.LOADING;\n  }\n\n  @Output('click') _click: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  emitClick($event): void {\n    if (this.inMenu) {\n      this.toggleService.toggleWithEvent($event);\n    }\n    this._click.emit(true);\n  }\n\n  ngAfterViewInit() {\n    this._enableService = true;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrCommonStrings } from './common-strings.interface';\n\nexport const commonStringsDefault: ClrCommonStrings = {\n  open: 'Open',\n  close: 'Close',\n  show: 'Show',\n  hide: 'Hide',\n  expand: 'Expand',\n  collapse: 'Collapse',\n  more: 'More',\n  select: 'Select',\n  selectAll: 'Select All',\n  previous: 'Previous',\n  next: 'Next',\n  current: 'Jump to current',\n  info: 'Info',\n  success: 'Success',\n  warning: 'Warning',\n  danger: 'Error',\n  rowActions: 'Available actions',\n  pickColumns: 'Show or hide columns',\n  showColumns: 'Show Columns',\n  sortColumn: 'Sort Column',\n  firstPage: 'First Page',\n  lastPage: 'Last Page',\n  nextPage: 'Next Page',\n  previousPage: 'Previous Page',\n  currentPage: 'Current Page',\n  totalPages: 'Total Pages',\n  minValue: 'Min value',\n  maxValue: 'Max value',\n  modalContentStart: 'Beginning of Modal Content',\n  modalContentEnd: 'End of Modal Content',\n  showColumnsMenuDescription: 'Show or hide columns menu',\n  allColumnsSelected: 'All columns selected',\n  signpostToggle: 'Signpost Toggle',\n  signpostClose: 'Signpost Close',\n  loading: 'Loading',\n  // Datagrid\n  detailPaneStart: 'Start of row details',\n  detailPaneEnd: 'End of row details',\n  singleSelectionAriaLabel: 'Single selection header',\n  singleActionableAriaLabel: 'Single actionable header',\n  detailExpandableAriaLabel: 'Toggle more row content',\n  datagridFilterAriaLabel: 'Toggle column filter',\n  // Alert\n  alertCloseButtonAriaLabel: 'Close alert',\n  // Date Picker\n  datepickerToggle: 'Toggle datepicker',\n  datepickerPreviousMonth: 'Previous month',\n  datepickerCurrentMonth: 'Current month',\n  datepickerNextMonth: 'Next month',\n  datepickerPreviousDecade: 'Previous decade',\n  datepickerNextDecade: 'Next decade',\n  datepickerCurrentDecade: 'Current decade',\n  datepickerSelectMonthText: 'Select month, the current month is {CALENDAR_MONTH}',\n  datepickerSelectYearText: 'Select year, the current year is {CALENDAR_YEAR}',\n  daypickerSRCurrentMonthPhrase: 'The current month is {CURRENT_MONTH}',\n  daypickerSRCurrentYearPhrase: 'The current year is {CURRENT_YEAR}',\n  daypickerSRCurrentDecadePhrase: 'The current decade is {DECADE_RANGE}',\n  // Stack View\n  stackViewChanged: 'Value changed.',\n  // Forms\n  formErrorSummary: 'The form has {ERROR_NUMBER} errors.',\n  //Vertical Nav\n  verticalNavToggle: 'Toggle vertical navigation',\n  verticalNavGroupToggle: 'Toggle vertical navigation group',\n  // Timeline steps\n  timelineStepNotStarted: 'Not started',\n  timelineStepCurrent: 'Current',\n  timelineStepSuccess: 'Completed',\n  timelineStepError: 'Error',\n  timelineStepProcessing: 'In progress',\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { commonStringsDefault } from './../../utils/i18n/common-strings.default';\nimport { ClrCommonStrings } from './../../utils/i18n/common-strings.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClrCommonStringsService {\n  private _strings = commonStringsDefault;\n\n  /**\n   * Allows you to pass in new overrides for localization\n   */\n  localize(overrides: Partial<ClrCommonStrings>) {\n    this._strings = { ...this._strings, ...overrides };\n  }\n\n  /**\n   * Access to all of the keys as strings\n   */\n  get keys(): Readonly<ClrCommonStrings> {\n    return this._strings;\n  }\n\n  /**\n   * Parse a string with a set of tokens to replace\n   */\n  parse(source: string, tokens: { [key: string]: string } = {}) {\n    const names = Object.keys(tokens);\n    let output = source;\n    if (names.length) {\n      names.forEach(name => {\n        output = output.replace(`{${name}}`, tokens[name]);\n      });\n    }\n    return output;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nlet NB_INSTANCES = 0;\n\nexport const UNIQUE_ID = new InjectionToken<string>('UNIQUE_ID');\n\nexport function uniqueIdFactory() {\n  return 'clr-id-' + NB_INSTANCES++;\n}\n\nexport const UNIQUE_ID_PROVIDER = {\n  provide: UNIQUE_ID,\n  useFactory: uniqueIdFactory,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nexport enum ClrSide {\n  BEFORE = -1,\n  AFTER = 1,\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { ClrAxis } from './axis.enum';\nimport { ClrSide } from './side.enum';\nimport { ClrAlignment } from './alignment.enum';\n\ninterface ClrPopoverPositionsInterface {\n  axis: ClrAxis;\n  side: ClrSide;\n  anchor: ClrAlignment;\n  content: ClrAlignment;\n}\n\nexport class ClrPopoverPositions {\n  static 'top-right': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  static 'top-left': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  static 'bottom-right': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  static 'bottom-left': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  static 'right-top': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.END,\n  };\n\n  static 'right-bottom': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n\n  static 'left-top': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.END,\n  };\n\n  static 'left-bottom': ClrPopoverPositionsInterface = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { PLATFORM_ID } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, NgZone, OnDestroy } from '@angular/core';\nimport { uniqueIdFactory } from '../id-generator/id-generator.service';\n\nexport enum ClrAriaLivePoliteness {\n  off = 'off',\n  polite = 'polite',\n  assertive = 'assertive',\n}\n\n/**\n * Time in milliseconds before inserting the content into the container\n */\nconst ARIA_LIVE_TICK: number = 100;\n\n/**\n * This service handle `aria-live` accessibility attribute. The issue is that you need\n * to have the DOM Element with attribute `aria-live` before you could insert content\n * and SR (Screen Reader) pick the change and announce it.\n *\n * ```typescript\n * import { ClrAriaLiveService } from 'src/clr-angular/utils/a11y/aria-live.service';\n *\n * @Component({\n * selector: 'clr-demo-component',\n * providers: [ClrAriaLiveService],\n * template: `\n *   <ng-content></ng-content>\n * `,\n * })\n * export class DemoComponent {\n *  constructor(ariaLiveService: ClrAriaLiveService) {}\n *\n *  public actionThatWillTriggerChange() {\n *    this.ariaLiveService.announce('message that I want to announce to SR');\n *  }\n * }\n * ```\n *\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClrAriaLiveService implements OnDestroy {\n  private ariaLiveElement: HTMLElement;\n  private document: Document;\n  private previousTimeout: ReturnType<typeof setTimeout>;\n\n  constructor(\n    private ngZone: NgZone,\n    @Inject(DOCUMENT) _document: any,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.document = _document;\n  }\n\n  private _id: string = `clr-aria-live-element-${uniqueIdFactory()}`;\n  /**\n   * get access to the internal HTML `id` that gonna be used for the AriaLive container.\n   * @return ID of the DOM Element as string.\n   */\n  public get id(): string {\n    return this._id;\n  }\n\n  /**\n   * Append text content inside the AriaLive Container. This method will check if the\n   * DOM Element is existing if not it will create one for us and the will apply the text.\n   *\n   * ```typescript\n   * this.ariaLiveService.announce(this.el.nativeElement);\n   * // or\n   * this.ariaLiveService.announce('Message to announce to SR');\n   * ```\n   *\n   * @remark\n   * When second argument is `AriaLivePoliteness.off` we won't create aria container or update it.\n   * The reason for that is that we don't want to do additional work if the SR will ignore it.\n   *\n   * @param message - This could be simple string or HTMLElement\n   * @param politeness - 'polite', 'assertive' or 'off'\n   */\n  public announce(\n    message: string | HTMLElement,\n    politeness: ClrAriaLivePoliteness = ClrAriaLivePoliteness.polite\n  ): void {\n    if (politeness === ClrAriaLivePoliteness.off) {\n      return;\n    }\n\n    if (!this.ariaLiveElement && isPlatformBrowser(this.platformId)) {\n      this.ariaLiveElement = this.createContainer();\n    }\n\n    message = typeof message !== 'string' && isPlatformBrowser(this.platformId) ? message.textContent : message;\n\n    // when there is no message do NOTHING!\n    if (!message) {\n      return;\n    }\n\n    this.ariaLiveElement.setAttribute('aria-live', politeness);\n\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n    //   second time without clearing and then using a non-zero delay.\n    // (using JAWS 17 at time of this writing).\n    this.ngZone.runOutsideAngular(() => {\n      // This clearTimeout will stop all older messages from announcing\n      // in the case where the messages are comming too fast we gonna try to append only\n      // the last one. That's what the SR will try to do anyway.\n      clearTimeout(this.previousTimeout);\n      this.previousTimeout = setTimeout(() => {\n        this.ariaLiveElement.textContent = <string>message;\n      }, ARIA_LIVE_TICK);\n    });\n  }\n\n  /**\n   * onDestroy life cycle - must stop all active setTimeouts and remove the AriaLive\n   * container from the document.\n   */\n  public ngOnDestroy() {\n    clearTimeout(this.previousTimeout);\n    if (isPlatformBrowser(this.platformId) && this.ariaLiveElement) {\n      this.document.body.removeChild(this.ariaLiveElement);\n      this.ariaLiveElement = null;\n    }\n  }\n\n  /**\n   * Create AriaLive DOM element as a last child of the document.\n   * After the element is created, we gonna apply Clarity class to hide it from\n   * the screen and set the `aria-live` politness.\n   *\n   * `clr-sr-only` is the CSS class that is used to hide the element from the screen.\n   *\n   * @remark\n   * Calling this method multiple times will create multiple DOM Elements, that\n   * won't be tracked and will be GC after the service is destroyed.\n   *\n   * @return AriaLive container as HTMLElement\n   *\n   */\n  private createContainer(): HTMLElement {\n    const ariaLiveElement = this.document.createElement('div');\n\n    ariaLiveElement.setAttribute('id', this.id);\n    // Use clarity screen reader class to hide the dom element\n    // and fix the scrollbar shake\n    ariaLiveElement.classList.add('clr-sr-only');\n\n    ariaLiveElement.setAttribute('aria-atomic', 'true');\n    ariaLiveElement.setAttribute('aria-live', ClrAriaLivePoliteness.polite);\n\n    this.document.body.appendChild(ariaLiveElement);\n\n    return ariaLiveElement;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Inject, ContentChildren, Input, QueryList } from '@angular/core';\n\nimport { ButtonInGroupService } from '../providers/button-in-group.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverPositions } from '../../utils/popover/enums/positions.enum';\n\nimport { ClrButton } from './button';\n\n@Component({\n  selector: 'clr-button-group',\n  templateUrl: 'button-group.html',\n  providers: [\n    ButtonInGroupService,\n    UNIQUE_ID_PROVIDER,\n    ClrPopoverToggleService,\n    ClrPopoverEventsService,\n    ClrPopoverPositionService,\n  ],\n  host: { '[class.btn-group]': 'true' },\n})\nexport class ClrButtonGroup {\n  @ContentChildren(ClrButton) buttons: QueryList<ClrButton>;\n\n  constructor(\n    public buttonGroupNewService: ButtonInGroupService,\n    private toggleService: ClrPopoverToggleService,\n    @Inject(UNIQUE_ID) public popoverId: string,\n    public commonStrings: ClrCommonStringsService\n  ) {}\n\n  public popoverPosition: ClrPopoverPosition = ClrPopoverPositions['bottom-left'];\n\n  public get open() {\n    return this.toggleService.open;\n  }\n\n  inlineButtons: ClrButton[] = [];\n  menuButtons: ClrButton[] = [];\n\n  /**\n   * 1. Initializes the initial Button Group View\n   * 2. Subscribes to changes on the ContentChildren\n   *    in case the user content projection changes\n   */\n  ngAfterContentInit() {\n    this.initializeButtons();\n    this.buttonGroupNewService.changes.subscribe(button => this.rearrangeButton(button));\n    this.buttons.changes.subscribe(() => {\n      this.initializeButtons();\n    });\n  }\n\n  /**\n   * Moves the button into the other ViewContainer\n   * when an update is received.\n   *\n   * @param button\n   */\n  rearrangeButton(button: ClrButton): void {\n    let fromView: ClrButton[];\n    let toView: ClrButton[];\n    if (button.inMenu) {\n      fromView = this.inlineButtons;\n      toView = this.menuButtons;\n    } else {\n      fromView = this.menuButtons;\n      toView = this.inlineButtons;\n    }\n    const index: number = fromView.indexOf(button);\n    if (index > -1) {\n      fromView.splice(index, 1);\n      const moveIndex = this.getMoveIndex(button);\n      if (moveIndex <= toView.length) {\n        toView.splice(moveIndex, 0, button);\n      }\n    }\n  }\n\n  /**\n   * Author: Eudes\n   *\n   * Finds the order of a button w.r.t other buttons\n   *\n   * @param buttonToMove\n   * @returns\n   */\n  getMoveIndex(buttonToMove: ClrButton): number {\n    const tempArr: ClrButton[] = this.buttons.filter(button => button.inMenu === buttonToMove.inMenu);\n    return tempArr.indexOf(buttonToMove);\n  }\n\n  initializeButtons(): void {\n    const tempInlineButtons: ClrButton[] = [];\n    const tempInMenuButtons: ClrButton[] = [];\n    this.buttons.forEach(button => {\n      if (button.inMenu) {\n        tempInMenuButtons.push(button);\n      } else {\n        tempInlineButtons.push(button);\n      }\n    });\n    this.inlineButtons = tempInlineButtons;\n    this.menuButtons = tempInMenuButtons;\n  }\n\n  /**\n   * Overflow Menu\n   *\n   */\n\n  // Indicates the position of the overflow menu\n  private _menuPosition: string;\n\n  get menuPosition(): string {\n    return this._menuPosition;\n  }\n\n  @Input('clrMenuPosition')\n  set menuPosition(pos: string) {\n    if (pos && ClrPopoverPositions[pos]) {\n      this._menuPosition = pos;\n    } else {\n      this._menuPosition = 'bottom-left';\n    }\n\n    this.popoverPosition = ClrPopoverPositions[this._menuPosition];\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\n\nimport { ClrButton } from './button';\nimport { ClrButtonGroup } from './button-group';\n\nexport const CLR_BUTTON_GROUP_DIRECTIVES: Type<any>[] = [ClrButton, ClrButtonGroup];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrPopoverModuleNext],\n  declarations: [CLR_BUTTON_GROUP_DIRECTIVES],\n  exports: [CLR_BUTTON_GROUP_DIRECTIVES],\n})\nexport class ClrButtonGroupModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, keyframes, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\nimport { ClrLoadingState } from '../../utils/loading/loading';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\n\n@Component({\n  selector: 'button[clrLoading]',\n  template: `\n        <ng-container [ngSwitch]=\"state\">\n            <span *ngSwitchCase=\"buttonState.LOADING\">\n                <span @spinner class=\"spinner spinner-inline\"></span>\n            </span>\n            <span *ngSwitchCase=\"buttonState.SUCCESS\">\n                <span @validated (@validated.done)=\"this.loadingStateChange(this.buttonState.DEFAULT)\" class=\"spinner spinner-inline spinner-check\"></span>\n            </span>\n            <span *ngSwitchCase=\"buttonState.DEFAULT\" @defaultButton>\n                <ng-content></ng-content>\n            </span>\n        </ng-container>\n    `,\n  providers: [{ provide: LoadingListener, useExisting: ClrLoadingButton }],\n  animations: [\n    trigger('defaultButton', [\n      transition(':enter', [style({ opacity: 0 }), animate('200ms 100ms ease-in', style({ opacity: 1 }))]),\n      // TODO: see if we can get leave animation to work before spinner's enter animation\n      transition(':leave', [style({ opacity: 0 })]),\n    ]),\n    trigger('spinner', [\n      transition(':enter', [style({ opacity: 0 }), animate('200ms 100ms ease-in', style({ opacity: 1 }))]),\n      transition(':leave', [style({ opacity: 1 }), animate('100ms ease-out', style({ opacity: 0 }))]),\n    ]),\n    trigger('validated', [\n      transition(':enter', [\n        animate(\n          '600ms',\n          keyframes([\n            style({ transform: 'scale(0,0)', offset: 0 }),\n            style({ opacity: 1, offset: 0.2 }),\n            style({ transform: 'scale(1.2,1.2)', offset: 0.4 }),\n            style({ transform: 'scale(.9,.9)', offset: 0.6 }),\n            style({ transform: 'scale(1,1)', offset: 1 }),\n          ])\n        ),\n      ]),\n      transition(':leave', [style({ opacity: 1 }), animate('100ms ease-out', style({ opacity: 0 }))]),\n    ]),\n  ],\n  host: { '[attr.disabled]': \"disabled? '' : null\" },\n})\nexport class ClrLoadingButton implements LoadingListener {\n  public buttonState = ClrLoadingState;\n  public state: ClrLoadingState = ClrLoadingState.DEFAULT;\n\n  @Input('disabled') public disabled: boolean;\n\n  @Output('clrLoadingChange')\n  public clrLoadingChange: EventEmitter<ClrLoadingState> = new EventEmitter<ClrLoadingState>(false);\n\n  constructor(public el: ElementRef, private renderer: Renderer2) {}\n\n  loadingStateChange(state: ClrLoadingState): void {\n    if (state === this.state) {\n      return;\n    }\n    this.state = state;\n\n    switch (state) {\n      case ClrLoadingState.DEFAULT:\n        this.renderer.removeStyle(this.el.nativeElement, 'width');\n        this.renderer.removeStyle(this.el.nativeElement, 'transform'); // for chromium render bug see issue https://github.com/vmware/clarity/issues/2700\n        if (!this.disabled) {\n          this.renderer.removeAttribute(this.el.nativeElement, 'disabled');\n        }\n        break;\n      case ClrLoadingState.LOADING:\n        this.setExplicitButtonWidth();\n        this.renderer.setStyle(this.el.nativeElement, 'transform', 'translatez(0)'); // for chromium render bug see issue https://github.com/vmware/clarity/issues/2700\n        this.renderer.setAttribute(this.el.nativeElement, 'disabled', '');\n        break;\n      case ClrLoadingState.SUCCESS:\n        this.setExplicitButtonWidth();\n        break;\n      case ClrLoadingState.ERROR:\n        this.loadingStateChange(ClrLoadingState.DEFAULT);\n        break;\n      default:\n        break;\n    }\n    this.clrLoadingChange.emit(state);\n  }\n\n  private setExplicitButtonWidth() {\n    if (this.el.nativeElement && this.el.nativeElement.getBoundingClientRect) {\n      const boundingClientRect = this.el.nativeElement.getBoundingClientRect();\n      this.renderer.setStyle(this.el.nativeElement, 'width', `${boundingClientRect.width}px`);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrLoadingButton } from './loading-button';\n\nexport const CLR_LOADING_BUTTON_DIRECTIVES: Type<any>[] = [ClrLoadingButton];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_LOADING_BUTTON_DIRECTIVES],\n  exports: [CLR_LOADING_BUTTON_DIRECTIVES],\n})\nexport class ClrLoadingButtonModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { ClrButtonGroupModule } from './button-group/button-group.module';\nimport { ClrLoadingButtonModule } from './button-loading/loading-button.module';\n\n@NgModule({\n  exports: [ClrLoadingButtonModule, ClrButtonGroupModule],\n})\nexport class ClrButtonModule {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  template: '',\n})\nexport class EmptyAnchor {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\n\nimport { EmptyAnchor } from './empty-anchor';\n\n/**\n * Internal module, please do not export!\n */\n@NgModule({ declarations: [EmptyAnchor], exports: [EmptyAnchor], entryComponents: [EmptyAnchor] })\nexport class ClrHostWrappingModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Observable } from 'rxjs';\n\nlet counter = 0;\n\n@Injectable()\nexport class ControlIdService {\n  private _id = 'clr-form-control-' + ++counter;\n  get id(): string {\n    return this._id;\n  }\n  set id(value: string) {\n    this._id = value;\n    this._idChange.next(value);\n  }\n\n  private _idChange: BehaviorSubject<string> = new BehaviorSubject(this._id);\n  public get idChange(): Observable<string> {\n    return this._idChange.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nexport enum Layouts {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n  COMPACT = 'compact',\n}\n\n@Injectable()\nexport class LayoutService {\n  readonly minLabelSize = 1;\n  readonly maxLabelSize = 12;\n  layout: Layouts = Layouts.HORIZONTAL;\n\n  // This is basically a replacement for Object.values(), which IE11 and Node <9 don't support :(\n  // String enums cannot be reverse-mapped, meaning Layouts['COMPACT'] does not return 'compact' so\n  // this exists to deal with this little caveat to get the list of the values as an array.\n  private layoutValues: string[] = Object.keys(Layouts).map(key => Layouts[key]);\n  private _labelSize: number = 2;\n\n  set labelSize(size: number) {\n    if (this.labelSizeIsValid(size)) {\n      this._labelSize = size;\n    }\n  }\n\n  get labelSize(): number {\n    return this._labelSize;\n  }\n\n  isVertical(): boolean {\n    return this.layout === Layouts.VERTICAL;\n  }\n\n  isHorizontal(): boolean {\n    return this.layout === Layouts.HORIZONTAL;\n  }\n\n  isCompact(): boolean {\n    return this.layout === Layouts.COMPACT;\n  }\n\n  get layoutClass(): string {\n    return `clr-form-${this.layout}`;\n  }\n\n  isValid(layout: string): boolean {\n    return this.layoutValues.indexOf(layout) > -1;\n  }\n\n  labelSizeIsValid(labelSize: number): boolean {\n    return Number.isInteger(labelSize) && labelSize >= this.minLabelSize && labelSize <= this.maxLabelSize;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, Optional } from '@angular/core';\nimport { LayoutService } from './layout.service';\n\n@Injectable()\nexport class ControlClassService {\n  className = '';\n\n  constructor(@Optional() private layoutService: LayoutService) {}\n\n  controlClass(invalid = false, grid = false, additional = '') {\n    const controlClasses = [this.className, additional];\n    if (invalid) {\n      controlClasses.push('clr-error');\n    }\n    if (grid && this.layoutService && this.className.indexOf('clr-col') === -1) {\n      controlClasses.push(`clr-col-md-${this.layoutService.maxLabelSize - this.layoutService.labelSize} clr-col-12`);\n    }\n    return controlClasses.join(' ').trim();\n  }\n\n  // We want to remove the column classes from the input up to the container\n  initControlClass(renderer, element: HTMLElement) {\n    if (element && element.className) {\n      this.className = element.className;\n      const klasses = element.className.split(' ');\n      klasses.forEach(klass => {\n        if (klass.startsWith('clr-col')) {\n          renderer.removeClass(element, klass);\n        }\n      });\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional, ElementRef, AfterViewInit } from '@angular/core';\nimport { ControlIdService } from './providers/control-id.service';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\nimport { ControlClassService } from './providers/control-class.service';\n\n@Component({\n  providers: [ClrAriaLiveService],\n  selector: 'clr-control-error',\n  template: `\n    <ng-content></ng-content>\n    `,\n  host: {\n    '[class.clr-subtext]': 'true',\n    '[id]': 'controlIdService?.id + \"-error\"',\n  },\n})\nexport class ClrControlError implements AfterViewInit {\n  constructor(\n    @Optional() public controlIdService: ControlIdService,\n    @Optional() public controlClassService: ControlClassService,\n    private ariaLiveService: ClrAriaLiveService,\n    private el: ElementRef\n  ) {}\n\n  /** @deprecated since 3.0, remove in 4.0 - ariaLiveService */\n  ngAfterViewInit() {\n    /**\n     * The way we render elements inside the `clr-control-container make this\n     * component announce itself without been visible on the screen.\n     *\n     * The check below try to guess is clr-controll-error used in some of the\n     * cases mention above and prevent us from announcing without the need of that.\n     *\n     * This change won't create breaking change - but will make aria live announcment\n     * work only when the component is used outside forms or some of the components.\n     *\n     * This is temporary solution - until better is found.\n     *\n     */\n    if (this.controlClassService === null) {\n      this.ariaLiveService.announce(this.el.nativeElement);\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { ControlIdService } from './providers/control-id.service';\n\n@Component({\n  selector: 'clr-control-helper',\n  template: `\n    <ng-content></ng-content>\n    `,\n  host: {\n    '[class.clr-subtext]': 'true',\n    '[id]': 'controlIdService?.id + \"-helper\"',\n  },\n})\nexport class ClrControlHelper {\n  constructor(@Optional() public controlIdService: ControlIdService) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class NgControlService {\n  // Observable to subscribe to the control, since its not available immediately for projected content\n  private _controlChanges: Subject<NgControl> = new Subject<NgControl>();\n  get controlChanges(): Observable<NgControl> {\n    return this._controlChanges.asObservable();\n  }\n\n  setControl(control: NgControl) {\n    this._controlChanges.next(control);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { NgControlService } from '../providers/ng-control.service';\n\n@Injectable()\nexport class IfErrorService implements OnDestroy {\n  // Implement our own status changes observable, since Angular controls don't\n  // fire on events like blur, and we want to return the boolean state instead of a string\n  private _statusChanges: Subject<boolean> = new Subject();\n  get statusChanges(): Observable<boolean> {\n    return this._statusChanges.asObservable();\n  }\n\n  private subscriptions: Subscription[] = [];\n  private control: NgControl;\n\n  constructor(private ngControlService: NgControlService) {\n    // Wait for the control to be available\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        if (control) {\n          this.control = control;\n          this.listenForChanges();\n        }\n      })\n    );\n  }\n\n  // Subscribe to the status change events, only after touched and emit the control\n  private listenForChanges() {\n    this.subscriptions.push(\n      this.control.statusChanges.subscribe(() => {\n        this.sendValidity();\n      })\n    );\n  }\n\n  private sendValidity() {\n    if (this.control.touched && this.control.invalid) {\n      this._statusChanges.next(true);\n    } else {\n      this._statusChanges.next(false);\n    }\n  }\n\n  // Allows a control to push a status check upstream, such as on blur\n  triggerStatusChange() {\n    if (this.control) {\n      this.sendValidity();\n    }\n  }\n\n  // Clean up subscriptions\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, Optional, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfErrorService } from './if-error.service';\nimport { NgControlService } from '../providers/ng-control.service';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrIfError]' })\nexport class ClrIfError {\n  constructor(\n    @Optional() private ifErrorService: IfErrorService,\n    @Optional() private ngControlService: NgControlService,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    if (!this.ifErrorService) {\n      throw new Error('clrIfError can only be used within a form control container element like clr-input-container');\n    } else {\n      this.displayError(false);\n    }\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        // If there is a specific error to track, check it, otherwise check overall validity\n        if (this.error && this.control) {\n          this.displayError(this.control.hasError(this.error));\n        } else {\n          this.displayError(invalid);\n        }\n      })\n    );\n  }\n\n  @Input('clrIfError') error: string;\n\n  private subscriptions: Subscription[] = [];\n  private displayed: boolean = false;\n  private control: NgControl;\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private displayError(invalid: boolean) {\n    if (invalid && !this.displayed) {\n      this.container.createEmbeddedView(this.template, { error: this.control.getError(this.error) });\n      this.displayed = true;\n    } else if (!invalid) {\n      this.container.clear();\n      this.displayed = false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostBinding, Input, OnDestroy, OnInit, Optional, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ControlIdService } from './providers/control-id.service';\nimport { LayoutService } from './providers/layout.service';\nimport { NgControlService } from './providers/ng-control.service';\n\n@Directive({ selector: 'label' })\nexport class ClrLabel implements OnInit, OnDestroy {\n  constructor(\n    @Optional() private controlIdService: ControlIdService,\n    @Optional() private layoutService: LayoutService,\n    @Optional() private ngControlService: NgControlService,\n    private renderer: Renderer2,\n    private el: ElementRef\n  ) {}\n\n  @HostBinding('attr.for')\n  @Input('for')\n  forAttr: string;\n\n  private subscriptions: Subscription[] = [];\n  private enableGrid = true;\n\n  get labelText(): string {\n    return this.el.nativeElement && this.el.nativeElement.textContent;\n  }\n\n  ngOnInit() {\n    // Only add the clr-control-label if it is inside a control container\n    if (this.controlIdService || this.ngControlService) {\n      this.renderer.addClass(this.el.nativeElement, 'clr-control-label');\n    }\n    // Only set the grid column classes if we are in the right context and if they aren't already set\n    if (\n      this.enableGrid &&\n      this.layoutService &&\n      !this.layoutService.isVertical() &&\n      this.el.nativeElement &&\n      this.el.nativeElement.className.indexOf('clr-col') < 0\n    ) {\n      this.renderer.addClass(this.el.nativeElement, 'clr-col-12');\n      this.renderer.addClass(this.el.nativeElement, `clr-col-md-${this.layoutService.labelSize}`);\n    }\n    if (this.controlIdService && !this.forAttr) {\n      this.subscriptions.push(this.controlIdService.idChange.subscribe(id => (this.forAttr = id)));\n    }\n  }\n\n  disableGrid() {\n    this.enableGrid = false;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\n\n@Injectable()\nexport class MarkControlService {\n  private _touched: Subject<void> = new Subject();\n\n  get touchedChange(): Observable<void> {\n    return this._touched.asObservable();\n  }\n\n  markAsTouched() {\n    this._touched.next();\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  ContentChildren,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  PLATFORM_ID,\n  QueryList,\n  Input,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { LayoutService } from './providers/layout.service';\nimport { MarkControlService } from './providers/mark-control.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrLabel } from './label';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Directive({\n  selector: '[clrForm]',\n  providers: [LayoutService, MarkControlService, ClrAriaLiveService],\n  host: {\n    '[class.clr-form]': 'true',\n    '[class.clr-form-horizontal]': 'layoutService.isHorizontal()',\n    '[class.clr-form-compact]': 'layoutService.isCompact()',\n  },\n})\nexport class ClrForm {\n  private invalidControls = [];\n\n  @Input('clrLabelSize')\n  set labelSize(size: number) {\n    this.layoutService.labelSize = size;\n  }\n\n  constructor(\n    public layoutService: LayoutService,\n    private markControlService: MarkControlService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private el: ElementRef,\n    private commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {}\n\n  /** @deprecated since 2.0 */\n  markAsDirty(updateAriaLiveText?: boolean) {\n    this.markAsTouched((updateAriaLiveText = true));\n  }\n\n  // Trying to avoid adding an input and keep this backwards compatible at the same time\n  markAsTouched(updateAriaLiveText?: boolean) {\n    this.markControlService.markAsTouched();\n\n    // I don't think consumers will call this with undefined, null or other values but\n    // want to make sure this only guards against when this is called with false\n    if (updateAriaLiveText !== false && isPlatformBrowser(this.platformId)) {\n      this.invalidControls = Array.from(this.el.nativeElement.querySelectorAll('.ng-invalid'));\n      if (this.invalidControls.length > 0) {\n        this.invalidControls[0].focus();\n        this.updateAriaLive();\n      }\n    }\n  }\n\n  @ContentChildren(ClrLabel, { descendants: true })\n  labels: QueryList<ClrLabel>;\n\n  @HostListener('submit')\n  onFormSubmit() {\n    this.markAsTouched();\n  }\n\n  /** @deprecated since 3.0, remove in 4.0 */\n  private updateAriaLive(): void {\n    if (this.invalidControls.length === 0) {\n      return;\n    }\n\n    const errorList = this.labels.filter(label => this.invalidControls.find(control => label.forAttr === control.id));\n\n    this.ariaLiveService.announce(\n      this.commonStrings.parse(this.commonStrings.keys.formErrorSummary, { ERROR_NUMBER: errorList.length.toString() })\n    );\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Input, OnInit } from '@angular/core';\nimport { Layouts, LayoutService } from './providers/layout.service';\n\n@Directive({\n  selector: '[clrForm][clrLayout]',\n})\nexport class ClrLayout implements OnInit {\n  @Input('clrLayout') layout: Layouts;\n\n  constructor(public layoutService: LayoutService) {}\n\n  ngOnInit() {\n    // Only set the layout if it is a valid option\n    if (this.layout && this.layoutService.isValid(this.layout)) {\n      this.layoutService.layout = this.layout;\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ContentChild, Directive, OnDestroy, Optional } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { IfErrorService } from './if-error/if-error.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { LayoutService } from './providers/layout.service';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ClrLabel } from './label';\nimport { ControlClassService } from './providers/control-class.service';\n\n@Directive()\nexport abstract class ClrAbstractContainer implements DynamicWrapper, OnDestroy {\n  protected subscriptions: Subscription[] = [];\n  invalid = false;\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: false })\n  label: ClrLabel;\n  control: NgControl;\n\n  constructor(\n    protected ifErrorService: IfErrorService,\n    @Optional() protected layoutService: LayoutService,\n    protected controlClassService: ControlClassService,\n    protected ngControlService: NgControlService\n  ) {\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        this.invalid = invalid;\n      })\n    );\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      })\n    );\n  }\n\n  controlClass() {\n    return this.controlClassService.controlClass(this.invalid, this.addGrid());\n  }\n\n  addGrid() {\n    return this.layoutService && !this.layoutService.isVertical();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.map(sub => sub.unsubscribe());\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { ClrAbstractContainer } from '../common/abstract-container';\nimport { IfErrorService } from './if-error/if-error.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { ControlIdService } from './providers/control-id.service';\nimport { ControlClassService } from './providers/control-class.service';\n\n@Component({\n  selector: 'clr-control-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-input-wrapper\">\n                <ng-content></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrControlContainer extends ClrAbstractContainer {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ElementRef,\n  InjectionToken,\n  Injector,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { DynamicWrapper } from './dynamic-wrapper';\nimport { EmptyAnchor } from './empty-anchor';\n\n/**\n * HostWrapper must be called in OnInit to ensure that the Views are ready. If its called in a constructor the view is\n * still undefined.\n * TODO - make sure these comment annotations do not break ng-packgr.\n */\nexport class HostWrapper<W extends DynamicWrapper> implements Injector {\n  constructor(containerType: Type<W>, vcr: ViewContainerRef, index: number = 0) {\n    this.injector = vcr.injector;\n    // If the host is already wrapped, we don't do anything\n    if (!this.injector.get(containerType, null)) {\n      const cfr = this.injector.get(ComponentFactoryResolver);\n      const el = this.injector.get(ElementRef);\n\n      // We need a new anchor, since we're projecting the current one.\n      vcr.createComponent(cfr.resolveComponentFactory(EmptyAnchor));\n      const factory: ComponentFactory<W> = cfr.resolveComponentFactory(containerType);\n      // Craft the element array based on what slot to use. Angular only uses the index to determine\n      // which ng-content to project into, so if you have more than one ng-content you'll need to set\n      // the index in the constructor appropriately\n      const element = [];\n      element[index] = [el.nativeElement];\n      // We're assuming only one projection slot, but in more complex cases we might want to provide\n      // a different array of projected elements.\n      const containerRef = vcr.createComponent(factory, undefined, undefined, element);\n      // We can now remove the useless anchor\n      vcr.remove(0);\n\n      // We note that the container was dynamically created\n      containerRef.instance._dynamic = true;\n\n      // We keep the wrapper's injector to access the dependencies that weren't available before.\n      this.injector = containerRef.injector;\n    }\n  }\n\n  private injector: Injector;\n\n  get<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T): T {\n    return this.injector.get(token, notFoundValue);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  HostBinding,\n  InjectionToken,\n  HostListener,\n  Injector,\n  Input,\n  OnInit,\n  Type,\n  ViewContainerRef,\n  Renderer2,\n  ElementRef,\n  OnDestroy,\n  Directive,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter, distinctUntilChanged, startWith } from 'rxjs/operators';\n\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\nimport { ControlIdService } from './providers/control-id.service';\nimport { NgControlService } from './providers/ng-control.service';\nimport { IfErrorService } from './if-error/if-error.service';\nimport { NgControl } from '@angular/forms';\nimport { ControlClassService } from './providers/control-class.service';\nimport { MarkControlService } from './providers/mark-control.service';\n\n@Directive()\nexport class WrappedFormControl<W extends DynamicWrapper> implements OnInit, OnDestroy {\n  protected ngControlService: NgControlService;\n  private ifErrorService: IfErrorService;\n  private controlClassService: ControlClassService;\n  private markControlService: MarkControlService;\n  protected renderer: Renderer2;\n  protected el: ElementRef<any>;\n\n  protected subscriptions: Subscription[] = [];\n  protected index = 0;\n  protected controlIdService: ControlIdService;\n\n  _id: string;\n\n  // I lost way too much time trying to make this work without injecting the ViewContainerRef and the Injector,\n  // I'm giving up. So we have to inject these two manually for now.\n  constructor(\n    protected vcr: ViewContainerRef,\n    protected wrapperType: Type<W>,\n    injector: Injector,\n    private ngControl: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    this.renderer = renderer;\n    this.el = el;\n    try {\n      this.ngControlService = injector.get(NgControlService);\n      this.ifErrorService = injector.get(IfErrorService);\n      this.controlClassService = injector.get(ControlClassService);\n      this.markControlService = injector.get(MarkControlService);\n    } catch (e) {}\n\n    if (this.controlClassService) {\n      this.controlClassService.initControlClass(renderer, el.nativeElement);\n    }\n    if (this.markControlService) {\n      this.subscriptions.push(\n        this.markControlService.touchedChange.subscribe(() => {\n          this.ngControl.control.markAsTouched();\n          this.ngControl.control.updateValueAndValidity();\n        })\n      );\n    }\n  }\n\n  @HostBinding()\n  @Input()\n  get id() {\n    return this._id;\n  }\n  set id(value: string) {\n    this._id = value;\n    if (this.controlIdService) {\n      this.controlIdService.id = value;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    if (this.ifErrorService) {\n      this.ifErrorService.triggerStatusChange();\n    }\n  }\n\n  private _containerInjector: Injector;\n\n  // @TODO This method has a try/catch due to an unknown issue that came when building the clrToggle feature\n  // We need to figure out why this fails for the ClrToggle scenario but works for Date picker...\n  // To see the error, remove the try/catch here and run the ClrToggle suite to see issues getting the container\n  // injector in time, and this ONLY HAPPENS in tests and not in dev/prod mode.\n  protected getProviderFromContainer<T>(token: Type<T> | InjectionToken<T>, notFoundValue?: T): T {\n    try {\n      return this._containerInjector.get(token, notFoundValue);\n    } catch (e) {\n      return notFoundValue;\n    }\n  }\n\n  ngOnInit() {\n    this._containerInjector = new HostWrapper(this.wrapperType, this.vcr, this.index);\n    this.controlIdService = this._containerInjector.get(ControlIdService);\n\n    if (this._id) {\n      this.controlIdService.id = this._id;\n    } else {\n      this._id = this.controlIdService.id;\n    }\n\n    if (this.ngControlService) {\n      this.ngControlService.setControl(this.ngControl);\n    }\n\n    this.listenForErrorStateChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private listenForErrorStateChanges() {\n    if (this.ifErrorService) {\n      this.subscriptions.push(\n        this.ifErrorService.statusChanges\n          .pipe(startWith(false), filter(() => this.renderer && !!this.el), distinctUntilChanged())\n          .subscribe(error => this.setAriaDescribedBy(error))\n      );\n    }\n  }\n\n  private setAriaDescribedBy(error: boolean) {\n    this.renderer.setAttribute(this.el.nativeElement, 'aria-describedby', this.getAriaDescribedById(error));\n  }\n\n  private getAriaDescribedById(error: boolean): string {\n    return this.controlIdService.id.concat(error ? '-error' : '-helper');\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, Injector, Optional, Renderer2, Self, ViewContainerRef } from '@angular/core';\nimport { WrappedFormControl } from './wrapped-control';\nimport { ClrControlContainer } from './control-container';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrControl]', host: { '[class.clr-input]': 'true' } })\nexport class ClrControl extends WrappedFormControl<ClrControlContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrControlContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrControlError } from './error';\nimport { ClrControlHelper } from './helper';\nimport { ClrIfError } from './if-error/if-error';\nimport { ClrLabel } from './label';\nimport { ClrForm } from './form';\nimport { ClrLayout } from './layout';\nimport { ClrControlContainer } from './control-container';\nimport { ClrControl } from './control';\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [\n    ClrLabel,\n    ClrControlError,\n    ClrControlHelper,\n    ClrIfError,\n    ClrForm,\n    ClrLayout,\n    ClrControlContainer,\n    ClrControl,\n  ],\n  exports: [\n    ClrLabel,\n    ClrControlError,\n    ClrControlHelper,\n    ClrIfError,\n    ClrForm,\n    ClrLayout,\n    ClrControlContainer,\n    ClrControl,\n  ],\n  entryComponents: [ClrControlContainer],\n})\nexport class ClrCommonFormsModule {}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, OnInit, ContentChild, Inject, InjectionToken, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ClrLabel } from '../common/label';\n\nexport const IS_TOGGLE = new InjectionToken<BehaviorSubject<boolean>>('IS_TOGGLE');\nexport function isToggleFactory() {\n  return new BehaviorSubject<boolean>(false);\n}\nexport const IS_TOGGLE_PROVIDER = { provide: IS_TOGGLE, useFactory: isToggleFactory };\n\n@Component({\n  selector: 'clr-checkbox-wrapper,clr-toggle-wrapper',\n  template: `\n    <ng-content select=\"[clrCheckbox],[clrToggle]\"></ng-content>\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label\"></label>\n  `,\n  host: {\n    '[class.clr-checkbox-wrapper]': '!toggle',\n    '[class.clr-toggle-wrapper]': 'toggle',\n  },\n  providers: [ControlIdService, IS_TOGGLE_PROVIDER],\n})\nexport class ClrCheckboxWrapper implements DynamicWrapper, OnInit, OnDestroy {\n  // We need both _dynamic for HostWrapper and ContentChild(ClrLabel) in cases where\n  // the user puts a radio inside a wrapper without a label, host wrapping doesn't apply\n  // but we'd still need to insert a label\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: true })\n  label: ClrLabel;\n  toggle = false;\n  private subscriptions: Subscription[] = [];\n\n  constructor(@Inject(IS_TOGGLE) toggleService: BehaviorSubject<boolean>) {\n    this.subscriptions.push(\n      toggleService.subscribe(state => {\n        this.toggle = state;\n      })\n    );\n  }\n\n  ngOnInit() {\n    if (this.label) {\n      this.label.disableGrid();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Renderer2, ElementRef, Injector, Self, Optional, ViewContainerRef, Attribute } from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { ClrCheckboxWrapper, IS_TOGGLE } from './checkbox-wrapper';\nimport { WrappedFormControl } from '../common/wrapped-control';\n\n/**\n * This implements both the clrCheckbox and clrToggle functionality, since they are both just checkboxes with different\n * visual styling. The challenge is that the container needs to know which selector was used, which the @Attribute\n * decorator gets for us to determine if the toggle is used, and emits a value to the wrapper container to tell it\n * there is a toggle switch instead.\n */\n@Directive({ selector: '[clrCheckbox],[clrToggle]' })\nexport class ClrCheckbox extends WrappedFormControl<ClrCheckboxWrapper> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    @Attribute('clrToggle') private toggle: string\n  ) {\n    super(vcr, ClrCheckboxWrapper, injector, control, renderer, el);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    const toggleService = this.getProviderFromContainer<BehaviorSubject<boolean>>(IS_TOGGLE, null);\n\n    if (toggleService && this.toggle !== null) {\n      toggleService.next(true);\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-checkbox-container,clr-toggle-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [class.clr-control-inline]=\"clrInline\" [ngClass]=\"controlClass()\">\n      <ng-content select=\"clr-checkbox-wrapper,clr-toggle-wrapper\"></ng-content>\n      <div class=\"clr-subtext-wrapper\">\n        <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n        <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n      </div>\n    </div>\n  `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [NgControlService, ControlClassService, IfErrorService],\n})\nexport class ClrCheckboxContainer extends ClrAbstractContainer {\n  private inline = false;\n  // private formGroup: AbstractControl;\n\n  /*\n   * Here we want to support the following cases\n   * clrInline - true by presence\n   * clrInline=\"true|false\" - unless it is explicitly false, strings are considered true\n   * [clrInline]=\"true|false\" - expect a boolean\n   */\n  @Input()\n  set clrInline(value: boolean | string) {\n    if (typeof value === 'string') {\n      this.inline = value === 'false' ? false : true;\n    } else {\n      this.inline = !!value;\n    }\n  }\n  get clrInline() {\n    return this.inline;\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrCheckbox } from './checkbox';\nimport { ClrCheckboxContainer } from './checkbox-container';\nimport { ClrCheckboxWrapper } from './checkbox-wrapper';\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrCommonFormsModule, ClrHostWrappingModule],\n  declarations: [ClrCheckbox, ClrCheckboxContainer, ClrCheckboxWrapper],\n  exports: [ClrCommonFormsModule, ClrCheckbox, ClrCheckboxContainer, ClrCheckboxWrapper],\n  entryComponents: [ClrCheckboxWrapper],\n})\nexport class ClrCheckboxModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nlet activeCounter = 0;\n\nexport const IF_ACTIVE_ID = new InjectionToken<number>('IF_ACTIVE_ID');\n\nexport function tokenFactory() {\n  return ++activeCounter;\n}\n\nexport const IF_ACTIVE_ID_PROVIDER = {\n  provide: IF_ACTIVE_ID,\n  useFactory: tokenFactory,\n};\n\n@Injectable()\n\n/*********\n * @class IfActiveService\n *\n * @description\n * An injectable service used by IfActive structural directives and the components that implement IfActive in their\n * templates. It holds the value of the current state and provides an Observable that both the directive and the\n * implementing component can subscribe to in order to take action on current value changes.\n *\n */\nexport class IfActiveService {\n  /********\n   * @property _currentChange\n   *\n   * @description\n   * A RXJS Subject that updates and provides subscriptions to for the current current state of a component template\n   * implemting the IfActive structural directive.\n   *\n   */\n  private _currentChange: Subject<number> = new Subject<number>();\n\n  /*********\n   * @property _current\n   *\n   * @description\n   * A property holding the current value for current/closed state of an IfActive structural directive.\n   */\n  private _current: number;\n\n  /*********\n   *\n   * @description\n   * A getter function that provides an observable for the _current Subject.\n   *\n   */\n  public get currentChange(): Observable<number> {\n    return this._currentChange.asObservable();\n  }\n\n  /*********\n   *\n   * @description\n   * A setter function that updates the current state of _current for this instance of IfActive structural directive.\n   * And, broadcasts the new value to all subscribers.\n   *\n   * @param value\n   */\n  public set current(value: number) {\n    if (this._current !== value) {\n      this._current = value;\n      this._currentChange.next(value);\n    }\n  }\n\n  /*********\n   *\n   * @description\n   * A getter that returns the current value of this IfActive instance.\n   * @returns\n   */\n  public get current(): number {\n    return this._current;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IF_ACTIVE_ID, IfActiveService } from './if-active.service';\n\n@Directive({ selector: '[clrIfActive]' })\n\n/**********\n *\n * @class ClrIfActive\n *\n * @description\n * A structural directive that controls whether or not the associated TemplateRef is instantiated or not.\n * It makes use of a Component instance level service: IfActiveService to maintain state between itself and\n * the component using it in the component template.\n *\n */\nexport class ClrIfActive implements OnDestroy {\n  private subscription: Subscription;\n  private wasActive: boolean = false;\n\n  constructor(\n    private ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) private id: number,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    this.checkAndUpdateView(ifActiveService.current);\n\n    this.subscription = this.ifActiveService.currentChange.subscribe(newCurrentId => {\n      this.checkAndUpdateView(newCurrentId);\n    });\n  }\n\n  private checkAndUpdateView(currentId: number) {\n    const isNowActive = currentId === this.id;\n    // only emit if the new active state is changed since last time.\n    if (isNowActive !== this.wasActive) {\n      this.updateView(isNowActive);\n      this.activeChange.emit(isNowActive);\n      this.wasActive = isNowActive;\n    }\n  }\n\n  /*********\n   *\n   * @description\n   * A setter that updates IfActiveService.active with value.\n   *\n   * @param value\n   */\n  @Input('clrIfActive')\n  public set active(value: boolean) {\n    if (value) {\n      this.ifActiveService.current = this.id;\n    }\n  }\n\n  /**********\n   * @property activeChange\n   *\n   * @description\n   * An event emitter that emits when the active property is set to allow for 2way binding when the directive is\n   * used with de-structured / de-sugared syntax.\n   *\n   */\n  @Output('clrIfActiveChange') activeChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /********\n   *\n   * @description\n   * A getter that returns the current IfActiveService.active value.\n   */\n  public get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  /*********\n   *\n   * @description\n   * Function that takes a any value and either created an embedded view for the associated ViewContainerRef or,\n   * Clears all views from the ViewContainerRef\n   * @param value\n   */\n  public updateView(value: boolean) {\n    if (value) {\n      this.container.createEmbeddedView(this.template);\n    } else {\n      this.container.clear();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, EventEmitter, Input, OnDestroy, Output, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from '../popover/providers/popover-toggle.service';\n\n@Directive({ selector: '[clrIfOpen]' })\n\n/**********\n *\n * @class ClrIfOpen\n *\n * @description\n * A structural directive that controls whether or not the associated TemplateRef is instantiated or not.\n * It makes use of a Component instance level service: ClrPopoverToggleService to maintain state between itself and the component\n * using it in the component template.\n *\n */\nexport class ClrIfOpen implements OnDestroy {\n  private subscription: Subscription;\n\n  /*********\n   *\n   * @description\n   * A setter that updates ClrPopoverToggleService.open with value.\n   *\n   * @param value\n   */\n  @Input('clrIfOpen')\n  public set open(value: boolean) {\n    this.toggleService.open = value;\n  }\n\n  /**********\n   * @property openChange\n   *\n   * @description\n   * An event emitter that emits when the open property is set to allow for 2way binding when the directive is\n   * used with de-structured / de-sugared syntax.\n   */\n  @Output('clrIfOpenChange') openChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /********\n   *\n   * @description\n   * A getter that returns the current ClrPopoverToggleService.open value.\n   *\n   */\n  public get open() {\n    return this.toggleService.open;\n  }\n\n  constructor(\n    private toggleService: ClrPopoverToggleService,\n    private template: TemplateRef<any>,\n    private container: ViewContainerRef\n  ) {\n    this.subscription = this.toggleService.openChange.subscribe(change => {\n      this.updateView(change);\n      this.openChange.emit(change);\n    });\n  }\n\n  /*********\n   *\n   * @description\n   * Function that takes a boolean value and either created an embedded view for the associated ViewContainerRef or,\n   * Clears all views from the ViewContainerRef\n   * @param value\n   */\n  public updateView(value: boolean) {\n    if (value) {\n      this.container.createEmbeddedView(this.template);\n    } else {\n      this.container.clear();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { LoadingListener } from '../loading/loading-listener';\nimport { ClrLoadingState } from '../loading/loading';\n\n@Injectable()\nexport class IfExpandService implements LoadingListener {\n  public expandable: number = 0;\n\n  protected _loading: boolean = false;\n  get loading(): boolean {\n    return this._loading;\n  }\n\n  set loading(value: boolean) {\n    value = !!value;\n    if (value !== this._loading) {\n      this._loading = value;\n    }\n  }\n\n  protected _expanded: boolean = false;\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  set expanded(value: boolean) {\n    value = !!value;\n    if (value !== this._expanded) {\n      this._expanded = value;\n      this._expandChange.next(value);\n    }\n  }\n\n  public toggle() {\n    this.expanded = !this._expanded;\n  }\n\n  protected _expandChange: Subject<boolean> = new Subject<boolean>();\n  public get expandChange(): Observable<boolean> {\n    return this._expandChange.asObservable();\n  }\n\n  loadingStateChange(state: ClrLoadingState): void {\n    switch (state) {\n      case ClrLoadingState.LOADING:\n        this.loading = true;\n        break;\n      default:\n        this.loading = false;\n        break;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from './if-expanded.service';\n\n@Directive({ selector: '[clrIfExpanded]' })\nexport class ClrIfExpanded implements OnInit, OnDestroy {\n  private _expanded: boolean = false;\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  @Input('clrIfExpanded')\n  set expanded(value: boolean) {\n    if (typeof value === 'boolean') {\n      this.expand.expanded = value;\n      this._expanded = value;\n    }\n  }\n\n  @Output('clrIfExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  constructor(\n    @Optional() private template: TemplateRef<any>,\n    private container: ViewContainerRef,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private expand: IfExpandService\n  ) {\n    expand.expandable++;\n    this._subscriptions.push(\n      expand.expandChange.subscribe(() => {\n        this.updateView();\n        this.expandedChange.emit(this.expand.expanded);\n      })\n    );\n  }\n\n  /**\n   * Subscriptions to all the services and queries changes\n   */\n  private _subscriptions: Subscription[] = [];\n\n  private updateView() {\n    if (this.expand.expanded && this.container.length !== 0) {\n      return;\n    }\n    if (this.template) {\n      if (this.expand.expanded) {\n        // Should we pass a context? I don't see anything useful to pass right now,\n        // but we can come back to it in the future as a solution for additional features.\n        this.container.createEmbeddedView(this.template);\n      } else {\n        // TODO: Move when we move the animation logic to Datagrid Row Expand\n        // We clear before the animation is over. Not ideal, but doing better would involve a much heavier\n        // process for very little gain. Once Angular animations are dynamic enough, we should be able to\n        // get the optimal behavior.\n        this.container.clear();\n      }\n    } else {\n      try {\n        // If we don't have a template ref, we fallback to a crude display: none for now.\n        if (this.expand.expanded) {\n          this.renderer.setStyle(this.el.nativeElement, 'display', null);\n        } else {\n          this.renderer.setStyle(this.el.nativeElement, 'display', 'none');\n        }\n      } catch (e) {\n        // We catch the case where clrIfExpanded was put on a non-DOM element, and we just do nothing\n      }\n    }\n  }\n\n  ngOnInit() {\n    this.updateView();\n  }\n\n  ngOnDestroy() {\n    this.expand.expandable--;\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIfActive } from './if-active.directive';\nimport { ClrIfOpen } from './if-open.directive';\nimport { ClrIfExpanded } from './if-expanded.directive';\n\nexport const CONDITIONAL_DIRECTIVES: Type<any>[] = [ClrIfActive, ClrIfOpen, ClrIfExpanded];\n\n@NgModule({ imports: [CommonModule], declarations: [CONDITIONAL_DIRECTIVES], exports: [CONDITIONAL_DIRECTIVES] })\nexport class ClrConditionalModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { FocusTrapDirective } from './focus-trap.directive';\n\n@Injectable({ providedIn: 'root' })\nexport class FocusTrapTracker {\n  private _previousFocusTraps: FocusTrapDirective[] = [];\n  private _current: FocusTrapDirective;\n\n  get current(): FocusTrapDirective {\n    return this._current;\n  }\n\n  set current(value: FocusTrapDirective) {\n    this._previousFocusTraps.push(this._current);\n    this._current = value;\n  }\n\n  get nbFocusTrappers(): number {\n    return this._previousFocusTraps.length;\n  }\n\n  activatePreviousTrapper() {\n    this._current = this._previousFocusTraps.pop();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\n\nimport { FocusTrapTracker } from './focus-trap-tracker.service';\n\ninterface FocusTrapConfig {\n  strict: boolean;\n}\n\n@Directive({ selector: '[clrFocusTrap]' })\nexport class FocusTrapDirective implements AfterViewInit, OnDestroy {\n  private previousActiveElement: any;\n  private previousTrappedActiveElement: any;\n  private localFocusEscaped = false;\n  private document: Document;\n  private parentElement: Element;\n\n  private topReboundEl: any;\n  private bottomReboundEl: any;\n\n  constructor(\n    private el: ElementRef,\n    private injector: Injector,\n    private focusTrapsTracker: FocusTrapTracker,\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.document = this.injector.get(DOCUMENT);\n    this.focusTrapsTracker.current = this;\n\n    this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n  }\n\n  private _config: FocusTrapConfig = {\n    strict: true,\n  };\n  @Input('clrFocusTrap')\n  set config(config: FocusTrapConfig) {\n    this._config = Object.assign(this._config, config);\n  }\n\n  @HostListener('document:focusin', ['$event'])\n  onFocusIn(event: any) {\n    if (this.focusTrapsTracker.current !== this || !isPlatformBrowser(this.platformId) || this.localFocusEscaped) {\n      return;\n    }\n    const nativeElement: HTMLElement = this.el.nativeElement;\n    if (this._config.strict && event.target && !nativeElement.contains(event.target)) {\n      // When the focus trap is global, always steal focus back if it goes outside\n      nativeElement.focus();\n    } else if (event.target === this.bottomReboundEl && nativeElement.contains(this.previousTrappedActiveElement)) {\n      // When the focus trap is local, if the user navigates via keyboard to the end element from within the trap, move to top\n      nativeElement.focus();\n    } else if (event.target === this.topReboundEl) {\n      // When the focus trap is local, if the user navigates via keyboard back to start element from within the trap, move to bottom\n      // @TODO implement an acceptable solution to SHIFT+TAB navigation\n    } else if (event.target !== nativeElement && !nativeElement.contains(event.target)) {\n      // If a user has escaped the trap using the mouse\n      // relax, don't do it, when you want to go to it, living those dreams, scheme those schemes, hit me with those laser beams\n      this.localFocusEscaped = true;\n    }\n    // Track the last focused item, so we can check\n    this.previousTrappedActiveElement = event.target;\n  }\n\n  private createFocusableOffScreenEl(): any {\n    // Not using Renderer2's createElement method because that leads to DOM leakage.\n    // https://github.com/angular/angular/issues/26954\n    const offScreenSpan = this.document.createElement('span');\n    this.renderer.setAttribute(offScreenSpan, 'tabindex', '0');\n    this.renderer.addClass(offScreenSpan, 'offscreen-focus-rebounder');\n\n    return offScreenSpan;\n  }\n\n  private addReboundEls() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.topReboundEl = this.createFocusableOffScreenEl();\n      this.bottomReboundEl = this.createFocusableOffScreenEl();\n      const hostElement = this.el.nativeElement;\n      // Add reboundBeforeTrapEl right outside of host element\n      this.renderer.insertBefore(hostElement.parentElement, this.topReboundEl, hostElement);\n      // Add reboundAfterTrapEl right after host element\n      if (hostElement.nextSibling) {\n        this.renderer.insertBefore(hostElement.parentNode, this.bottomReboundEl, hostElement.nextSibling);\n      } else {\n        this.renderer.appendChild(hostElement.parentNode, this.bottomReboundEl);\n      }\n    }\n  }\n\n  private removeReboundEls() {\n    if (isPlatformBrowser(this.platformId) && this.topReboundEl && this.bottomReboundEl) {\n      this.parentElement.removeChild(this.topReboundEl);\n      this.parentElement.removeChild(this.bottomReboundEl);\n      // These are here to to make sure that\n      // we completely delete all traces of the removed DOM objects.\n      delete this.topReboundEl;\n      delete this.bottomReboundEl;\n    }\n  }\n\n  public setPreviousFocus(): void {\n    if (this.previousActiveElement && this.previousActiveElement.focus) {\n      this.previousActiveElement.focus();\n    }\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.previousActiveElement = <HTMLElement>this.document.activeElement;\n      this.parentElement = this.el.nativeElement.parentElement;\n    }\n\n    this.addReboundEls();\n  }\n\n  ngOnDestroy() {\n    this.removeReboundEls();\n    this.setPreviousFocus();\n    this.focusTrapsTracker.activatePreviousTrapper();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FocusTrapDirective } from './focus-trap.directive';\n\nexport const FOCUS_TRAP_DIRECTIVES: Type<any>[] = [FocusTrapDirective];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FOCUS_TRAP_DIRECTIVES],\n  exports: [FOCUS_TRAP_DIRECTIVES],\n})\nexport class ClrFocusTrapModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * This is the en-001 short locale date format. Setting as default.\n */\nexport const DEFAULT_LOCALE_FORMAT: string = 'dd/MM/y';\n\n// https://en.wikipedia.org/wiki/Date_format_by_country\nexport const LITTLE_ENDIAN_REGEX: RegExp = /d+.+m+.+y+/i;\nexport const MIDDLE_ENDIAN_REGEX: RegExp = /m+.+d+.+y+/i;\n// No need for BIG_ENDIAN_REGEX because anything that doesn't satisfy the above 2\n// is automatically BIG_ENDIAN\n\nexport const DELIMITER_REGEX: RegExp = /d+|m+|y+/i;\n\nexport const USER_INPUT_REGEX: RegExp = /\\d+/g;\n\nexport const MOBILE_USERAGENT_REGEX: RegExp = /Mobi/i;\n\nexport const RTL_REGEX: RegExp = /\\u200f/g;\n\nexport const YEAR: string = 'YYYY';\nexport const MONTH: string = 'MM';\nexport const DATE: string = 'DD';\n\nexport type FormatType = 'LITTLE_ENDIAN' | 'MIDDLE_ENDIAN' | 'BIG_ENDIAN';\n\nexport type InputDateDisplayFormat = {\n  readonly name: FormatType;\n  readonly format: [string, string, string];\n};\n\nexport const LITTLE_ENDIAN: InputDateDisplayFormat = {\n  name: 'LITTLE_ENDIAN',\n  format: [DATE, MONTH, YEAR],\n};\n\nexport const MIDDLE_ENDIAN: InputDateDisplayFormat = {\n  name: 'MIDDLE_ENDIAN',\n  format: [MONTH, DATE, YEAR],\n};\n\nexport const BIG_ENDIAN: InputDateDisplayFormat = {\n  name: 'BIG_ENDIAN',\n  format: [YEAR, MONTH, DATE],\n};\n\nexport const NO_OF_DAYS_IN_A_WEEK: number = 7;\nexport const NO_OF_ROWS_IN_CALENDAR_VIEW: number = 6;\nexport const TOTAL_DAYS_IN_DAYS_VIEW: number = NO_OF_DAYS_IN_A_WEEK * NO_OF_ROWS_IN_CALENDAR_VIEW;\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { WeekDay } from '@angular/common';\n\n/**\n * Returns the number of days in a month.\n */\nexport function getNumberOfDaysInTheMonth(year: number, month: number): number {\n  // If we go to the next month, but use a day of 0, it returns the last day from the previous month\n  return new Date(year, month + 1, 0).getDate();\n}\n\n/**\n * Returns the day for the corresponding date where 0 represents Sunday.\n */\nexport function getDay(year: number, month: number, date: number): WeekDay {\n  return new Date(year, month, date).getDay();\n}\n\n/**\n * Takes in a year and if it is a 2 digit year, returns the corresponding 4 digit year.\n * Window of 80 years before and 20 years after the present year.\n * Credit: https://github.com/globalizejs/globalize/blob/e1b31cd6a4f1cff75b185b68b7a32220aac5196f/src/date/parse.js\n */\nexport function parseToFourDigitYear(year: number): number {\n  if (year > 9999 || (year > 100 && year < 999) || year < 10) {\n    return -1;\n  }\n  if (year > 999) {\n    return year;\n  }\n  const currYear: number = new Date().getFullYear();\n  const century: number = Math.floor(currYear / 100) * 100;\n  let result: number = year + century;\n  if (result > currYear + 20) {\n    result = result - 100;\n  }\n  return result;\n}\n\nexport function datesAreEqual(date1: Date, date2: Date) {\n  if (date1 instanceof Date && date2 instanceof Date) {\n    return (\n      date1.getFullYear() === date2.getFullYear() &&\n      date1.getMonth() === date2.getMonth() &&\n      date1.getDate() === date2.getDate()\n    );\n  } else {\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DayModel } from './day.model';\n\nexport class DayViewModel {\n  constructor(\n    public dayModel: DayModel,\n    public isTodaysDate: boolean = false,\n    public isExcluded: boolean = false,\n    public isDisabled: boolean = false,\n    public isSelected: boolean = false,\n    public isFocusable: boolean = false\n  ) {}\n\n  /**\n   * Gets the tab index based on the isFocusable flag.\n   */\n  get tabIndex(): number {\n    return this.isFocusable ? 0 : -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class DayModel {\n  constructor(public readonly year: number, public readonly month: number, public readonly date: number) {}\n\n  /**\n   * Checks if the passed CalendarDate is equal to itself.\n   */\n  isEqual(day: DayModel) {\n    if (day) {\n      return this.year === day.year && this.month === day.month && this.date === day.date;\n    }\n    return false;\n  }\n\n  toDate(): Date {\n    return new Date(this.year, this.month, this.date);\n  }\n\n  /**\n   * Returns a new DayModel which is incremented based on the value passed.\n   */\n  incrementBy(value: number): DayModel {\n    // Creating new Javascript Date object to increment because\n    // it will automatically take care of switching to next or previous\n    // months & years without we having to worry about it.\n    const date: Date = new Date(this.year, this.month, this.date + value);\n    return new DayModel(date.getFullYear(), date.getMonth(), date.getDate());\n  }\n\n  /**\n   * Clones the current day model.\n   */\n  clone(): DayModel {\n    return new DayModel(this.year, this.month, this.date);\n  }\n\n  toComparisonString(): string {\n    return `${this.year}${this.pad(this.month)}${this.pad(this.date)}`;\n  }\n\n  private pad(num: number): string {\n    return num < 10 ? `0${num}` : `${num}`;\n  }\n\n  public toDateString(): string {\n    return this.toDate().toLocaleDateString();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NO_OF_DAYS_IN_A_WEEK, NO_OF_ROWS_IN_CALENDAR_VIEW, TOTAL_DAYS_IN_DAYS_VIEW } from '../utils/constants';\nimport { getDay } from '../utils/date-utils';\n\nimport { CalendarModel } from './calendar.model';\nimport { DayViewModel } from './day-view.model';\nimport { DayModel } from './day.model';\nimport { DateRange } from '../interfaces/date-range.interface';\n\nexport class CalendarViewModel {\n  constructor(\n    public calendar: CalendarModel,\n    private selectedDay: DayModel,\n    private focusableDay: DayModel,\n    private today: DayModel,\n    public firstDayOfWeek: number,\n    private excludedDates: DateRange\n  ) {\n    this.initializeCalendarView();\n  }\n\n  private currMonthDayViews: DayViewModel[] = [];\n\n  private _calendarView: DayViewModel[][];\n\n  /**\n   * DayViewModel matrix. Size 6x7\n   */\n  get calendarView(): DayViewModel[][] {\n    return this._calendarView;\n  }\n\n  /**\n   * Generates a 6x7 matrix of DayViewModel based on the Calendar.\n   * The 6x7 matrix is structured according to the first day of the week.\n   * 6 rows to accommodate months which might have dates spanning over 6 weeks.\n   * 7 columns because there are 7 days in a week :P :D\n   */\n  private initializeCalendarView(): void {\n    // Generate prev and next month calendar models.\n    const prevMonthCalendar: CalendarModel = this.calendar.previousMonth();\n    const nextMonthCalendar: CalendarModel = this.calendar.nextMonth();\n\n    // Get no of days from prev and next months.\n    const daysFromPrevMonthInCalView: number = this.numDaysFromPrevMonthInCalView(\n      this.calendar.year,\n      this.calendar.month\n    );\n    const daysFromNextMonthInCalView: number =\n      TOTAL_DAYS_IN_DAYS_VIEW - (this.calendar.days.length + daysFromPrevMonthInCalView);\n\n    // Generate prev, curr and next day view models\n    let prevMonthDayViews: DayViewModel[] = [];\n    let nextMonthDayViews: DayViewModel[] = [];\n\n    if (daysFromPrevMonthInCalView > 0) {\n      prevMonthDayViews = this.generateDayViewModels(\n        prevMonthCalendar.days.slice(-1 * daysFromPrevMonthInCalView),\n        true,\n        false\n      );\n    }\n\n    this.currMonthDayViews = this.generateDayViewModels(this.calendar.days, false, true);\n\n    if (daysFromNextMonthInCalView > 0) {\n      nextMonthDayViews = this.generateDayViewModels(\n        nextMonthCalendar.days.slice(0, daysFromNextMonthInCalView),\n        true,\n        false\n      );\n    }\n\n    // Generate calendar view and initialize flags\n    this._calendarView = this.generateCalendarView(prevMonthDayViews, this.currMonthDayViews, nextMonthDayViews);\n    this.initializeSelectedDay();\n    this.initializeFocusableDay();\n  }\n\n  private isDateExcluded(date: DayModel) {\n    const { minDate, maxDate }: DateRange = this.excludedDates;\n    const from = minDate.toComparisonString();\n    const to = maxDate.toComparisonString();\n    const today = date.toComparisonString();\n\n    return !(today >= from && today <= to);\n  }\n\n  /**\n   * Generates a DayViewModel array based on the DayModel passed\n   */\n  private generateDayViewModels(days: DayModel[], isExcluded: boolean, isCurrentCalendar: boolean): DayViewModel[] {\n    const dayViews: DayViewModel[] = days.map(day => {\n      return new DayViewModel(day, false, isExcluded, this.isDateExcluded(day), false, false);\n    });\n    if (isCurrentCalendar && this.calendar.isDayInCalendar(this.today)) {\n      dayViews[this.today.date - 1].isTodaysDate = true;\n    }\n    return dayViews;\n  }\n\n  /**\n   * Gets the first day of the current month to figure out how many dates of previous month\n   * are needed to complete the Calendar View based on the first day of the week.\n   * eg: Assuming locale en-US, the first day of the week is Sunday,\n   * if first day of the current month lands on Wednesday, then\n   * (this.getDay function would return 3 since\n   * first day of the week is 0), we need the 3 days from the previous month.\n   */\n  private numDaysFromPrevMonthInCalView(currentYear: number, currentMonth: number): number {\n    const firstDayOfCurrMonth: number = getDay(currentYear, currentMonth, 1);\n\n    if (firstDayOfCurrMonth >= this.firstDayOfWeek) {\n      return firstDayOfCurrMonth - this.firstDayOfWeek;\n    } else {\n      return NO_OF_DAYS_IN_A_WEEK + firstDayOfCurrMonth - this.firstDayOfWeek;\n    }\n  }\n\n  /**\n   * Checks if the Day passed is in the CalendarView.\n   */\n  private isDayInCalendarView(day: DayModel): boolean {\n    if (!this.calendar.isDayInCalendar(day)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Using the DayViewModels from the previous, current and next month, this function\n   * generates the CalendarView.\n   */\n  private generateCalendarView(prev: DayViewModel[], curr: DayViewModel[], next: DayViewModel[]): DayViewModel[][] {\n    const combinationArr: DayViewModel[] = [...prev, ...curr, ...next];\n\n    const calendarView: DayViewModel[][] = [];\n    for (let i = 0; i < NO_OF_ROWS_IN_CALENDAR_VIEW; i++) {\n      calendarView[i] = combinationArr.slice(i * NO_OF_DAYS_IN_A_WEEK, (i + 1) * NO_OF_DAYS_IN_A_WEEK);\n    }\n    return calendarView;\n  }\n\n  /**\n   * Initialize the selected day if the day is in the calendar.\n   */\n  private initializeSelectedDay(): void {\n    if (this.selectedDay && this.isDayInCalendarView(this.selectedDay)) {\n      this.currMonthDayViews[this.selectedDay.date - 1].isSelected = true;\n    }\n  }\n\n  /**\n   * Initializes the focusable day if the day is in the calendar. If focusable day is not set, then\n   * we check for the selected day. If selected day is not set then check if today is in the current\n   * calendar. If not then just set the 15th of the current calendar month.\n   */\n  private initializeFocusableDay(): void {\n    if (this.focusableDay && this.isDayInCalendarView(this.focusableDay)) {\n      this.setFocusableFlag(this.focusableDay, true);\n    } else if (this.selectedDay && this.isDayInCalendarView(this.selectedDay)) {\n      this.setFocusableFlag(this.selectedDay, true);\n      this.focusableDay = this.selectedDay.clone();\n    } else if (this.isDayInCalendarView(this.today)) {\n      this.setFocusableFlag(this.today, true);\n      this.focusableDay = this.today.clone();\n    } else {\n      this.focusableDay = new DayModel(this.calendar.year, this.calendar.month, 15);\n      this.setFocusableFlag(this.focusableDay, true);\n    }\n  }\n\n  private setFocusableFlag(day: DayModel, flag: boolean): void {\n    if (day) {\n      this.currMonthDayViews[day.date - 1].isFocusable = flag;\n    }\n  }\n\n  /**\n   * Updates the focusable day in the calendar.\n   */\n  updateFocusableDay(day: DayModel): void {\n    this.setFocusableFlag(this.focusableDay, false);\n    this.setFocusableFlag(day, true);\n    this.focusableDay = day;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { getNumberOfDaysInTheMonth } from '../utils/date-utils';\n\nimport { DayModel } from './day.model';\n\nexport class CalendarModel {\n  constructor(public readonly year: number, public readonly month: number) {\n    this.initializeDaysInCalendar();\n  }\n\n  days: DayModel[];\n\n  /**\n   * Populates the days array with the DayModels in the current Calendar.\n   */\n  private initializeDaysInCalendar(): void {\n    const noOfDaysInCalendar: number = getNumberOfDaysInTheMonth(this.year, this.month);\n    this.days = Array(noOfDaysInCalendar)\n      .fill(null)\n      .map((date, index) => {\n        return new DayModel(this.year, this.month, index + 1);\n      });\n  }\n\n  /**\n   * Checks if the calendar passed is equal to the current calendar.\n   */\n  isEqual(calendar: CalendarModel) {\n    if (calendar) {\n      return this.year === calendar.year && this.month === calendar.month;\n    }\n    return false;\n  }\n\n  /**\n   * Checks if a DayModel is in the Calendar\n   */\n  isDayInCalendar(day: DayModel): boolean {\n    if (day) {\n      return this.year === day.year && this.month === day.month;\n    }\n    return false;\n  }\n\n  /**\n   * Returns CalendarModel of the previous month.\n   */\n  previousMonth(): CalendarModel {\n    if (this.month === 0) {\n      return new CalendarModel(this.year - 1, 11);\n    } else {\n      return new CalendarModel(this.year, this.month - 1);\n    }\n  }\n\n  /**\n   * Returns CalendarModel of the next month.\n   */\n  nextMonth(): CalendarModel {\n    if (this.month === 11) {\n      return new CalendarModel(this.year + 1, 0);\n    } else {\n      return new CalendarModel(this.year, this.month + 1);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { CalendarModel } from '../model/calendar.model';\nimport { DayModel } from '../model/day.model';\n\n/**\n * This service is responsible for:\n * 1. Initializing the displayed calendar.\n * 2. Moving the calendar to the next, previous or current months\n * 3. Managing the focused and selected day models.\n */\n@Injectable()\nexport class DateNavigationService {\n  private _displayedCalendar: CalendarModel;\n\n  get displayedCalendar(): CalendarModel {\n    return this._displayedCalendar;\n  }\n\n  // not a setter because i want this to remain private\n  private setDisplayedCalendar(value: CalendarModel) {\n    if (!this._displayedCalendar.isEqual(value)) {\n      this._displayedCalendar = value;\n      this._displayedCalendarChange.next();\n    }\n  }\n\n  /**\n   * Variable to store today's date.\n   */\n  private _todaysFullDate: Date = new Date();\n  private _today: DayModel;\n\n  private initializeTodaysDate(): void {\n    this._todaysFullDate = new Date();\n    this._today = new DayModel(\n      this._todaysFullDate.getFullYear(),\n      this._todaysFullDate.getMonth(),\n      this._todaysFullDate.getDate()\n    );\n  }\n\n  get today(): DayModel {\n    return this._today;\n  }\n\n  public selectedDay: DayModel;\n\n  private _selectedDayChange: Subject<DayModel> = new Subject<DayModel>();\n\n  get selectedDayChange(): Observable<DayModel> {\n    return this._selectedDayChange.asObservable();\n  }\n\n  /**\n   * Notifies that the selected day has changed so that the date can be emitted to the user.\n   * Note: Only to be called from day.ts\n   */\n  notifySelectedDayChanged(dayModel: DayModel) {\n    this.selectedDay = dayModel;\n    this._selectedDayChange.next(dayModel);\n  }\n\n  public focusedDay: DayModel;\n\n  /**\n   * Initializes the calendar based on the selected day.\n   */\n  initializeCalendar(): void {\n    this.focusedDay = null; // Can be removed later on the store focus\n    this.initializeTodaysDate();\n    if (this.selectedDay) {\n      this._displayedCalendar = new CalendarModel(this.selectedDay.year, this.selectedDay.month);\n    } else {\n      this._displayedCalendar = new CalendarModel(this.today.year, this.today.month);\n    }\n  }\n\n  changeMonth(month: number): void {\n    this.setDisplayedCalendar(new CalendarModel(this._displayedCalendar.year, month));\n  }\n\n  changeYear(year: number): void {\n    this.setDisplayedCalendar(new CalendarModel(year, this._displayedCalendar.month));\n  }\n\n  /**\n   * Moves the displayed calendar to the next month.\n   */\n  moveToNextMonth(): void {\n    this.setDisplayedCalendar(this._displayedCalendar.nextMonth());\n  }\n\n  /**\n   * Moves the displayed calendar to the previous month.\n   */\n  moveToPreviousMonth(): void {\n    this.setDisplayedCalendar(this._displayedCalendar.previousMonth());\n  }\n\n  /**\n   * Moves the displayed calendar to the current month and year.\n   */\n  moveToCurrentMonth(): void {\n    if (!this.displayedCalendar.isDayInCalendar(this.today)) {\n      this.setDisplayedCalendar(new CalendarModel(this.today.year, this.today.month));\n    }\n    this._focusOnCalendarChange.next();\n  }\n\n  incrementFocusDay(value: number): void {\n    this.focusedDay = this.focusedDay.incrementBy(value);\n    if (this._displayedCalendar.isDayInCalendar(this.focusedDay)) {\n      this._focusedDayChange.next(this.focusedDay);\n    } else {\n      this.setDisplayedCalendar(new CalendarModel(this.focusedDay.year, this.focusedDay.month));\n    }\n    this._focusOnCalendarChange.next();\n  }\n\n  private _displayedCalendarChange: Subject<void> = new Subject<void>();\n\n  /**\n   * This observable lets the subscriber know that the displayed calendar has changed.\n   */\n  get displayedCalendarChange(): Observable<void> {\n    return this._displayedCalendarChange.asObservable();\n  }\n\n  private _focusOnCalendarChange: Subject<void> = new Subject<void>();\n\n  /**\n   * This observable lets the subscriber know that the focus should be applied on the calendar.\n   */\n  get focusOnCalendarChange(): Observable<void> {\n    return this._focusOnCalendarChange.asObservable();\n  }\n\n  private _focusedDayChange: Subject<DayModel> = new Subject<DayModel>();\n\n  /**\n   * This observable lets the subscriber know that the focused day in the displayed calendar has changed.\n   */\n  get focusedDayChange(): Observable<DayModel> {\n    return this._focusedDayChange.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, NgZone, PLATFORM_ID } from '@angular/core';\nimport { first, filter } from 'rxjs/operators';\n\n/**\n * This service focuses the day that is focusable in the calendar.\n */\n@Injectable()\nexport class DatepickerFocusService {\n  constructor(private _ngZone: NgZone, @Inject(PLATFORM_ID) private platformId: Object) {}\n\n  focusCell(elRef: ElementRef): void {\n    this._ngZone.runOutsideAngular(() => {\n      this.ngZoneIsStableInBrowser().subscribe(() => {\n        const focusEl = elRef.nativeElement.querySelector('[tabindex=\"0\"]');\n        if (focusEl) {\n          focusEl.focus();\n        }\n      });\n    });\n  }\n\n  focusInput(element: HTMLInputElement): void {\n    this._ngZone.runOutsideAngular(() => this.ngZoneIsStableInBrowser().subscribe(() => element.focus()));\n  }\n\n  elementIsFocused(element: HTMLInputElement) {\n    return isPlatformBrowser(this.platformId) && document.activeElement === element;\n  }\n\n  private ngZoneIsStableInBrowser() {\n    // Credit: Material: https://github.com/angular/material2/blob/master/src/lib/datepicker/calendar.ts\n    return this._ngZone.onStable.asObservable().pipe(first(), filter(() => isPlatformBrowser(this.platformId)));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  FormatWidth,\n  FormStyle,\n  getLocaleDateFormat,\n  getLocaleDayNames,\n  getLocaleFirstDayOfWeek,\n  getLocaleMonthNames,\n  TranslationWidth,\n} from '@angular/common';\nimport { Inject, Injectable, LOCALE_ID } from '@angular/core';\nimport { ClrDayOfWeek } from '../interfaces/day-of-week.interface';\n\n/**\n * This service extracts the Angular CLDR data needed by the datepicker.\n */\n@Injectable()\nexport class LocaleHelperService {\n  constructor(@Inject(LOCALE_ID) public locale: string) {\n    this.initializeLocaleData();\n  }\n\n  private _firstDayOfWeek: number = 0;\n  private _localeDays: ReadonlyArray<ClrDayOfWeek>;\n  private _localeMonthsAbbreviated: ReadonlyArray<string>;\n  private _localeMonthsWide: ReadonlyArray<string>;\n  private _localeDateFormat: string;\n\n  get firstDayOfWeek(): number {\n    return this._firstDayOfWeek;\n  }\n\n  get localeDays(): ReadonlyArray<ClrDayOfWeek> {\n    return this._localeDays;\n  }\n\n  // leave for backward compatibility\n  get localeDaysNarrow(): ReadonlyArray<string> {\n    return this._localeDays.map(day => day.narrow);\n  }\n\n  get localeMonthsAbbreviated(): ReadonlyArray<string> {\n    return this._localeMonthsAbbreviated;\n  }\n\n  get localeMonthsWide(): ReadonlyArray<string> {\n    return this._localeMonthsWide;\n  }\n\n  get localeDateFormat(): string {\n    return this._localeDateFormat;\n  }\n\n  /**\n   * Initializes the locale data.\n   */\n  private initializeLocaleData(): void {\n    // Order in which these functions is called is very important.\n    this.initializeFirstDayOfWeek();\n    this.initializeLocaleDateFormat();\n    this.initializeLocaleMonthsAbbreviated();\n    this.initializeLocaleMonthsWide();\n    this.initializeLocaleDays();\n  }\n\n  /**\n   * Initialize day names based on the locale.\n   * eg: [{day: Sunday, narrow: S}, {day: Monday, narrow: M}...] for en-US.\n   */\n  private initializeLocaleDays(): void {\n    // Get locale day names starting with Sunday\n    const tempArr = [];\n    const tempWideArr: string[] = getLocaleDayNames(this.locale, FormStyle.Standalone, TranslationWidth.Wide).slice();\n    const tempNarrowArr: string[] = getLocaleDayNames(\n      this.locale,\n      FormStyle.Standalone,\n      TranslationWidth.Narrow\n    ).slice();\n    // Get first day of the week based on the locale\n    const firstDayOfWeek: number = this.firstDayOfWeek;\n    for (let i = 0; i < 7; i++) {\n      tempArr.push({ day: tempWideArr[i], narrow: tempNarrowArr[i] });\n    }\n    // Rearrange the tempArr to start with the first day of the week based on the locale.\n    if (firstDayOfWeek > 0) {\n      const prevDays: string[] = tempArr.splice(0, firstDayOfWeek);\n      tempArr.push(...prevDays);\n    }\n    this._localeDays = tempArr;\n  }\n\n  /**\n   * Initializes the array of month names in the TranslationWidth.Abbreviated format.\n   * e.g. `[Jan, Feb, ...]` for en-US\n   */\n  private initializeLocaleMonthsAbbreviated(): void {\n    this._localeMonthsAbbreviated = getLocaleMonthNames(\n      this.locale,\n      FormStyle.Standalone,\n      TranslationWidth.Abbreviated\n    ).slice();\n  }\n\n  /**\n   * Initializes the array of month names in the TranslationWidth.Wide format.\n   * e.g. `[January, February, ...]` for en-US\n   */\n  private initializeLocaleMonthsWide(): void {\n    this._localeMonthsWide = getLocaleMonthNames(this.locale, FormStyle.Standalone, TranslationWidth.Wide).slice();\n  }\n\n  /**\n   * Initializes the first day of the week based on the locale.\n   */\n  private initializeFirstDayOfWeek(): void {\n    this._firstDayOfWeek = getLocaleFirstDayOfWeek(this.locale);\n  }\n\n  private initializeLocaleDateFormat(): void {\n    this._localeDateFormat = getLocaleDateFormat(this.locale, FormatWidth.Short);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport {\n  BIG_ENDIAN,\n  DEFAULT_LOCALE_FORMAT,\n  DELIMITER_REGEX,\n  InputDateDisplayFormat,\n  LITTLE_ENDIAN,\n  LITTLE_ENDIAN_REGEX,\n  MIDDLE_ENDIAN,\n  MIDDLE_ENDIAN_REGEX,\n  RTL_REGEX,\n  USER_INPUT_REGEX,\n} from '../utils/constants';\nimport { getNumberOfDaysInTheMonth, parseToFourDigitYear } from '../utils/date-utils';\n\nimport { LocaleHelperService } from './locale-helper.service';\nimport { DateRange } from '../interfaces/date-range.interface';\nimport { DayModel } from '../model/day.model';\n\n@Injectable()\nexport class DateIOService {\n  public disabledDates: DateRange = {\n    // This is the default range. It approximates the beginning of time to the end of time.\n    // Unless a minDate or maxDate is set with the native HTML5 api the range is all dates\n    // TODO: turn this into an Array of min/max ranges that allow configuration of multiple ranges.\n    minDate: new DayModel(0, 0, 1),\n    maxDate: new DayModel(9999, 11, 31),\n  };\n  public cldrLocaleDateFormat: string = DEFAULT_LOCALE_FORMAT;\n  private localeDisplayFormat: InputDateDisplayFormat = LITTLE_ENDIAN;\n  private delimiters: [string, string] = ['/', '/'];\n\n  constructor(private _localeHelperService: LocaleHelperService) {\n    this.cldrLocaleDateFormat = this._localeHelperService.localeDateFormat;\n    this.initializeLocaleDisplayFormat();\n  }\n\n  public setMinDate(date: string): void {\n    // NOTE: I'm expecting consumers to pass one of four things here:\n    //       A proper date string(2019-11-11), null, undefined or empty string ('')\n    if (!date) {\n      // attribute binding was removed, reset back to the beginning of time\n      this.disabledDates.minDate = new DayModel(0, 0, 1);\n    } else {\n      const [year, month, day] = date.split('-').map(n => parseInt(n, 10));\n      this.disabledDates.minDate = new DayModel(year, month - 1, day);\n    }\n  }\n\n  public setMaxDate(date: string): void {\n    // NOTE: I'm expecting consumers to pass one of four things here:\n    //       A proper date string(2019-11-11), null, undefined or empty string ('')\n    if (!date) {\n      // attribute binding was removed, reset forward to the end of time\n      this.disabledDates.maxDate = new DayModel(9999, 11, 31);\n    } else {\n      const [year, month, day] = date.split('-').map(n => parseInt(n, 10));\n      this.disabledDates.maxDate = new DayModel(year, month - 1, day);\n    }\n  }\n\n  private initializeLocaleDisplayFormat(): void {\n    const format: string = this.cldrLocaleDateFormat.toLocaleLowerCase();\n    if (LITTLE_ENDIAN_REGEX.test(format)) {\n      this.localeDisplayFormat = LITTLE_ENDIAN;\n    } else if (MIDDLE_ENDIAN_REGEX.test(format)) {\n      this.localeDisplayFormat = MIDDLE_ENDIAN;\n    } else {\n      // everything else is set to BIG-ENDIAN FORMAT\n      this.localeDisplayFormat = BIG_ENDIAN;\n    }\n    this.extractDelimiters();\n  }\n\n  private extractDelimiters(): void {\n    if (this.cldrLocaleDateFormat) {\n      // Sanitize Date Format. Remove RTL characters.\n      // FIXME: When we support RTL, remove this and handle it correctly.\n      const localeFormat: string = this.cldrLocaleDateFormat.replace(RTL_REGEX, '');\n      const delimiters: string[] = localeFormat.split(DELIMITER_REGEX);\n\n      // NOTE: The split from the CLDR date format should always result\n      // in an arary with 4 elements. The 1st and the 2nd values are the delimiters\n      // we will use in order.\n      // Eg: \"dd/MM/y\".split(/d+|m+|y+/i) results in [\"\", \"/\", \"/\", \"\"]\n      if (delimiters && delimiters.length === 4) {\n        this.delimiters = [delimiters[1], delimiters[2]];\n      } else {\n        console.error('Unexpected date format received. Delimiters extracted: ', delimiters);\n      }\n    }\n  }\n\n  toLocaleDisplayFormatString(date: Date): string {\n    if (date) {\n      if (isNaN(date.getTime())) {\n        return '';\n      }\n      const dateNo: number = date.getDate();\n      const monthNo: number = date.getMonth() + 1;\n      const dateStr: string = dateNo > 9 ? dateNo.toString() : '0' + dateNo;\n      const monthStr: string = monthNo > 9 ? monthNo.toString() : '0' + monthNo;\n      if (this.localeDisplayFormat === LITTLE_ENDIAN) {\n        return dateStr + this.delimiters[0] + monthStr + this.delimiters[1] + date.getFullYear();\n      } else if (this.localeDisplayFormat === MIDDLE_ENDIAN) {\n        return monthStr + this.delimiters[0] + dateStr + this.delimiters[1] + date.getFullYear();\n      } else {\n        return date.getFullYear() + this.delimiters[0] + monthStr + this.delimiters[1] + dateStr;\n      }\n    }\n    return '';\n  }\n\n  get placeholderText(): string {\n    const format: [string, string, string] = this.localeDisplayFormat.format;\n    return format[0] + this.delimiters[0] + format[1] + this.delimiters[1] + format[2];\n  }\n\n  /**\n   * Checks if the month entered by the user is valid or not.\n   * Note: Month is 0 based.\n   */\n  private isValidMonth(month: number): boolean {\n    return month > -1 && month < 12;\n  }\n\n  /**\n   * Checks if the date is valid depending on the year and month provided.\n   */\n  private isValidDate(year: number, month: number, date: number): boolean {\n    return date > 0 && date <= getNumberOfDaysInTheMonth(year, month);\n  }\n\n  /**\n   * Validates the parameters provided and returns the date.\n   * If the parameters are not\n   * valid then return null.\n   * NOTE: (Month here is 1 based since the user has provided that as an input)\n   */\n  private validateAndGetDate(year: string, month: string, date: string): Date {\n    // I don't know whats wrong with the TS compiler. It throws an error if I write\n    // the below if statement. The error is:\n    // Operator '!==' cannot be applied to types '2' and '4'\n    // More info here: https://github.com/Microsoft/TypeScript/issues/12794#issuecomment-270342936\n    /*\n        if (year.length !== 2 || year.length !== 4) {\n            return null;\n        }\n        */\n\n    // Instead I have to write the logic like this x-(\n    const y: number = +year;\n    const m: number = +month - 1; // month is 0 based\n    const d: number = +date;\n    if (!this.isValidMonth(m) || !this.isValidDate(y, m, d)) {\n      return null;\n    }\n    const result: number = parseToFourDigitYear(y);\n    return result !== -1 ? new Date(result, m, d) : null;\n  }\n\n  getDateValueFromDateString(date: string): Date {\n    if (!date) {\n      return null;\n    }\n    const dateParts: string[] = date.match(USER_INPUT_REGEX);\n    if (!dateParts || dateParts.length !== 3) {\n      return null;\n    }\n    const [firstPart, secondPart, thirdPart] = dateParts;\n    if (this.localeDisplayFormat === LITTLE_ENDIAN) {\n      // secondPart is month && firstPart is date\n      return this.validateAndGetDate(thirdPart, secondPart, firstPart);\n    } else if (this.localeDisplayFormat === MIDDLE_ENDIAN) {\n      // firstPart is month && secondPart is date\n      return this.validateAndGetDate(thirdPart, firstPart, secondPart);\n    } else {\n      // secondPart is month && thirdPart is date\n      return this.validateAndGetDate(firstPart, secondPart, thirdPart);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, HostListener, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { CalendarViewModel } from './model/calendar-view.model';\nimport { CalendarModel } from './model/calendar.model';\nimport { DayModel } from './model/day.model';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { NO_OF_DAYS_IN_A_WEEK } from './utils/constants';\nimport { ClrDayOfWeek } from './interfaces/day-of-week.interface';\nimport { DateIOService } from './providers/date-io.service';\n\n@Component({ selector: 'clr-calendar', templateUrl: './calendar.html' })\nexport class ClrCalendar implements OnDestroy {\n  private _subs: Subscription[] = [];\n  constructor(\n    private _localeHelperService: LocaleHelperService,\n    private _dateNavigationService: DateNavigationService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _dateIOService: DateIOService,\n    private _elRef: ElementRef\n  ) {\n    this.generateCalendarView();\n    this.initializeSubscriptions();\n  }\n\n  /**\n   * Calendar View Model to generate the Calendar.\n   */\n  calendarViewModel: CalendarViewModel;\n\n  /**\n   * Gets the locale days according to the TranslationWidth.Narrow format.\n   */\n  get localeDays(): ReadonlyArray<ClrDayOfWeek> {\n    return this._localeHelperService.localeDays;\n  }\n\n  get calendar(): CalendarModel {\n    return this._dateNavigationService.displayedCalendar;\n  }\n\n  get selectedDay(): DayModel {\n    return this._dateNavigationService.selectedDay;\n  }\n\n  get focusedDay(): DayModel {\n    return this._dateNavigationService.focusedDay;\n  }\n\n  get today(): DayModel {\n    return this._dateNavigationService.today;\n  }\n\n  /**\n   * Initialize subscriptions to:\n   * 1. update the calendar view model.\n   * 2. update the focusable day in the calendar view model.\n   * 3. focus on the focusable day in the calendar.\n   */\n  private initializeSubscriptions(): void {\n    this._subs.push(\n      this._dateNavigationService.displayedCalendarChange.subscribe(() => {\n        this.generateCalendarView();\n      })\n    );\n\n    this._subs.push(\n      this._dateNavigationService.focusedDayChange.subscribe((focusedDay: DayModel) => {\n        this.calendarViewModel.updateFocusableDay(focusedDay);\n      })\n    );\n\n    this._subs.push(\n      this._dateNavigationService.focusOnCalendarChange.subscribe(() => {\n        this._datepickerFocusService.focusCell(this._elRef);\n      })\n    );\n  }\n\n  /**\n   * Generates the Calendar View based on the calendar retrieved from the DateNavigationService.\n   */\n  private generateCalendarView(): void {\n    this.calendarViewModel = new CalendarViewModel(\n      this.calendar,\n      this.selectedDay,\n      this.focusedDay,\n      this.today,\n      this._localeHelperService.firstDayOfWeek,\n      this._dateIOService.disabledDates\n    );\n  }\n\n  /**\n   * Delegates Keyboard arrow navigation to the DateNavigationService.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    if (event && this.focusedDay) {\n      switch (event.keyCode) {\n        case UP_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(-1 * NO_OF_DAYS_IN_A_WEEK);\n          break;\n        case DOWN_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(NO_OF_DAYS_IN_A_WEEK);\n          break;\n        case LEFT_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(-1);\n          break;\n        case RIGHT_ARROW:\n          event.preventDefault();\n          this._dateNavigationService.incrementFocusDay(1);\n          break;\n        default:\n          break; // No default case. TSLint x-(\n      }\n    }\n  }\n\n  /**\n   * Focuses on the focusable day when the Calendar View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n\n  /**\n   * Unsubscribe from subscriptions.\n   */\n  ngOnDestroy(): void {\n    this._subs.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2017 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport const UP_ARROW: number = 38;\nexport const DOWN_ARROW: number = 40;\nexport const RIGHT_ARROW: number = 39;\nexport const LEFT_ARROW: number = 37;\nexport const ENTER: number = 13;\nexport const SPACE: number = 32;\nexport const TAB: number = 9;\nexport const ESC: number = 27;\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class FocusService {\n  private _focused: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  get focusChange(): Observable<boolean> {\n    return this._focused.asObservable();\n  }\n  set focused(state: boolean) {\n    this._focused.next(state);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class DateFormControlService {\n  private _touchedChange: Subject<void> = new Subject<void>();\n  public disabled;\n\n  get touchedChange(): Observable<void> {\n    return this._touchedChange.asObservable();\n  }\n\n  private _dirtyChange: Subject<void> = new Subject<void>();\n\n  get dirtyChange(): Observable<void> {\n    return this._dirtyChange.asObservable();\n  }\n\n  markAsTouched(): void {\n    this._touchedChange.next();\n  }\n\n  markAsDirty(): void {\n    this._dirtyChange.next();\n  }\n\n  // friendly wrapper\n  setDisabled(state: boolean) {\n    this.disabled = state;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\nimport { DATEPICKER_ENABLE_BREAKPOINT } from '../../../utils/breakpoints/breakpoints';\nimport { MOBILE_USERAGENT_REGEX } from '../utils/constants';\n\n@Injectable()\nexport class DatepickerEnabledService {\n  constructor(@Inject(DOCUMENT) private _document: any) {\n    if (this._document) {\n      this._isUserAgentMobile = MOBILE_USERAGENT_REGEX.test(_document.defaultView.navigator.userAgent);\n      this._innerWidth = _document.defaultView.innerWidth;\n    }\n  }\n\n  private _isUserAgentMobile: boolean = false;\n  private _innerWidth: number;\n\n  /**\n   * Returns if the calendar should be active or not.\n   * If the user agent is mobile and the screen width is less than DATEPICKER_ACTIVE_BREAKPOINT\n   * then the calendar is inactive.\n   */\n  get isEnabled(): boolean {\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Browser_detection_using_the_user_agent\n    // What they recommend is:\n    //\"In summary, we recommend looking for the string 'Mobi'\n    // anywhere in the User Agent to detect a mobile device.\"\n    if (this._document) {\n      if (this._innerWidth < DATEPICKER_ENABLE_BREAKPOINT && this._isUserAgentMobile) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// iPad mini screen width\n// http://stephen.io/mediaqueries/#iPadMini\nexport const DATEPICKER_ENABLE_BREAKPOINT: number = 768;\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ClrPopoverPositions } from '../../../utils/popover/enums/positions.enum';\nimport { ClrPopoverPosition } from '../../../utils/popover/interfaces/popover-position.interface';\n\nconst enum DatepickerViewEnum {\n  MONTHVIEW = 'MONTHVIEW',\n  YEARVIEW = 'YEARVIEW',\n  DAYVIEW = 'DAYVIEW',\n}\n\n/**\n * This service manages which view is visible in the datepicker popover.\n */\n@Injectable()\nexport class ViewManagerService {\n  private _currentView: DatepickerViewEnum = DatepickerViewEnum.DAYVIEW;\n  position: ClrPopoverPosition = ClrPopoverPositions['bottom-left'];\n\n  get isDayView(): boolean {\n    return this._currentView === DatepickerViewEnum.DAYVIEW;\n  }\n\n  get isYearView(): boolean {\n    return this._currentView === DatepickerViewEnum.YEARVIEW;\n  }\n\n  get isMonthView(): boolean {\n    return this._currentView === DatepickerViewEnum.MONTHVIEW;\n  }\n\n  changeToMonthView(): void {\n    this._currentView = DatepickerViewEnum.MONTHVIEW;\n  }\n\n  changeToYearView(): void {\n    this._currentView = DatepickerViewEnum.YEARVIEW;\n  }\n\n  changeToDayView(): void {\n    this._currentView = DatepickerViewEnum.DAYVIEW;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  OnDestroy,\n  Optional,\n  ContentChild,\n  AfterViewInit,\n  ViewChild,\n  ElementRef,\n  Input,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrLabel } from '../common/label';\n\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateIOService } from './providers/date-io.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerEnabledService } from './providers/datepicker-enabled.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrPopoverPositions } from '../../utils/popover/enums/positions.enum';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-date-container',\n  template: `\n      <ng-content select=\"label\"></ng-content>\n      <label *ngIf=\"!label && addGrid()\"></label>\n      <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n        <div class=\"clr-input-wrapper\" clrPopoverAnchor>\n          <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n            <ng-content select=\"[clrDate]\"></ng-content>\n            <button #actionButton\n                    type=\"button\"\n                    clrPopoverOpenCloseButton\n                    class=\"clr-input-group-icon-action\"\n                    [attr.title]=\"commonStrings.keys.datepickerToggle\"\n                    [attr.aria-label]=\"commonStrings.keys.datepickerToggle\"\n                    [disabled]=\"isInputDateDisabled\"\n                    *ngIf=\"isEnabled\">\n              <clr-icon shape=\"calendar\"></clr-icon>\n            </button>\n            <clr-datepicker-view-manager *clrPopoverContent=\"open at popoverPosition; outsideClickToClose: true; scrollToClose: true\" clrFocusTrap></clr-datepicker-view-manager>\n          </div>\n          <clr-icon class=\"clr-validate-icon\" shape=\"exclamation-circle\"></clr-icon>\n        </div>\n        <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n        <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n      </div>\n    `,\n  providers: [\n    ControlIdService,\n    ClrPopoverToggleService,\n    ClrPopoverEventsService,\n    ClrPopoverPositionService,\n    LocaleHelperService,\n    IfErrorService,\n    ControlClassService,\n    FocusService,\n    NgControlService,\n    DateIOService,\n    DateNavigationService,\n    DatepickerEnabledService,\n    DateFormControlService,\n    ViewManagerService,\n  ],\n  host: {\n    '[class.clr-form-control-disabled]': 'isInputDateDisabled',\n    '[class.clr-form-control]': 'true',\n    '[class.clr-row]': 'addGrid()',\n  },\n})\nexport class ClrDateContainer implements DynamicWrapper, OnDestroy, AfterViewInit {\n  _dynamic: boolean = false;\n  invalid = false;\n  focus = false;\n  control: NgControl;\n  @ContentChild(ClrLabel) label: ClrLabel;\n  @Input('clrPosition')\n  set clrPosition(position: string) {\n    if (position && ClrPopoverPositions[position]) {\n      this.viewManagerService.position = ClrPopoverPositions[position];\n    }\n  }\n  get popoverPosition(): ClrPopoverPosition {\n    return this.viewManagerService.position;\n  }\n\n  public get open() {\n    return this.toggleService.open;\n  }\n\n  private toggleButton: ElementRef;\n  @ViewChild('actionButton')\n  set actionButton(button: ElementRef) {\n    this.toggleButton = button;\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private toggleService: ClrPopoverToggleService,\n    private dateNavigationService: DateNavigationService,\n    private datepickerEnabledService: DatepickerEnabledService,\n    private dateFormControlService: DateFormControlService,\n    public commonStrings: ClrCommonStringsService,\n    private ifErrorService: IfErrorService,\n    private focusService: FocusService,\n    private viewManagerService: ViewManagerService,\n    private controlClassService: ControlClassService,\n    @Optional() private layoutService: LayoutService,\n    private ngControlService: NgControlService\n  ) {\n    this.subscriptions.push(\n      this.focusService.focusChange.subscribe(state => {\n        this.focus = state;\n      }),\n      this.ngControlService.controlChanges.subscribe(control => {\n        this.control = control;\n      }),\n      this.toggleService.openChange.subscribe(state => {\n        this.dateFormControlService.markAsTouched();\n      })\n    );\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.ifErrorService.statusChanges.subscribe(invalid => {\n        this.invalid = invalid;\n      })\n    );\n  }\n\n  ngAfterViewInit(): void {\n    this.subscriptions.push(\n      this.toggleService.openChange.subscribe(open => {\n        if (open) {\n          this.initializeCalendar();\n        } else {\n          this.toggleButton.nativeElement.focus();\n        }\n      })\n    );\n  }\n\n  /**\n   * Returns the classes to apply to the control\n   */\n  controlClass() {\n    return this.controlClassService.controlClass(this.invalid, this.addGrid());\n  }\n\n  /**\n   * Determines if the control needs to add grid classes\n   */\n  addGrid() {\n    return this.layoutService && !this.layoutService.isVertical();\n  }\n\n  /**\n   * Returns if the Datepicker is enabled or not. If disabled, hides the datepicker trigger.\n   */\n  get isEnabled(): boolean {\n    return this.datepickerEnabledService.isEnabled;\n  }\n\n  /**\n   * Return if Datepicker is diabled or not as Form Control\n   */\n  get isInputDateDisabled(): boolean {\n    /* clrForm wrapper or without clrForm */\n    return (\n      (this.control && this.control.disabled) || (this.dateFormControlService && this.dateFormControlService.disabled)\n    );\n  }\n\n  /**\n   * Processes the user input and Initializes the Calendar everytime the datepicker popover is open.\n   */\n  private initializeCalendar(): void {\n    this.dateNavigationService.initializeCalendar();\n  }\n\n  /**\n   * Unsubscribe from subscriptions.\n   */\n  ngOnDestroy() {\n    this.subscriptions.map(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport function isBooleanAttributeSet(value: string | boolean): boolean {\n  // for null just return false no need to check anything\n  if (value === null) {\n    return false;\n  }\n  if (typeof value === 'string') {\n    // Empty string is valid, 'true' as string is also valid\n    return value.length >= 0;\n  }\n  // Boolean value will be read as it is, everything else is false\n  return typeof value === 'boolean' ? value : false;\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  PLATFORM_ID,\n  Renderer2,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport { NgControl } from '@angular/forms';\nimport { filter, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\nimport { FocusService } from '../common/providers/focus.service';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrDateContainer } from './date-container';\nimport { DayModel } from './model/day.model';\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateIOService } from './providers/date-io.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerEnabledService } from './providers/datepicker-enabled.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { datesAreEqual } from './utils/date-utils';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\n\n// There are four ways the datepicker value is set\n// 1. Value set by user typing into text input as a string ex: '01/28/2015'\n// 2. Value set explicitly by Angular Forms APIs as a string ex: '01/28/2015'\n// 3. Value set by user via datepicker UI as a Date Object\n// 4. Value set via `clrDate` input as a Date Object\n\n@Directive({\n  selector: '[clrDate]',\n  host: {\n    '[class.clr-input]': 'true',\n  },\n  providers: [DatepickerFocusService],\n})\nexport class ClrDateInput extends WrappedFormControl<ClrDateContainer> implements OnInit, AfterViewInit, OnDestroy {\n  @Input() placeholder: string;\n  @Output('clrDateChange') dateChange: EventEmitter<Date> = new EventEmitter<Date>(false);\n  @Input('clrDate')\n  set date(date: Date) {\n    if (this.previousDateChange !== date) {\n      this.updateDate(this.getValidDateValueFromDate(date));\n    }\n\n    if (!this.initialClrDateInputValue) {\n      this.initialClrDateInputValue = date;\n    }\n  }\n\n  @Input()\n  set min(dateString: string) {\n    this.dateIOService.setMinDate(dateString);\n  }\n\n  @Input()\n  set max(dateString: string) {\n    this.dateIOService.setMaxDate(dateString);\n  }\n\n  protected index = 1;\n  private initialClrDateInputValue: Date;\n  private previousDateChange: Date;\n\n  constructor(\n    viewContainerRef: ViewContainerRef,\n    injector: Injector,\n    protected el: ElementRef,\n    protected renderer: Renderer2,\n    @Self()\n    @Optional()\n    protected control: NgControl,\n    @Optional() private container: ClrDateContainer,\n    @Optional() private dateIOService: DateIOService,\n    @Optional() private dateNavigationService: DateNavigationService,\n    @Optional() private datepickerEnabledService: DatepickerEnabledService,\n    @Optional() private dateFormControlService: DateFormControlService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional() private focusService: FocusService,\n    private datepickerFocusService: DatepickerFocusService\n  ) {\n    super(viewContainerRef, ClrDateContainer, injector, control, renderer, el);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.populateServicesFromContainerComponent();\n\n    this.subscriptions.push(\n      this.listenForUserSelectedDayChanges(),\n      this.listenForControlValueChanges(),\n      this.listenForTouchChanges(),\n      this.listenForDirtyChanges(),\n      this.listenForInputRefocus()\n    );\n  }\n\n  ngAfterViewInit() {\n    // I don't know why I have to do this but after using the new HostWrapping Module I have to delay the processing\n    // of the initial Input set by the user to here. If I do not 2 issues occur:\n    // 1. The Input setter is called before ngOnInit. ngOnInit initializes the services without which the setter fails.\n    // 2. The Renderer doesn't work before ngAfterViewInit (It used to before the new HostWrapping Module for some reason).\n    // I need the renderer to set the value property on the input to make sure that if the user has supplied a Date\n    // input object, we reflect it with the right date on the input field using the IO service. I am not sure if\n    // these are major issues or not but just noting them down here.\n    this.processInitialInputs();\n  }\n\n  @HostListener('focus')\n  setFocusStates() {\n    this.setFocus(true);\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    this.setFocus(false);\n  }\n\n  @HostBinding('attr.placeholder')\n  get placeholderText(): string {\n    return this.placeholder ? this.placeholder : this.dateIOService.placeholderText;\n  }\n\n  @HostBinding('attr.type')\n  get inputType(): string {\n    return isPlatformBrowser(this.platformId) && this.usingNativeDatepicker() ? 'date' : 'text';\n  }\n\n  @HostListener('change', ['$event.target'])\n  onValueChange(target: HTMLInputElement) {\n    const validDateValue = this.dateIOService.getDateValueFromDateString(target.value);\n    if (this.usingClarityDatepicker() && validDateValue) {\n      this.updateDate(validDateValue, true);\n    } else if (this.usingNativeDatepicker()) {\n      const [year, month, day] = target.value.split('-');\n      this.updateDate(new Date(+year, +month - 1, +day), true);\n    } else {\n      this.emitDateOutput(null);\n    }\n  }\n\n  @HostBinding('disabled')\n  @Input('disabled')\n  set disabled(value: boolean | string) {\n    if (this.dateFormControlService) {\n      this.dateFormControlService.setDisabled(isBooleanAttributeSet(value));\n    }\n  }\n  get disabled() {\n    if (this.dateFormControlService) {\n      return this.dateFormControlService.disabled;\n    }\n    return null;\n  }\n\n  private usingClarityDatepicker() {\n    return this.datepickerEnabledService.isEnabled;\n  }\n\n  private usingNativeDatepicker() {\n    return !this.datepickerEnabledService.isEnabled;\n  }\n\n  private setFocus(focus: boolean) {\n    if (this.focusService) {\n      this.focusService.focused = focus;\n    }\n  }\n\n  private populateServicesFromContainerComponent() {\n    if (!this.container) {\n      this.dateIOService = this.getProviderFromContainer(DateIOService);\n      this.dateNavigationService = this.getProviderFromContainer(DateNavigationService);\n      this.datepickerEnabledService = this.getProviderFromContainer(DatepickerEnabledService);\n      this.dateFormControlService = this.getProviderFromContainer(DateFormControlService);\n    }\n  }\n\n  private processInitialInputs() {\n    if (this.datepickerHasFormControl()) {\n      this.updateDate(this.dateIOService.getDateValueFromDateString(this.control.value));\n    } else {\n      this.updateDate(this.initialClrDateInputValue);\n    }\n  }\n\n  private updateDate(value: Date, setByUserInteraction = false) {\n    const date = this.getValidDateValueFromDate(value);\n\n    if (setByUserInteraction) {\n      this.emitDateOutput(date);\n    } else {\n      this.previousDateChange = date;\n    }\n\n    if (this.dateNavigationService) {\n      this.dateNavigationService.selectedDay = date\n        ? new DayModel(date.getFullYear(), date.getMonth(), date.getDate())\n        : null;\n    }\n\n    this.updateInput(date);\n  }\n\n  private updateInput(date: Date) {\n    if (date) {\n      const dateString = this.dateIOService.toLocaleDisplayFormatString(date);\n      if (this.usingNativeDatepicker()) {\n        // valueAsDate expects UTC, date from input is time-zoned\n        date.setMinutes(date.getMinutes() - date.getTimezoneOffset());\n        this.renderer.setProperty(this.el.nativeElement, 'valueAsDate', date);\n      } else if (this.datepickerHasFormControl() && dateString !== this.control.value) {\n        this.control.control.setValue(dateString);\n      } else {\n        this.renderer.setProperty(this.el.nativeElement, 'value', dateString);\n      }\n    } else {\n      this.renderer.setProperty(this.el.nativeElement, 'value', '');\n    }\n  }\n\n  private getValidDateValueFromDate(date: Date) {\n    if (this.dateIOService) {\n      const dateString = this.dateIOService.toLocaleDisplayFormatString(date);\n      return this.dateIOService.getDateValueFromDateString(dateString);\n    } else {\n      return null;\n    }\n  }\n\n  private emitDateOutput(date: Date) {\n    if (!datesAreEqual(date, this.previousDateChange)) {\n      this.dateChange.emit(date);\n      this.previousDateChange = date;\n    } else if (!date && this.previousDateChange) {\n      this.dateChange.emit(null);\n      this.previousDateChange = null;\n    }\n  }\n\n  private datepickerHasFormControl() {\n    return !!this.control;\n  }\n\n  private listenForControlValueChanges() {\n    return of(this.datepickerHasFormControl())\n      .pipe(\n        filter(hasControl => hasControl),\n        switchMap(() => this.control.valueChanges),\n        // only update date value if not being set by user\n        filter(() => !this.datepickerFocusService.elementIsFocused(this.el.nativeElement))\n      )\n      .subscribe((value: string) => this.updateDate(this.dateIOService.getDateValueFromDateString(value)));\n  }\n\n  private listenForUserSelectedDayChanges() {\n    return this.dateNavigationService.selectedDayChange.subscribe(dayModel => this.updateDate(dayModel.toDate(), true));\n  }\n\n  private listenForTouchChanges() {\n    return this.dateFormControlService.touchedChange\n      .pipe(filter(() => this.datepickerHasFormControl()))\n      .subscribe(() => this.control.control.markAsTouched());\n  }\n\n  private listenForDirtyChanges() {\n    return this.dateFormControlService.dirtyChange\n      .pipe(filter(() => this.datepickerHasFormControl()))\n      .subscribe(() => this.control.control.markAsDirty());\n  }\n\n  private listenForInputRefocus() {\n    return this.dateNavigationService.selectedDayChange\n      .pipe(filter(date => !!date))\n      .subscribe(v => this.datepickerFocusService.focusInput(this.el.nativeElement));\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-datepicker-view-manager',\n  templateUrl: './datepicker-view-manager.html',\n  providers: [DatepickerFocusService],\n  host: {\n    '[class.datepicker]': 'true',\n    '[attr.aria-modal]': 'true',\n  },\n})\nexport class ClrDatepickerViewManager {\n  constructor(private viewManagerService: ViewManagerService) {}\n\n  /**\n   * Returns if the current view is the monthpicker.\n   */\n  get isMonthView(): boolean {\n    return this.viewManagerService.isMonthView;\n  }\n\n  /**\n   * Returns if the current view is the yearpicker.\n   */\n  get isYearView(): boolean {\n    return this.viewManagerService.isYearView;\n  }\n\n  /**\n   * Returns if the current view is the daypicker.\n   */\n  get isDayView(): boolean {\n    return this.viewManagerService.isDayView;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { DayViewModel } from './model/day-view.model';\nimport { DayModel } from './model/day.model';\nimport { DateFormControlService } from './providers/date-form-control.service';\nimport { DateNavigationService } from './providers/date-navigation.service';\n\n@Component({\n  selector: 'clr-day',\n  template: `\n        <button\n            class=\"day-btn\"\n            type=\"button\"\n            [class.is-today]=\"dayView.isTodaysDate\"\n            [class.is-excluded]=\"dayView.isExcluded\"\n            [class.is-disabled]=\"dayView.isDisabled\"\n            [class.is-selected]=\"dayView.isSelected\"\n            [attr.tabindex]=\"dayView.tabIndex\"\n            (click)=\"selectDay()\"\n            (focus)=\"onDayViewFocus()\"\n            [attr.aria-label]=\"dayString\">\n            {{dayView.dayModel.date}}\n        </button>\n    `,\n  host: { '[class.day]': 'true' },\n})\nexport class ClrDay {\n  private _dayView: DayViewModel;\n  public dayString: string;\n\n  constructor(\n    private _dateNavigationService: DateNavigationService,\n    private _toggleService: ClrPopoverToggleService,\n    private dateFormControlService: DateFormControlService\n  ) {}\n\n  /**\n   * DayViewModel input which is used to build the Day View.\n   */\n\n  @Input('clrDayView')\n  public set dayView(day: DayViewModel) {\n    this._dayView = day;\n    this.dayString = this._dayView.dayModel.toDateString();\n  }\n\n  public get dayView(): DayViewModel {\n    return this._dayView;\n  }\n\n  /**\n   * Updates the focusedDay in the DateNavigationService when the ClrDay is focused.\n   */\n  onDayViewFocus() {\n    this._dateNavigationService.focusedDay = this.dayView.dayModel;\n  }\n\n  /**\n   * Updates the selectedDay when the ClrDay is selected and closes the datepicker popover.\n   */\n  selectDay(): void {\n    const day: DayModel = this.dayView.dayModel;\n    this._dateNavigationService.notifySelectedDayChanged(day);\n    this.dateFormControlService.markAsDirty();\n    this._toggleService.open = false;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, AfterViewInit } from '@angular/core';\n\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ViewManagerService } from './providers/view-manager.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  selector: 'clr-daypicker',\n  providers: [ClrAriaLiveService],\n  templateUrl: './daypicker.html',\n  host: { '[class.daypicker]': 'true' },\n})\nexport class ClrDaypicker implements AfterViewInit {\n  constructor(\n    private _viewManagerService: ViewManagerService,\n    private _dateNavigationService: DateNavigationService,\n    private _localeHelperService: LocaleHelperService,\n    public commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {}\n\n  ngAfterViewInit() {\n    /** @deprecated since 3.0, remove in 4.0 */\n    this.ariaLiveService.announce(`${this.ariaLiveMonth} ${this.updateAriaLiveYear}`);\n  }\n\n  get monthAttrString(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.datepickerSelectMonthText, {\n      CALENDAR_MONTH: this.calendarMonth,\n    });\n  }\n\n  get yearAttrString(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.datepickerSelectYearText, {\n      CALENDAR_YEAR: this.calendarYear.toString(),\n    });\n  }\n\n  get ariaLiveMonth(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.daypickerSRCurrentMonthPhrase, {\n      CURRENT_MONTH: this.calendarMonth,\n    });\n  }\n\n  get updateAriaLiveYear(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.daypickerSRCurrentYearPhrase, {\n      CURRENT_YEAR: this.calendarYear.toString(),\n    });\n  }\n\n  /**\n   * Calls the ViewManagerService to change to the monthpicker view.\n   */\n  changeToMonthView(): void {\n    this._viewManagerService.changeToMonthView();\n  }\n\n  /**\n   * Calls the ViewManagerService to change to the yearpicker view.\n   */\n  changeToYearView(): void {\n    this._viewManagerService.changeToYearView();\n  }\n\n  /**\n   * Returns the month value of the calendar in the TranslationWidth.Abbreviated format.\n   */\n  get calendarMonth(): string {\n    return this._localeHelperService.localeMonthsAbbreviated[this._dateNavigationService.displayedCalendar.month];\n  }\n\n  /**\n   * Returns the year value of the calendar.\n   */\n  get calendarYear(): number {\n    return this._dateNavigationService.displayedCalendar.year;\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the next month.\n   */\n  nextMonth(): void {\n    this._dateNavigationService.moveToNextMonth();\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the previous month.\n   */\n  previousMonth(): void {\n    this._dateNavigationService.moveToPreviousMonth();\n  }\n\n  /**\n   * Calls the DateNavigationService to move to the current month.\n   */\n  currentMonth(): void {\n    this._dateNavigationService.moveToCurrentMonth();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, HostListener } from '@angular/core';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { LocaleHelperService } from './providers/locale-helper.service';\nimport { ViewManagerService } from './providers/view-manager.service';\n\n@Component({\n  selector: 'clr-monthpicker',\n  template: `\n        <button\n            type=\"button\"\n            class=\"calendar-btn month\"\n            *ngFor=\"let month of monthNames; let monthIndex = index\"\n            (click)=\"changeMonth(monthIndex)\"\n            [class.is-selected]=\"monthIndex === calendarMonthIndex\"\n            [attr.tabindex]=\"getTabIndex(monthIndex)\">\n            {{month}}\n        </button>\n    `,\n  host: {\n    '[class.monthpicker]': 'true',\n  },\n})\nexport class ClrMonthpicker implements AfterViewInit {\n  constructor(\n    private _viewManagerService: ViewManagerService,\n    private _localeHelperService: LocaleHelperService,\n    private _dateNavigationService: DateNavigationService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _elRef: ElementRef\n  ) {\n    this._focusedMonthIndex = this.calendarMonthIndex;\n  }\n\n  /**\n   * Keeps track of the current focused month.\n   */\n  private _focusedMonthIndex: number;\n\n  /**\n   * Gets the months array which is used to rendered the monthpicker view.\n   * Months are in the TranslationWidth.Wide format.\n   */\n  get monthNames(): ReadonlyArray<string> {\n    return this._localeHelperService.localeMonthsWide;\n  }\n\n  /**\n   * Gets the month value of the Calendar.\n   */\n  get calendarMonthIndex(): number {\n    return this._dateNavigationService.displayedCalendar.month;\n  }\n\n  /**\n   * Calls the DateNavigationService to update the month value of the calendar.\n   * Also changes the view to the daypicker.\n   */\n  changeMonth(monthIndex: number) {\n    this._dateNavigationService.changeMonth(monthIndex);\n    this._viewManagerService.changeToDayView();\n  }\n\n  /**\n   * Compares the month passed to the focused month and returns the tab index.\n   */\n  getTabIndex(monthIndex: number): number {\n    return monthIndex === this._focusedMonthIndex ? 0 : -1;\n  }\n\n  /**\n   * Handles the Keyboard arrow navigation for the monthpicker.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // NOTE: Didn't move this to the date navigation service because\n    // the logic is fairly simple and it didn't make sense for me\n    // to create extra observables just to move this logic to the service.\n    if (event) {\n      const keyCode: number = event.keyCode;\n      if (keyCode === UP_ARROW && this._focusedMonthIndex > 0) {\n        event.preventDefault();\n        this._focusedMonthIndex--;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === DOWN_ARROW && this._focusedMonthIndex < 11) {\n        event.preventDefault();\n        this._focusedMonthIndex++;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === RIGHT_ARROW && this._focusedMonthIndex < 6) {\n        event.preventDefault();\n        this._focusedMonthIndex = this._focusedMonthIndex + 6;\n        this._datepickerFocusService.focusCell(this._elRef);\n      } else if (keyCode === LEFT_ARROW && this._focusedMonthIndex > 5) {\n        event.preventDefault();\n        this._focusedMonthIndex = this._focusedMonthIndex - 6;\n        this._datepickerFocusService.focusCell(this._elRef);\n      }\n    }\n  }\n\n  /**\n   * Focuses on the current calendar month when the View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nconst YEARS_TO_DISPLAY: number = 10;\n\nexport class YearRangeModel {\n  constructor(private readonly year: number) {\n    this.generateYearRange();\n  }\n\n  yearRange: number[] = [];\n\n  /**\n   * Gets the number in the middle of the range.\n   */\n  get middleYear(): number {\n    return this.yearRange[Math.floor(this.yearRange.length / 2)];\n  }\n\n  /**\n   * Generates the year range based on the year parameter.\n   * eg: If 2018 is passed the output will be [2010, 2011, ..., 2019]\n   */\n  private generateYearRange() {\n    const remainder: number = this.year % YEARS_TO_DISPLAY;\n    const floor: number = this.year - remainder;\n    const ceil: number = floor + YEARS_TO_DISPLAY;\n    this.yearRange = this.generateRange(floor, ceil);\n  }\n\n  /**\n   * Function which generate a range of numbers from floor to ceil.\n   */\n  private generateRange(floor: number, ceil: number): number[] {\n    return Array.from({ length: ceil - floor }, (v, k) => k + floor);\n  }\n\n  /**\n   * Generates the YearRangeModel for the next decade.\n   */\n  nextDecade(): YearRangeModel {\n    return new YearRangeModel(this.year + 10);\n  }\n\n  /**\n   * Generates the YearRangeModel for the previous decade.\n   */\n  previousDecade(): YearRangeModel {\n    return new YearRangeModel(this.year - 10);\n  }\n\n  /**\n   * Generates the YearRangeModel for the current decade.\n   */\n  currentDecade(): YearRangeModel {\n    return new YearRangeModel(new Date().getFullYear());\n  }\n\n  /**\n   * Checks if the value is in the YearRangeModel.\n   */\n  inRange(value: number): boolean {\n    return this.yearRange.indexOf(value) > -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, HostListener } from '@angular/core';\n\nimport { DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW, UP_ARROW } from '../../utils/key-codes/key-codes';\n\nimport { YearRangeModel } from './model/year-range.model';\nimport { DateNavigationService } from './providers/date-navigation.service';\nimport { DatepickerFocusService } from './providers/datepicker-focus.service';\nimport { ViewManagerService } from './providers/view-manager.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAriaLiveService } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  selector: 'clr-yearpicker',\n  providers: [ClrAriaLiveService],\n  template: `\n        <div class=\"year-switchers\">\n          <button\n              class=\"calendar-btn switcher\"\n              type=\"button\"\n              (click)=\"previousDecade()\"\n              [attr.aria-label]=\"commonStrings.keys.datepickerPreviousDecade\">\n              <clr-icon shape=\"angle\" dir=\"left\" [attr.title]=\"commonStrings.keys.datepickerPreviousDecade\"></clr-icon>\n          </button>\n          <button\n              class=\"calendar-btn switcher\"\n              type=\"button\"\n              (click)=\"currentDecade()\"\n              [attr.aria-label]=\"commonStrings.keys.datepickerCurrentDecade\">\n              <clr-icon shape=\"event\" [attr.title]=\"commonStrings.keys.datepickerCurrentDecade\"></clr-icon>\n          </button>\n          <button\n              class=\"calendar-btn switcher\"\n              type=\"button\"\n              (click)=\"nextDecade()\"\n              [attr.aria-label]=\"commonStrings.keys.datepickerNextDecade\">\n              <clr-icon shape=\"angle\" dir=\"right\" [attr.title]=\"commonStrings.keys.datepickerNextDecade\"></clr-icon>\n          </button>\n        </div>\n        <div class=\"years\">\n            <button\n                *ngFor=\"let year of yearRangeModel.yearRange\"\n                type=\"button\"\n                class=\"calendar-btn year\"\n                [attr.tabindex]=\"getTabIndex(year)\"\n                [class.is-selected]=\"year === calendarYear\"\n                (click)=\"changeYear(year)\">\n                {{year}}\n            </button>\n        </div>\n    `,\n  host: {\n    '[class.yearpicker]': 'true',\n  },\n})\nexport class ClrYearpicker implements AfterViewInit {\n  constructor(\n    private _dateNavigationService: DateNavigationService,\n    private _viewManagerService: ViewManagerService,\n    private _datepickerFocusService: DatepickerFocusService,\n    private _elRef: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {\n    this.yearRangeModel = new YearRangeModel(this.calendarYear);\n    this._focusedYear = this.calendarYear;\n    this.updateRange(this.yearRangeModel);\n  }\n\n  /** @deprecated since 3.0, remove in 4.0 */\n  get ariaLiveDecadeText(): string {\n    return this.commonStrings.parse(this.commonStrings.keys.daypickerSRCurrentDecadePhrase, {\n      DECADE_RANGE: this.decadeRange,\n    });\n  }\n\n  private decadeRange;\n\n  /**\n   * YearRangeModel which is used to build the YearPicker view.\n   */\n  yearRangeModel: YearRangeModel;\n\n  /**\n   * Keeps track of the current focused year.\n   */\n  private _focusedYear: number;\n\n  /**\n   * Gets the year which the user is currently on.\n   */\n  get calendarYear(): number {\n    return this._dateNavigationService.displayedCalendar.year;\n  }\n\n  /**\n   * Increments the focus year by the value passed. Updates the YearRangeModel if the\n   * new value is not in the current decade.\n   */\n  private incrementFocusYearBy(value: number): void {\n    this._focusedYear = this._focusedYear + value;\n    if (!this.yearRangeModel.inRange(this._focusedYear)) {\n      if (value > 0) {\n        this.yearRangeModel = this.yearRangeModel.nextDecade();\n      } else {\n        this.yearRangeModel = this.yearRangeModel.previousDecade();\n      }\n    }\n    this._datepickerFocusService.focusCell(this._elRef);\n  }\n\n  /**\n   * Calls the DateNavigationService to update the year value of the calendar.\n   * Also changes the view to the daypicker.\n   */\n  changeYear(year: number): void {\n    this._dateNavigationService.changeYear(year);\n    this._viewManagerService.changeToDayView();\n  }\n\n  /**\n   * Updates the YearRangeModel to the previous decade.\n   */\n  previousDecade(): void {\n    this.yearRangeModel = this.yearRangeModel.previousDecade();\n    this.updateRange(this.yearRangeModel);\n    // Year in the yearpicker is not focused because while navigating to a different decade,\n    // you want the focus to remain on the decade switcher arrows.\n  }\n\n  /**\n   * Updates the YearRangeModel to the current decade.\n   */\n  currentDecade(): void {\n    if (!this.yearRangeModel.inRange(this._dateNavigationService.today.year)) {\n      this.yearRangeModel = this.yearRangeModel.currentDecade();\n    }\n    this._datepickerFocusService.focusCell(this._elRef);\n    this.updateRange(this.yearRangeModel);\n  }\n\n  /**\n   * Updates the YearRangeModel to the next decade.\n   */\n  nextDecade(): void {\n    this.yearRangeModel = this.yearRangeModel.nextDecade();\n    this.updateRange(this.yearRangeModel);\n    // Year in the yearpicker is not focused because while navigating to a different decade,\n    // you want the focus to remain on the decade switcher arrows.\n  }\n\n  /**\n   * Compares the year passed to the focused year and returns the tab index.\n   */\n  getTabIndex(year: number): number {\n    if (!this.yearRangeModel.inRange(this._focusedYear)) {\n      if (this.yearRangeModel.inRange(this.calendarYear)) {\n        this._focusedYear = this.calendarYear;\n      } else {\n        this._focusedYear = this.yearRangeModel.middleYear;\n      }\n    }\n    return this._focusedYear === year ? 0 : -1;\n  }\n\n  /**\n   * Handles the Keyboard arrow navigation for the yearpicker.\n   */\n  @HostListener('keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    // NOTE: Didn't move this to the date navigation service because\n    // the logic is fairly simple and it didn't make sense for me\n    // to create extra observables just to move this logic to the service.\n    if (event) {\n      const keyCode: number = event.keyCode;\n      if (keyCode === UP_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(-1);\n      } else if (keyCode === DOWN_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(1);\n      } else if (keyCode === RIGHT_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(5);\n      } else if (keyCode === LEFT_ARROW) {\n        event.preventDefault();\n        this.incrementFocusYearBy(-5);\n      }\n    }\n  }\n\n  private updateRange(yrm: YearRangeModel): void {\n    const floor = yrm.yearRange[0];\n    const ceil = yrm.yearRange[yrm.yearRange.length - 1];\n    this.decadeRange = `${floor} to ${ceil}`;\n    /** @deprecated since 3.0, remove in 4.0 */\n    this.ariaLiveService.announce(this.ariaLiveDecadeText);\n  }\n\n  /**\n   * Focuses on the current calendar year when the View is initialized.\n   */\n  ngAfterViewInit() {\n    this._datepickerFocusService.focusCell(this._elRef);\n    /** @deprecated since 3.0, remove in 4.0 */\n    this.ariaLiveService.announce(this.ariaLiveDecadeText);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusTrapModule } from '../../utils/focus-trap/focus-trap.module';\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\n\nimport { ClrCalendar } from './calendar';\nimport { ClrDateContainer } from './date-container';\nimport { ClrDateInput } from './date-input';\nimport { ClrDatepickerViewManager } from './datepicker-view-manager';\nimport { ClrDay } from './day';\nimport { ClrDaypicker } from './daypicker';\nimport { ClrMonthpicker } from './monthpicker';\nimport { ClrYearpicker } from './yearpicker';\n\nexport const CLR_DATEPICKER_DIRECTIVES: Type<any>[] = [\n  ClrDay,\n  ClrDateContainer,\n  ClrDateInput,\n  ClrDatepickerViewManager,\n  ClrMonthpicker,\n  ClrYearpicker,\n  ClrDaypicker,\n  ClrCalendar,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClrHostWrappingModule,\n    ClrConditionalModule,\n    ClrPopoverModuleNext,\n    ClrIconModule,\n    ClrFocusTrapModule,\n    ClrCommonFormsModule,\n  ],\n  declarations: [CLR_DATEPICKER_DIRECTIVES],\n  exports: [CLR_DATEPICKER_DIRECTIVES],\n  entryComponents: [ClrDateContainer],\n})\nexport class ClrDatepickerModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-input-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-input-wrapper\">\n                <ng-content select=\"[clrInput]\"></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrInputContainer extends ClrAbstractContainer {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Optional, ViewContainerRef, Renderer2, ElementRef, Injector, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrInputContainer } from './input-container';\nimport { WrappedFormControl } from '../common/wrapped-control';\n\n@Directive({ selector: '[clrInput]', host: { '[class.clr-input]': 'true' } })\nexport class ClrInput extends WrappedFormControl<ClrInputContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrInputContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrInput } from './input';\nimport { ClrInputContainer } from './input-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrInput, ClrInputContainer],\n  exports: [ClrCommonFormsModule, ClrInput, ClrInputContainer],\n  entryComponents: [ClrInputContainer],\n})\nexport class ClrInputModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Inject, InjectionToken, Input, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\nexport const TOGGLE_SERVICE = new InjectionToken<BehaviorSubject<boolean>>(undefined);\nexport function ToggleServiceFactory() {\n  return new BehaviorSubject<boolean>(false);\n}\nexport const TOGGLE_SERVICE_PROVIDER = { provide: TOGGLE_SERVICE, useFactory: ToggleServiceFactory };\n\n@Component({\n  selector: 'clr-password-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-input-wrapper\">\n        <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n          <ng-content select=\"[clrPassword]\"></ng-content>\n          <button\n            *ngIf=\"clrToggle\"\n            (click)=\"toggle()\"\n            [disabled]=\"control?.disabled\"\n            class=\"clr-input-group-icon-action\"\n            type=\"button\">\n            <clr-icon\n            [attr.shape]=\"show ? 'eye-hide' : 'eye'\"\n            [attr.title]=\"show ? commonStrings.keys.hide : commonStrings.keys.show\"></clr-icon>\n          </button>\n        </div>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n    </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [\n    IfErrorService,\n    NgControlService,\n    ControlIdService,\n    ControlClassService,\n    FocusService,\n    TOGGLE_SERVICE_PROVIDER,\n  ],\n})\nexport class ClrPasswordContainer extends ClrAbstractContainer {\n  show = false;\n  focus = false;\n  private _toggle = true;\n\n  @Input('clrToggle')\n  set clrToggle(state: boolean) {\n    this._toggle = state;\n    if (!state) {\n      this.show = false;\n    }\n  }\n  get clrToggle() {\n    return this._toggle;\n  }\n\n  constructor(\n    ifErrorService: IfErrorService,\n    @Optional() layoutService: LayoutService,\n    controlClassService: ControlClassService,\n    ngControlService: NgControlService,\n    public focusService: FocusService,\n    @Inject(TOGGLE_SERVICE) private toggleService: BehaviorSubject<boolean>,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    super(ifErrorService, layoutService, controlClassService, ngControlService);\n    this.subscriptions.push(\n      this.focusService.focusChange.subscribe(state => {\n        this.focus = state;\n      })\n    );\n  }\n\n  toggle() {\n    this.show = !this.show;\n    this.toggleService.next(this.show);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport enum DragEventType {\n  DRAG_START,\n  DRAG_MOVE,\n  DRAG_END,\n  DRAG_ENTER,\n  DRAG_LEAVE,\n  DROP,\n}\n\nexport interface DragPointPosition {\n  pageX: number;\n  pageY: number;\n  moveX: number;\n  moveY: number;\n}\n\nexport interface DragEventInterface<T> {\n  type: DragEventType;\n  group?: string | string[];\n  ghostElement?: any;\n  dragPosition: DragPointPosition;\n  dragDataTransfer?: T;\n  // For default ghosts, this dropPointPosition denotes the center point of the ghost element.\n  // This center point is used to determine whether the ghost is over droppable elements or not.\n  dropPointPosition?: { pageX: number; pageY: number };\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Injector,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  Self,\n  ViewContainerRef,\n} from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { NgControl } from '@angular/forms';\n\nimport { ClrPasswordContainer, TOGGLE_SERVICE } from './password-container';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { FocusService } from '../common/providers/focus.service';\n\n@Directive({ selector: '[clrPassword]', host: { '[class.clr-input]': 'true' } })\nexport class ClrPassword extends WrappedFormControl<ClrPasswordContainer> implements OnInit, OnDestroy {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    @Optional() private focusService: FocusService,\n    @Optional()\n    @Inject(TOGGLE_SERVICE)\n    private toggleService: BehaviorSubject<boolean>\n  ) {\n    super(vcr, ClrPasswordContainer, injector, control, renderer, el);\n\n    if (!this.focusService) {\n      throw new Error('clrPassword requires being wrapped in <clr-password-container>');\n    }\n\n    this.subscriptions.push(\n      this.toggleService.subscribe(toggle => {\n        renderer.setProperty(el.nativeElement, 'type', toggle ? 'text' : 'password');\n      })\n    );\n  }\n\n  @HostListener('focus')\n  triggerFocus() {\n    if (this.focusService) {\n      this.focusService.focused = true;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    if (this.focusService) {\n      this.focusService.focused = false;\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrPassword } from './password';\nimport { ClrPasswordContainer } from './password-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrPassword, ClrPasswordContainer],\n  exports: [ClrCommonFormsModule, ClrPassword, ClrPasswordContainer],\n  entryComponents: [ClrPasswordContainer],\n})\nexport class ClrPasswordModule {}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, OnInit } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ClrLabel } from '../common/label';\n\n@Component({\n  selector: 'clr-radio-wrapper',\n  template: `\n    <ng-content select=\"[clrRadio]\"></ng-content>\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label\"></label>\n  `,\n  host: {\n    '[class.clr-radio-wrapper]': 'true',\n  },\n  providers: [ControlIdService],\n})\nexport class ClrRadioWrapper implements DynamicWrapper, OnInit {\n  // We need both _dynamic for HostWrapper and ContentChild(ClrLabel) in cases where\n  // the user puts a radio inside a wrapper without a label, host wrapping doesn't apply\n  // but we'd still need to insert a label\n  _dynamic = false;\n  @ContentChild(ClrLabel, { static: true })\n  label: ClrLabel;\n\n  ngOnInit() {\n    if (this.label) {\n      this.label.disableGrid();\n    }\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Injector, Optional, Renderer2, Self, ViewContainerRef } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrRadioWrapper } from '../radio/radio-wrapper';\n\n@Directive({ selector: '[clrRadio]' })\nexport class ClrRadio extends WrappedFormControl<ClrRadioWrapper> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrRadioWrapper, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-radio-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [class.clr-control-inline]=\"clrInline\" [ngClass]=\"controlClass()\">\n      <ng-content select=\"clr-radio-wrapper\"></ng-content>\n      <div class=\"clr-subtext-wrapper\">\n        <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n        <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n      </div>\n    </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [NgControlService, ControlClassService, IfErrorService],\n})\nexport class ClrRadioContainer extends ClrAbstractContainer {\n  private inline = false;\n\n  /*\n   * Here we want to support the following cases\n   * clrInline - true by presence\n   * clrInline=\"true|false\" - unless it is explicitly false, strings are considered true\n   * [clrInline]=\"true|false\" - expect a boolean\n   */\n  @Input()\n  set clrInline(value: boolean | string) {\n    if (typeof value === 'string') {\n      this.inline = value === 'false' ? false : true;\n    } else {\n      this.inline = !!value;\n    }\n  }\n  get clrInline() {\n    return this.inline;\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrRadio } from './radio';\nimport { ClrRadioContainer } from './radio-container';\nimport { ClrRadioWrapper } from './radio-wrapper';\n\n@NgModule({\n  imports: [CommonModule, ClrCommonFormsModule, ClrHostWrappingModule, ClrIconModule],\n  declarations: [ClrRadio, ClrRadioContainer, ClrRadioWrapper],\n  exports: [ClrCommonFormsModule, ClrRadio, ClrRadioContainer, ClrRadioWrapper],\n  entryComponents: [ClrRadioWrapper],\n})\nexport class ClrRadioModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild } from '@angular/core';\nimport { SelectMultipleControlValueAccessor } from '@angular/forms';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-select-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div [ngClass]=\"wrapperClass()\">\n                <ng-content select=\"[clrSelect]\"></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrSelectContainer extends ClrAbstractContainer {\n  @ContentChild(SelectMultipleControlValueAccessor, { static: false })\n  multiple: SelectMultipleControlValueAccessor;\n  private multi = false;\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.ngControlService.controlChanges.subscribe(control => {\n        if (control) {\n          this.multi = control.valueAccessor instanceof SelectMultipleControlValueAccessor;\n          this.control = control;\n        }\n      })\n    );\n  }\n\n  wrapperClass() {\n    return this.multi ? 'clr-multiselect-wrapper' : 'clr-select-wrapper';\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ViewContainerRef, Renderer2, ElementRef, Injector, Optional, Self } from '@angular/core';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrSelectContainer } from './select-container';\nimport { NgControl } from '@angular/forms';\n\n@Directive({ selector: '[clrSelect]', host: { '[class.clr-select]': 'true' } })\nexport class ClrSelect extends WrappedFormControl<ClrSelectContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrSelectContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrSelect } from './select';\nimport { ClrSelectContainer } from './select-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrSelect, ClrSelectContainer],\n  exports: [ClrCommonFormsModule, ClrSelect, ClrSelectContainer],\n  entryComponents: [ClrSelectContainer],\n})\nexport class ClrSelectModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-textarea-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-textarea-wrapper\">\n                <ng-content select=\"[clrTextarea]\"></ng-content>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrTextareaContainer extends ClrAbstractContainer {}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ViewContainerRef, Renderer2, ElementRef, Injector, Optional, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrTextareaContainer } from './textarea-container';\n\n@Directive({ selector: '[clrTextarea]', host: { '[class.clr-textarea]': 'true' } })\nexport class ClrTextarea extends WrappedFormControl<ClrTextareaContainer> {\n  protected index = 1;\n\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrTextareaContainer, injector, control, renderer, el);\n  }\n}\n","/**\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\n\nimport { ClrTextarea } from './textarea';\nimport { ClrTextareaContainer } from './textarea-container';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrCommonFormsModule],\n  declarations: [ClrTextarea, ClrTextareaContainer],\n  exports: [ClrCommonFormsModule, ClrTextarea, ClrTextareaContainer],\n  entryComponents: [ClrTextareaContainer],\n})\nexport class ClrTextareaModule {}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, Optional, Renderer2 } from '@angular/core';\n\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-range-container',\n  template: `\n        <ng-content select=\"label\"></ng-content>\n        <label *ngIf=\"!label && addGrid()\"></label>\n        <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n            <div class=\"clr-range-wrapper\" [class.progress-fill]=\"hasProgress\">\n                <ng-content select=\"[clrRange]\"></ng-content>\n                <span\n                  *ngIf=\"hasProgress\"\n                  class=\"fill-input\"\n                  [style.width]=\"getRangeProgressFillWidth()\"\n                ></span>\n                <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n            </div>\n            <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n            <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n        </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [IfErrorService, NgControlService, ControlIdService, ControlClassService],\n})\nexport class ClrRangeContainer extends ClrAbstractContainer {\n  private _hasProgress: boolean = false;\n\n  @Input('clrRangeHasProgress')\n  set hasProgress(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._hasProgress) {\n      this._hasProgress = valBool;\n    }\n  }\n\n  get hasProgress() {\n    return this._hasProgress;\n  }\n\n  constructor(\n    ifErrorService: IfErrorService,\n    @Optional() layoutService: LayoutService,\n    controlClassService: ControlClassService,\n    ngControlService: NgControlService,\n    private renderer: Renderer2,\n    private idService: ControlIdService\n  ) {\n    super(ifErrorService, layoutService, controlClassService, ngControlService);\n  }\n\n  getRangeProgressFillWidth(): string {\n    const input = <HTMLInputElement>this.renderer.selectRootElement('[clrRange]#' + this.idService.id);\n\n    const inputWidth = input.offsetWidth;\n    const inputMinValue = +input.min;\n    let inputMaxValue = +input.max;\n\n    if (inputMinValue === 0 && inputMaxValue === 0) {\n      inputMaxValue = 100;\n    }\n\n    const inputMiddle = (inputMinValue + inputMaxValue) / 2;\n    const inputValue = !!this.control && this.control.value !== undefined ? this.control.value : inputMiddle;\n    const valueAsPercent = (inputValue - inputMinValue) * 100 / (inputMaxValue - inputMinValue);\n\n    return valueAsPercent * inputWidth / 100 + 'px';\n  }\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, Optional, ViewContainerRef, Renderer2, ElementRef, Injector, Self } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrRangeContainer } from './range-container';\n\n@Directive({ selector: '[clrRange]', host: { '[class.clr-range]': 'true' } })\nexport class ClrRange extends WrappedFormControl<ClrRangeContainer> {\n  constructor(\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef\n  ) {\n    super(vcr, ClrRangeContainer, injector, control, renderer, el);\n  }\n\n  // Notes: We need an output here EventEmitter for the value\n  // Does this implementation also need a display for the value?\n}\n","/**\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrIconModule } from '../../icon/icon.module';\n\nimport { ClrHostWrappingModule } from '../../utils/host-wrapping/host-wrapping.module';\nimport { ClrCommonFormsModule } from '../common/common.module';\nimport { ClrRange } from './range';\nimport { ClrRangeContainer } from './range-container';\n\n@NgModule({\n  imports: [CommonModule, ClrCommonFormsModule, ClrHostWrappingModule, ClrIconModule],\n  declarations: [ClrRange, ClrRangeContainer],\n  exports: [ClrCommonFormsModule, ClrRange, ClrRangeContainer],\n  entryComponents: [ClrRangeContainer],\n})\nexport class ClrRangeModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nlet counter = 0;\n\n@Injectable()\nexport class DatalistIdService {\n  private _id = 'clr-datalist-' + ++counter;\n\n  get id(): string {\n    return this._id;\n  }\n\n  set id(value: string) {\n    this._id = value;\n    this._idChange.next(value);\n  }\n\n  private _idChange: BehaviorSubject<string> = new BehaviorSubject(this._id);\n  public get idChange(): Observable<string> {\n    return this._idChange.asObservable();\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Optional } from '@angular/core';\nimport { ControlClassService } from '../common/providers/control-class.service';\nimport { LayoutService } from '../common/providers/layout.service';\nimport { ControlIdService } from '../common/providers/control-id.service';\nimport { FocusService } from '../common/providers/focus.service';\nimport { IfErrorService } from '../common/if-error/if-error.service';\nimport { NgControlService } from '../common/providers/ng-control.service';\nimport { DatalistIdService } from './providers/datalist-id.service';\nimport { ClrAbstractContainer } from '../common/abstract-container';\n\n@Component({\n  selector: 'clr-datalist-container',\n  template: `\n    <ng-content select=\"label\"></ng-content>\n    <label *ngIf=\"!label && addGrid()\"></label>\n    <div class=\"clr-control-container\" [ngClass]=\"controlClass()\">\n      <div class=\"clr-input-wrapper\">\n        <div class=\"clr-input-group\" [class.clr-focus]=\"focus\">\n          <ng-content select=\"[clrDatalistInput]\"></ng-content>\n          <ng-content select=\"datalist\"></ng-content>\n        </div>\n        <clr-icon *ngIf=\"invalid\" class=\"clr-validate-icon\" shape=\"exclamation-circle\" aria-hidden=\"true\"></clr-icon>\n      </div>\n      <ng-content select=\"clr-control-helper\" *ngIf=\"!invalid\"></ng-content>\n      <ng-content select=\"clr-control-error\" *ngIf=\"invalid\"></ng-content>\n    </div>\n    `,\n  host: {\n    '[class.clr-form-control]': 'true',\n    '[class.clr-form-control-disabled]': 'control?.disabled',\n    '[class.clr-row]': 'addGrid()',\n  },\n  providers: [\n    ControlClassService,\n    LayoutService,\n    ControlIdService,\n    FocusService,\n    IfErrorService,\n    NgControlService,\n    DatalistIdService,\n  ],\n})\nexport class ClrDatalistContainer extends ClrAbstractContainer {\n  focus: boolean = false;\n\n  constructor(\n    controlClassService: ControlClassService,\n    @Optional() layoutService: LayoutService,\n    ifErrorService: IfErrorService,\n    ngControlService: NgControlService,\n    private focusService: FocusService\n  ) {\n    super(ifErrorService, layoutService, controlClassService, ngControlService);\n\n    this.subscriptions.push(this.focusService.focusChange.subscribe(state => (this.focus = state)));\n  }\n}\n","/**\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  ViewContainerRef,\n  Injector,\n  Self,\n  Optional,\n  Renderer2,\n  ElementRef,\n  HostListener,\n  AfterContentInit,\n} from '@angular/core';\nimport { WrappedFormControl } from '../common/wrapped-control';\nimport { ClrDatalistContainer } from './datalist-container';\nimport { NgControl } from '@angular/forms';\nimport { FocusService } from '../common/providers/focus.service';\nimport { DatalistIdService } from './providers/datalist-id.service';\n\n@Directive({\n  selector: '[clrDatalistInput]',\n  host: {\n    '[class.clr-input]': 'true',\n    '[attr.list]': 'listValue',\n  },\n})\nexport class ClrDatalistInput extends WrappedFormControl<ClrDatalistContainer> implements AfterContentInit {\n  constructor(\n    @Optional() private focusService: FocusService,\n    vcr: ViewContainerRef,\n    injector: Injector,\n    @Self()\n    @Optional()\n    control: NgControl,\n    renderer: Renderer2,\n    el: ElementRef,\n    private datalistIdService: DatalistIdService\n  ) {\n    super(vcr, ClrDatalistContainer, injector, control, renderer, el);\n\n    if (!this.focusService) {\n      throw new Error('clrDatalist requires being wrapped in <clr-datalist-container>');\n    }\n  }\n\n  listValue: string;\n\n  ngAfterContentInit() {\n    // Subscriptions is inherited from WrappedFormControl, unsubscribe is handled there\n    this.subscriptions.push(this.datalistIdService.idChange.subscribe(id => (this.listValue = id)));\n  }\n\n  @HostListener('focus')\n  triggerFocus() {\n    if (this.focusService) {\n      this.focusService.focused = true;\n    }\n  }\n\n  @HostListener('blur')\n  triggerValidation() {\n    super.triggerValidation();\n    if (this.focusService) {\n      this.focusService.focused = false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Input, Directive, AfterContentInit, Optional } from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { DatalistIdService } from './providers/datalist-id.service';\n\n@Directive({\n  selector: 'datalist',\n  host: {\n    '[id]': 'datalistId',\n  },\n})\nexport class ClrDatalist implements AfterContentInit {\n  private subscriptions: Subscription[] = [];\n  constructor(@Optional() private datalistIdService: DatalistIdService) {}\n  datalistId: string;\n\n  ngAfterContentInit() {\n    if (!this.datalistIdService) {\n      return;\n    }\n    this.subscriptions.push(this.datalistIdService.idChange.subscribe(id => (this.datalistId = id)));\n  }\n  @Input()\n  set id(idValue) {\n    if (!!idValue && this.datalistIdService) {\n      this.datalistId = idValue;\n      this.datalistIdService.id = idValue;\n    } else if (!!idValue) {\n      this.datalistId = idValue;\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ClrDatalistInput } from './datalist-input';\nimport { ClrInputModule } from '../input/input.module';\nimport { ClrDatalistContainer } from './datalist-container';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDatalist } from './datalist';\n\n@NgModule({\n  imports: [CommonModule, ClrInputModule, ClrIconModule],\n  declarations: [ClrDatalist, ClrDatalistInput, ClrDatalistContainer],\n  exports: [ClrDatalist, ClrDatalistInput, ClrDatalistContainer],\n})\nexport class ClrDatalistModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrCheckboxModule } from './checkbox/checkbox.module';\nimport { ClrCommonFormsModule } from './common/common.module';\nimport { ClrDatepickerModule } from './datepicker/datepicker.module';\nimport { ClrInputModule } from './input/input.module';\nimport { ClrPasswordModule } from './password/password.module';\nimport { ClrRadioModule } from './radio/radio.module';\nimport { ClrSelectModule } from './select/select.module';\nimport { ClrTextareaModule } from './textarea/textarea.module';\nimport { ClrRangeModule } from './range/range.module';\nimport { ClrDatalistModule } from './datalist/datalist.module';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [\n    ClrCommonFormsModule,\n    ClrCheckboxModule,\n    ClrDatepickerModule,\n    ClrInputModule,\n    ClrPasswordModule,\n    ClrRadioModule,\n    ClrSelectModule,\n    ClrTextareaModule,\n    ClrRangeModule,\n    ClrDatalistModule,\n  ],\n})\nexport class ClrFormsModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrLoading } from './loading';\n\nexport const CLR_LOADING_DIRECTIVES: Type<any>[] = [ClrLoading];\n\n@NgModule({ imports: [CommonModule], declarations: [CLR_LOADING_DIRECTIVES], exports: [CLR_LOADING_DIRECTIVES] })\nexport class ClrLoadingModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, HostListener, Input, Output } from '@angular/core';\n\n@Directive({ selector: '[clrOutsideClick]' })\nexport class OutsideClick {\n  constructor(private el: ElementRef) {}\n\n  @Input('clrStrict') strict = false;\n\n  @Output('clrOutsideClick') outsideClick = new EventEmitter<any>(false);\n\n  @HostListener('document:click', ['$event'])\n  documentClick(event: MouseEvent) {\n    const target = event.target; // Get the element in the DOM on which the mouse was clicked\n    const host = this.el.nativeElement; // Get the current actionMenu native HTML element\n\n    if (target === host) {\n      return;\n    }\n    if (!this.strict && host.contains(target)) {\n      return;\n    }\n    this.outsideClick.emit(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\nimport { OutsideClick } from './outside-click';\n\nexport * from './outside-click';\n\nexport const OUSTIDE_CLICK_DIRECTIVES: Type<any>[] = [OutsideClick];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OUSTIDE_CLICK_DIRECTIVES } from './index';\n\n@NgModule({ imports: [CommonModule], declarations: [OUSTIDE_CLICK_DIRECTIVES], exports: [OUSTIDE_CLICK_DIRECTIVES] })\nexport class ClrOutsideClickModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * If we someday want to be able to render the datagrid in a webworker,\n * this is where we would test if we're in headless mode. Right now it's not testing anything, but any access\n * to native DOM elements' methods and properties in the Datagrid happens here.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DomAdapter {\n  userDefinedWidth(element: HTMLElement): number {\n    element.classList.add('datagrid-cell-width-zero');\n    const userDefinedWidth = this.clientRect(element).width;\n    element.classList.remove('datagrid-cell-width-zero');\n    return userDefinedWidth;\n  }\n\n  scrollBarWidth(element: any) {\n    return element.offsetWidth - element.clientWidth;\n  }\n\n  scrollWidth(element: any) {\n    return element.scrollWidth || 0;\n  }\n\n  computedHeight(element: any): number {\n    return parseInt(getComputedStyle(element).getPropertyValue('height'), 10);\n  }\n\n  clientRect(element: any): ClientRect {\n    const elementClientRect = element.getBoundingClientRect();\n    return {\n      top: parseInt(elementClientRect.top, 10),\n      bottom: parseInt(elementClientRect.bottom, 10),\n      left: parseInt(elementClientRect.left, 10),\n      right: parseInt(elementClientRect.right, 10),\n      width: parseInt(elementClientRect.width, 10),\n      height: parseInt(elementClientRect.height, 10),\n    };\n  }\n\n  minWidth(element: any): number {\n    return parseInt(getComputedStyle(element).getPropertyValue('min-width'), 10);\n  }\n\n  focus(element: any): void {\n    element.focus();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DragEventInterface, DragPointPosition } from './interfaces/drag-event.interface';\n\n// This class is used to convert an internal event\n// to an external event to be emitted.\nexport class ClrDragEvent<T> {\n  public dragPosition: DragPointPosition;\n  public group: string | string[];\n  public dragDataTransfer: T;\n  public dropPointPosition: { pageX: number; pageY: number };\n\n  constructor(dragEvent: DragEventInterface<T>) {\n    this.dragPosition = dragEvent.dragPosition;\n    this.group = dragEvent.group;\n    this.dragDataTransfer = dragEvent.dragDataTransfer;\n    this.dropPointPosition = dragEvent.dropPointPosition;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/**\n * Enumeration representing the sorting order of a datagrid column. It is a constant Enum,\n * i.e. each value needs to be treated as a `number`, starting at index 0.\n *\n * @export\n * @enum {number}\n */\nexport enum ClrDatagridSortOrder {\n  UNSORTED = 0,\n  ASC = 1,\n  DESC = -1,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\n\n@Injectable({ providedIn: 'root' })\nexport class DragAndDropEventBusService<T> {\n  private dragStart: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragMove: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragEnd: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private drop: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n\n  get dragStarted(): Observable<DragEventInterface<T>> {\n    return this.dragStart.asObservable();\n  }\n\n  get dragMoved(): Observable<DragEventInterface<T>> {\n    return this.dragMove.asObservable();\n  }\n\n  get dragEnded(): Observable<DragEventInterface<T>> {\n    return this.dragEnd.asObservable();\n  }\n\n  get dropped(): Observable<DragEventInterface<T>> {\n    return this.drop.asObservable();\n  }\n\n  broadcast(event: DragEventInterface<T>): void {\n    switch (event.type) {\n      case DragEventType.DRAG_START:\n        this.dragStart.next(event);\n        break;\n      case DragEventType.DRAG_MOVE:\n        this.dragMove.next(event);\n        break;\n      case DragEventType.DRAG_END:\n        this.dragEnd.next(event);\n        break;\n      case DragEventType.DROP:\n        this.drop.next(event);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, NgZone, Renderer2 } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\nimport { DragAndDropEventBusService } from './drag-and-drop-event-bus.service';\n\n@Injectable()\nexport class DragEventListenerService<T> {\n  private draggableEl: any;\n\n  // contains the starting events such as mousedown and touchstart\n  private listeners: (() => void)[];\n  // contains the nested events that happens after/inside the starting events\n  // such as selectstart, mousemove/touchmove, mouseup/touchend\n  private nestedListeners: (() => void)[];\n\n  private dragStart: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragMove: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n  private dragEnd: Subject<DragEventInterface<T>> = new Subject<DragEventInterface<T>>();\n\n  private hasDragStarted: boolean = false;\n\n  get dragStarted(): Observable<DragEventInterface<T>> {\n    return this.dragStart.asObservable();\n  }\n\n  get dragMoved(): Observable<DragEventInterface<T>> {\n    return this.dragMove.asObservable();\n  }\n\n  get dragEnded(): Observable<DragEventInterface<T>> {\n    return this.dragEnd.asObservable();\n  }\n\n  constructor(private ngZone: NgZone, private renderer: Renderer2, private eventBus: DragAndDropEventBusService<T>) {}\n\n  private initialPosition: { pageX: number; pageY: number };\n\n  // Draggable component sets these properties:\n  public dragDataTransfer?: T;\n  public group?: string | string[];\n\n  // DraggableGhost component sets these properties:\n  public ghostElement?: any;\n  public dropPointPosition?: { pageX: number; pageY: number };\n\n  public attachDragListeners(draggableEl: Node) {\n    this.draggableEl = draggableEl;\n    this.listeners = [\n      this.customDragEvent(this.draggableEl, 'mousedown', 'mousemove', 'mouseup'),\n      this.customDragEvent(this.draggableEl, 'touchstart', 'touchmove', 'touchend'),\n    ];\n  }\n\n  public detachDragListeners() {\n    if (this.listeners) {\n      this.listeners.map(event => event());\n    }\n\n    // In most cases, once users start dragging with mousedown/touchstart events,\n    // they will end dragging at one point with mouseup/touchend.\n    // However, there might be a few cases where mousedown/touchstart events get registered,\n    // but the draggable element gets removed before user ends dragging.\n    // In that case, we need to remove the attached listeners that happened during the mousedown/touchstart events.\n    if (this.nestedListeners) {\n      this.nestedListeners.map(event => event());\n    }\n  }\n\n  private getNativeEventObject(event: MouseEvent | TouchEvent): any {\n    if ((<TouchEvent>event).hasOwnProperty('changedTouches')) {\n      return (<TouchEvent>event).changedTouches[0];\n    } else {\n      return event;\n    }\n  }\n\n  private customDragEvent(element: Node, startOnEvent: string, moveOnEvent: string, endOnEvent: string): () => void {\n    return this.renderer.listen(element, startOnEvent, (startEvent: MouseEvent | TouchEvent) => {\n      // save the initial point to initialPosition\n      // this will be used to calculate how far the draggable has been dragged from its initial position\n      this.initialPosition = {\n        pageX: this.getNativeEventObject(startEvent).pageX,\n        pageY: this.getNativeEventObject(startEvent).pageY,\n      };\n\n      // Initialize nested listeners' property with a new empty array;\n      this.nestedListeners = [];\n\n      // This is needed to disable selection during dragging (especially in EDGE/IE11).\n      this.nestedListeners.push(\n        this.renderer.listen('document', 'selectstart', (selectEvent: Event) => {\n          selectEvent.preventDefault();\n          selectEvent.stopImmediatePropagation();\n        })\n      );\n\n      // Listen to mousemove/touchmove events outside of angular zone.\n      this.nestedListeners.push(\n        this.ngZone.runOutsideAngular(() => {\n          return this.renderer.listen('document', moveOnEvent, (moveEvent: MouseEvent | TouchEvent) => {\n            // Event.stopImmediatePropagation() is needed here to prevent nested draggables from getting dragged\n            // altogether. We shouldn't use Event.stopPropagation() here as we are listening to the events\n            // on the global element level.\n\n            // With Event.stopImmediatePropagation(), it registers the events sent from the inner most draggable\n            // first. Then immediately after that, it stops listening to the same type of events on the same\n            // element. So this will help us to not register the same events that would come from the parent\n            // level draggables eventually.\n\n            moveEvent.stopImmediatePropagation();\n\n            if (!this.hasDragStarted) {\n              this.hasDragStarted = true;\n              // Fire \"dragstart\"\n              this.broadcast(moveEvent, DragEventType.DRAG_START);\n            } else {\n              // Fire \"dragmove\"\n              this.broadcast(moveEvent, DragEventType.DRAG_MOVE);\n            }\n          });\n        })\n      );\n\n      // Listen to mouseup/touchend events.\n      this.nestedListeners.push(\n        this.renderer.listen('document', endOnEvent, (endEvent: MouseEvent | TouchEvent) => {\n          if (this.hasDragStarted) {\n            // Fire \"dragend\" only if dragstart is registered\n            this.hasDragStarted = false;\n            this.broadcast(endEvent, DragEventType.DRAG_END);\n          }\n\n          // We must remove the the nested listeners every time drag completes.\n          if (this.nestedListeners) {\n            this.nestedListeners.map(event => event());\n          }\n        })\n      );\n    });\n  }\n\n  private broadcast(event: MouseEvent | TouchEvent, eventType: DragEventType): void {\n    const dragEvent: DragEventInterface<T> = this.generateDragEvent(event, eventType);\n\n    switch (dragEvent.type) {\n      case DragEventType.DRAG_START:\n        this.dragStart.next(dragEvent);\n        break;\n      case DragEventType.DRAG_MOVE:\n        this.dragMove.next(dragEvent);\n        break;\n      case DragEventType.DRAG_END:\n        this.dragEnd.next(dragEvent);\n        break;\n      default:\n        break;\n    }\n\n    // The following properties are set after they are broadcasted to the DraggableGhost component.\n    dragEvent.ghostElement = this.ghostElement;\n    dragEvent.dropPointPosition = this.dropPointPosition;\n\n    this.eventBus.broadcast(dragEvent);\n  }\n\n  private generateDragEvent(event: MouseEvent | TouchEvent, eventType: DragEventType): DragEventInterface<T> {\n    const nativeEvent: any = this.getNativeEventObject(event);\n\n    return {\n      type: eventType,\n      dragPosition: {\n        pageX: nativeEvent.pageX,\n        pageY: nativeEvent.pageY,\n        moveX: nativeEvent.pageX - this.initialPosition.pageX,\n        moveY: nativeEvent.pageY - this.initialPosition.pageY,\n      },\n      group: this.group,\n      dragDataTransfer: this.dragDataTransfer,\n      ghostElement: this.ghostElement,\n    };\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { DragEventInterface } from '../interfaces/drag-event.interface';\n\n// This service is used to capture the state of clrDraggable element\n// at a certain event and passes it to clrDraggableGhost component.\n@Injectable()\nexport class DraggableSnapshotService<T> {\n  constructor(private domAdapter: DomAdapter) {}\n\n  private draggableElClientRect: ClientRect;\n  private snapshotDragEvent: DragEventInterface<T>;\n\n  public capture(el: Node, event: DragEventInterface<T>): void {\n    this.draggableElClientRect = this.domAdapter.clientRect(el);\n    this.snapshotDragEvent = event;\n  }\n  public discard(): void {\n    delete this.draggableElClientRect;\n    delete this.snapshotDragEvent;\n  }\n  get hasDraggableState(): boolean {\n    return !!this.snapshotDragEvent && !!this.draggableElClientRect;\n  }\n  get clientRect(): ClientRect {\n    return this.draggableElClientRect;\n  }\n  get dragEvent(): DragEventInterface<T> {\n    return this.snapshotDragEvent;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { Component, ElementRef, HostBinding, NgZone, OnDestroy, Optional, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DragEventInterface } from './interfaces/drag-event.interface';\nimport { DragEventListenerService } from './providers/drag-event-listener.service';\nimport { DraggableSnapshotService } from './providers/draggable-snapshot.service';\n\ntype PagePosition = {\n  pageX: number;\n  pageY: number;\n};\ntype OffsetPosition = {\n  top: number;\n  left: number;\n};\n\n@Component({\n  selector: 'clr-draggable-ghost',\n  template: `<ng-content></ng-content>`,\n  animations: [\n    trigger('leaveAnimation', [\n      transition(':leave', [\n        style({ left: '*', top: '*' }),\n        animate('0.2s ease-in-out', style({ top: '{{top}}', left: '{{left}}' })),\n      ]),\n    ]),\n  ],\n})\nexport class ClrDraggableGhost<T> implements OnDestroy {\n  private draggableGhostEl: any;\n\n  private subscriptions: Subscription[] = [];\n\n  @HostBinding('@leaveAnimation') leaveAnimConfig = { value: 0, params: { top: '0px', left: '0px' } };\n\n  constructor(\n    private el: ElementRef,\n    @Optional() private dragEventListener: DragEventListenerService<T>,\n    @Optional() private draggableSnapshot: DraggableSnapshotService<T>,\n    private renderer: Renderer2,\n    private ngZone: NgZone\n  ) {\n    if (!this.dragEventListener || !this.draggableSnapshot) {\n      throw new Error('The clr-draggable-ghost component can only be used inside of a clrDraggable directive.');\n    }\n\n    this.draggableGhostEl = this.el.nativeElement;\n\n    // Need to use Renderer2 as it runs outside of NgZone\n    this.renderer.addClass(this.draggableGhostEl, 'draggable-ghost');\n\n    // Register the ghost element in DragEventListener to pass in a ClrDragEvent.\n    this.dragEventListener.ghostElement = this.draggableGhostEl;\n\n    // Default ghost size gets the size of ClrDraggable element.\n    this.setDefaultGhostSize(this.draggableGhostEl);\n\n    const offset: OffsetPosition = {\n      top: this.draggableSnapshot.hasDraggableState\n        ? this.draggableSnapshot.dragEvent.dragPosition.pageY - this.draggableSnapshot.clientRect.top\n        : 0,\n      left: this.draggableSnapshot.hasDraggableState\n        ? this.draggableSnapshot.dragEvent.dragPosition.pageX - this.draggableSnapshot.clientRect.left\n        : 0,\n    };\n\n    let isAnimationConfigured: boolean = false;\n\n    this.subscriptions.push(\n      this.dragEventListener.dragMoved.subscribe((event: DragEventInterface<T>) => {\n        // On the first drag move event, we configure the animation as it's dependent on the first drag event.\n        if (!isAnimationConfigured) {\n          if (this.draggableSnapshot.hasDraggableState) {\n            this.animateToOnLeave(\n              `${this.draggableSnapshot.clientRect.top}px`,\n              `${this.draggableSnapshot.clientRect.left}px`\n            );\n          } else {\n            this.animateToOnLeave(`${event.dragPosition.pageY}px`, `${event.dragPosition.pageX}px`);\n          }\n          isAnimationConfigured = true;\n        }\n\n        // Position the draggable ghost.\n        const topLeftPosition: PagePosition = this.findTopLeftPosition(event.dragPosition, offset);\n        this.setPositionStyle(this.draggableGhostEl, topLeftPosition.pageX, topLeftPosition.pageY);\n        this.dragEventListener.dropPointPosition = this.findDropPointPosition(topLeftPosition);\n      })\n    );\n  }\n\n  private setDefaultGhostSize(el: Node): void {\n    if (this.draggableSnapshot.hasDraggableState) {\n      this.setSizeStyle(el, this.draggableSnapshot.clientRect.width, this.draggableSnapshot.clientRect.height);\n    }\n  }\n\n  private animateToOnLeave(top: string, left: string): void {\n    this.ngZone.run(() => {\n      this.leaveAnimConfig = { value: 0, params: { top: top, left: left } };\n    });\n  }\n\n  private findTopLeftPosition(dragPosition: PagePosition, offset: OffsetPosition): PagePosition {\n    return { pageX: dragPosition.pageX - offset.left, pageY: dragPosition.pageY - offset.top };\n  }\n\n  private findDropPointPosition(topLeftPosition: PagePosition): PagePosition {\n    if (this.draggableSnapshot.hasDraggableState) {\n      return {\n        pageX: topLeftPosition.pageX + this.draggableSnapshot.clientRect.width / 2,\n        pageY: topLeftPosition.pageY + this.draggableSnapshot.clientRect.height / 2,\n      };\n    } else {\n      return topLeftPosition;\n    }\n  }\n\n  private setSizeStyle(el: Node, width: number, height: number): void {\n    this.renderer.setStyle(el, 'width', `${width}px`);\n    this.renderer.setStyle(el, 'height', `${height}px`);\n  }\n\n  private setPositionStyle(el: Node, left: number, top: number): void {\n    this.renderer.setStyle(el, 'left', `${left}px`);\n    this.renderer.setStyle(el, 'top', `${top}px`);\n    this.renderer.setStyle(el, 'visibility', 'visible');\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, OnDestroy, Optional, SkipSelf, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DragEventInterface } from './interfaces/drag-event.interface';\nimport { DragEventListenerService } from './providers/drag-event-listener.service';\n\n// This structural directive will be used mainly together with `clr-draggable-ghost` directive inside of clrDraggable\n// directive. The directive is responsible for instantiating `clr-draggable-ghost` directive only during dragging so\n// that Angular Change Detection is prevented from running if a component or directive is placed inside of the\n// `clr-draggable-ghost` directive.\n\n@Directive({ selector: '[clrIfDragged]' })\nexport class ClrIfDragged<T> implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  constructor(\n    private template: TemplateRef<any>,\n    @Optional()\n    @SkipSelf()\n    private container: ViewContainerRef,\n    @Optional() private dragEventListener: DragEventListenerService<T>\n  ) {\n    if (!this.dragEventListener || !this.container) {\n      throw new Error('The *clrIfDragged directive can only be used inside of a clrDraggable directive.');\n    }\n\n    this.subscriptions.push(\n      this.dragEventListener.dragStarted.subscribe((event: DragEventInterface<T>) => {\n        this.container.createEmbeddedView(this.template);\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragEnded.subscribe((event: DragEventInterface<T>) => {\n        this.container.clear();\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Renderer2 } from '@angular/core';\n\nimport { DragEventListenerService } from './drag-event-listener.service';\n\n// This provider registers the drag handle element.\n// When it registers a element as a drag handle, it attaches that element to the listeners from ClrDragEventListener.\n// Also, it adds the \"drag-handle\" css class to the registered element through Renderer.\n@Injectable()\nexport class DragHandleRegistrarService<T> {\n  private _customHandleEl: any;\n  private _defaultHandleEl: any;\n\n  get defaultHandleEl() {\n    return this._defaultHandleEl;\n  }\n\n  set defaultHandleEl(el: Node) {\n    this._defaultHandleEl = el; // defaultHandleEl will be usually the clrDraggable element.\n\n    // If the customHandleEl has been registered,\n    // don't make the defaultHandleEl the drag handle yet until the customHandleEl is unregistered.\n    if (!this._customHandleEl) {\n      this.makeElementHandle(this._defaultHandleEl);\n    }\n  }\n\n  constructor(private dragEventListener: DragEventListenerService<T>, private renderer: Renderer2) {}\n\n  private makeElementHandle(el: Node) {\n    if (this._defaultHandleEl && this._defaultHandleEl !== el) {\n      // Before making an element the custom handle element,\n      // we should remove the existing drag-handle class from the draggable element.\n      this.renderer.removeClass(this._defaultHandleEl, 'drag-handle');\n    }\n    this.dragEventListener.attachDragListeners(el);\n    this.renderer.addClass(el, 'drag-handle');\n  }\n\n  get customHandleEl() {\n    return this._customHandleEl;\n  }\n\n  public registerCustomHandle(el: Node) {\n    this.dragEventListener.detachDragListeners(); // removes the existing listeners\n    this._customHandleEl = el;\n    this.makeElementHandle(this._customHandleEl);\n  }\n\n  public unregisterCustomHandle() {\n    this.dragEventListener.detachDragListeners(); // removes the existing listeners\n    this.renderer.removeClass(this._customHandleEl, 'drag-handle');\n    delete this._customHandleEl;\n    // if default handle is set, make that handle\n    if (this._defaultHandleEl) {\n      this.makeElementHandle(this._defaultHandleEl);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Renderer2 } from '@angular/core';\n\n// This service class adds and removes the \"in-drag\" class to the document body element\n// through its public enter() and exit() methods.\n@Injectable()\nexport class GlobalDragModeService {\n  constructor(private renderer: Renderer2) {}\n\n  enter(): void {\n    this.renderer.addClass(document.body, 'in-drag');\n  }\n\n  exit(): void {\n    this.renderer.removeClass(document.body, 'in-drag');\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  OnDestroy,\n  Output,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../drag-event';\nimport { ClrDraggableGhost } from '../draggable-ghost';\nimport { ClrIfDragged } from '../if-dragged';\nimport { DragEventInterface } from '../interfaces/drag-event.interface';\nimport { DragEventListenerService } from '../providers/drag-event-listener.service';\nimport { DragHandleRegistrarService } from '../providers/drag-handle-registrar.service';\nimport { DraggableSnapshotService } from '../providers/draggable-snapshot.service';\nimport { GlobalDragModeService } from '../providers/global-drag-mode.service';\n\n@Directive({\n  selector: '[clrDraggable]',\n  providers: [\n    DragEventListenerService,\n    DragHandleRegistrarService,\n    DraggableSnapshotService,\n    GlobalDragModeService,\n    DomAdapter,\n  ],\n  host: { '[class.draggable]': 'true', '[class.being-dragged]': 'dragOn' },\n})\nexport class ClrDraggable<T> implements AfterContentInit, OnDestroy {\n  private draggableEl: any;\n  private subscriptions: Subscription[] = [];\n  private componentFactory: ComponentFactory<ClrDraggableGhost<T>>;\n  public dragOn: boolean = false;\n\n  constructor(\n    private el: ElementRef,\n    private dragEventListener: DragEventListenerService<T>,\n    private dragHandleRegistrar: DragHandleRegistrarService<T>,\n    private viewContainerRef: ViewContainerRef,\n    private cfr: ComponentFactoryResolver,\n    private injector: Injector,\n    private draggableSnapshot: DraggableSnapshotService<T>,\n    private globalDragMode: GlobalDragModeService\n  ) {\n    this.draggableEl = this.el.nativeElement;\n    this.componentFactory = this.cfr.resolveComponentFactory<ClrDraggableGhost<T>>(ClrDraggableGhost);\n  }\n\n  @ContentChild(ClrIfDragged) customGhost: ClrIfDragged<T>;\n\n  @Input('clrDraggable')\n  set dataTransfer(value: T) {\n    this.dragEventListener.dragDataTransfer = value;\n  }\n\n  @Input('clrGroup')\n  set group(value: string | string[]) {\n    this.dragEventListener.group = value;\n  }\n\n  private createDefaultGhost(event: DragEventInterface<T>) {\n    this.draggableSnapshot.capture(this.draggableEl, event);\n    // NOTE: The default ghost element will appear\n    // next to the clrDraggable in the DOM as a sibling element.\n    this.viewContainerRef.createComponent(this.componentFactory, 0, this.injector, [\n      [this.draggableEl.cloneNode(true)],\n    ]);\n  }\n\n  private destroyDefaultGhost() {\n    this.viewContainerRef.clear();\n    this.draggableSnapshot.discard();\n  }\n\n  @Output('clrDragStart') dragStartEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragMove') dragMoveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnd') dragEndEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n\n  ngAfterContentInit() {\n    this.dragHandleRegistrar.defaultHandleEl = this.draggableEl;\n\n    this.subscriptions.push(\n      this.dragEventListener.dragStarted.subscribe((event: DragEventInterface<T>) => {\n        this.globalDragMode.enter();\n        this.dragOn = true;\n        if (!this.customGhost) {\n          this.createDefaultGhost(event);\n        }\n\n        this.dragStartEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragMoved.subscribe((event: DragEventInterface<T>) => {\n        this.dragMoveEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n    this.subscriptions.push(\n      this.dragEventListener.dragEnded.subscribe((event: DragEventInterface<T>) => {\n        this.globalDragMode.exit();\n        this.dragOn = false;\n        if (!this.customGhost) {\n          this.destroyDefaultGhost();\n        }\n        this.dragEndEmitter.emit(new ClrDragEvent(event));\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    this.dragEventListener.detachDragListeners();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, Renderer2 } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../drag-event';\nimport { DragEventInterface, DragEventType } from '../interfaces/drag-event.interface';\nimport { ClrDropToleranceInterface } from '../interfaces/drop-tolerance.interface';\nimport { DragAndDropEventBusService } from '../providers/drag-and-drop-event-bus.service';\n\n@Directive({\n  selector: '[clrDroppable]',\n  providers: [DomAdapter],\n  host: { '[class.droppable]': 'true', '[class.draggable-match]': 'isDraggableMatch' },\n})\nexport class ClrDroppable<T> implements OnInit, OnDestroy {\n  private dragStartSubscription: Subscription;\n  private dragMoveSubscription: Subscription;\n  private dragEndSubscription: Subscription;\n\n  private droppableEl: any;\n  private clientRect: ClientRect;\n\n  constructor(\n    private el: ElementRef,\n    private eventBus: DragAndDropEventBusService<T>,\n    private domAdapter: DomAdapter,\n    private renderer: Renderer2\n  ) {\n    this.droppableEl = this.el.nativeElement;\n  }\n\n  isDraggableMatch: boolean = false;\n  private _isDraggableOver: boolean = false;\n\n  set isDraggableOver(value: boolean) {\n    // We need to add/remove this draggable-over class via Renderer2\n    // because isDraggableOver is set outside of NgZone.\n    if (value) {\n      this.renderer.addClass(this.droppableEl, 'draggable-over');\n    } else {\n      this.renderer.removeClass(this.droppableEl, 'draggable-over');\n    }\n    this._isDraggableOver = value;\n  }\n\n  private _group: string | string[];\n\n  @Input('clrGroup')\n  set group(value: string | string[]) {\n    this._group = value;\n  }\n\n  private _dropTolerance: ClrDropToleranceInterface = { top: 0, right: 0, bottom: 0, left: 0 };\n\n  private dropToleranceGenerator(top = 0, right = top, bottom = top, left = right): ClrDropToleranceInterface {\n    return { top, right, bottom, left };\n  }\n\n  @Input('clrDropTolerance')\n  set dropTolerance(value: number | string | ClrDropToleranceInterface) {\n    // If user provides an object here and wants to manipulate/update properties individually,\n    // the object must be immutable as we generate new object based user's given object.\n    if (typeof value === 'number') {\n      this._dropTolerance = this.dropToleranceGenerator(value);\n    } else if (typeof value === 'string') {\n      const toleranceValues = value\n        .trim()\n        .split(/\\s+/)\n        .map(tolerance => parseInt(tolerance, 10));\n      this._dropTolerance = this.dropToleranceGenerator(...toleranceValues);\n    } else if (value) {\n      // The value could be passed in as {left: 20, top: 30 }\n      // In this case, the rest of the direction properties should be 0.\n      // That's why we initialize properties with 0 first, then override with user's given value.\n      this._dropTolerance = { ...this.dropToleranceGenerator(0), ...value };\n    }\n  }\n\n  @Output('clrDragStart') dragStartEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragMove') dragMoveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnd') dragEndEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragLeave') dragLeaveEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDragEnter') dragEnterEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n  @Output('clrDrop') dropEmitter: EventEmitter<ClrDragEvent<T>> = new EventEmitter();\n\n  private unsubscribeFrom(subscription: Subscription): void {\n    if (subscription) {\n      subscription.unsubscribe();\n    }\n  }\n\n  private checkGroupMatch(draggableGroup: string | string[]): boolean {\n    // Both Draggable and Droppable have clrGroup input.\n    // The clrGroup input can be both a string key or array of string keys in Draggable and Droppable.\n\n    // It's not match if Draggable has no defined value assigned to clrGroup, but Droppable has a defined clrGroup.\n    if (!draggableGroup && this._group) {\n      return false;\n    }\n    // The same is true the other way round.\n    if (!this._group && draggableGroup) {\n      return false;\n    }\n\n    // It's match if both Draggable and Droppable have no assigned value for clrGroup.\n    if (!this._group && !draggableGroup) {\n      return true;\n    }\n\n    // It's match if both Draggable and Droppable have simple string keys that are matching.\n    // It's match if Draggable's simple clrGroup key is matching with one of the clrGroup keys of Droppable. The\n    // same is true the other way round.\n    // it's match if one of the clrGroup keys of Droppable is matching with one of the clrGroup keys of Draggable.\n    if (typeof draggableGroup === 'string') {\n      if (typeof this._group === 'string') {\n        return this._group === draggableGroup;\n      } else {\n        return this._group.indexOf(draggableGroup) > -1;\n      }\n    } else {\n      if (typeof this._group === 'string') {\n        return draggableGroup.indexOf(this._group) > -1;\n      } else {\n        return (this._group as string[]).some(groupKey => draggableGroup.indexOf(groupKey) > -1);\n      }\n    }\n  }\n\n  private isInDropArea(point: { pageX: number; pageY: number }): boolean {\n    if (!point) {\n      return false;\n    }\n\n    if (!this.clientRect) {\n      this.clientRect = this.domAdapter.clientRect(this.droppableEl);\n    }\n\n    if (\n      point.pageX >= this.clientRect.left - this._dropTolerance.left &&\n      point.pageX <= this.clientRect.right + this._dropTolerance.right &&\n      point.pageY >= this.clientRect.top - this._dropTolerance.top &&\n      point.pageY <= this.clientRect.bottom + this._dropTolerance.bottom\n    ) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  private onDragStart(dragStartEvent: DragEventInterface<T>): void {\n    // Check draggable and droppable have a matching group key.\n    this.isDraggableMatch = this.checkGroupMatch(dragStartEvent.group);\n\n    // Subscribe to dragMoved and dragEnded only if draggable and droppable have a matching group key.\n    if (this.isDraggableMatch) {\n      this.dragStartEmitter.emit(new ClrDragEvent(dragStartEvent));\n      this.dragMoveSubscription = this.eventBus.dragMoved.subscribe((dragMoveEvent: DragEventInterface<T>) => {\n        this.onDragMove(dragMoveEvent);\n      });\n      this.dragEndSubscription = this.eventBus.dragEnded.subscribe((dragEndEvent: DragEventInterface<T>) => {\n        this.onDragEnd(dragEndEvent);\n      });\n    }\n  }\n\n  private onDragMove(dragMoveEvent: DragEventInterface<T>): void {\n    const isInDropArea = this.isInDropArea(dragMoveEvent.dropPointPosition);\n    if (!this._isDraggableOver && isInDropArea) {\n      this.isDraggableOver = true;\n      const dragEnterEvent = { ...dragMoveEvent, type: DragEventType.DRAG_ENTER };\n      this.eventBus.broadcast(dragEnterEvent);\n      this.dragEnterEmitter.emit(new ClrDragEvent(dragEnterEvent));\n    } else if (this._isDraggableOver && !isInDropArea) {\n      this.isDraggableOver = false;\n      const dragLeaveEvent = { ...dragMoveEvent, type: DragEventType.DRAG_LEAVE };\n      this.eventBus.broadcast(dragLeaveEvent);\n      this.dragLeaveEmitter.emit(new ClrDragEvent(dragLeaveEvent));\n    }\n\n    this.dragMoveEmitter.emit(new ClrDragEvent(dragMoveEvent));\n  }\n\n  private onDragEnd(dragEndEvent: DragEventInterface<T>): void {\n    if (this._isDraggableOver) {\n      if (dragEndEvent.ghostElement) {\n        // By this point, the draggable ghost component is destroyed,\n        // but the element would be active until its animation completes.\n        // As such, once the ghost is dropped over, we will give it \"dropped\" class.\n\n        // This process cannot be done in the ghost component\n        // because any subscription to the drop event is ineffective or invalid\n        // as the component had been already destroyed.\n        this.renderer.addClass(dragEndEvent.ghostElement, 'dropped');\n      }\n\n      const dropEvent = { ...dragEndEvent, type: DragEventType.DROP };\n      this.eventBus.broadcast(dropEvent);\n      this.dropEmitter.emit(new ClrDragEvent(dropEvent));\n      this.isDraggableOver = false;\n    }\n    this.dragEndEmitter.emit(new ClrDragEvent(dragEndEvent));\n    this.unsubscribeFrom(this.dragMoveSubscription);\n    this.unsubscribeFrom(this.dragEndSubscription);\n    this.isDraggableMatch = false;\n    delete this.clientRect;\n  }\n\n  ngOnInit() {\n    this.dragStartSubscription = this.eventBus.dragStarted.subscribe((dragStartEvent: DragEventInterface<T>) => {\n      this.onDragStart(dragStartEvent);\n    });\n  }\n\n  ngOnDestroy() {\n    this.unsubscribeFrom(this.dragStartSubscription);\n    this.unsubscribeFrom(this.dragMoveSubscription);\n    this.unsubscribeFrom(this.dragEndSubscription);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, OnDestroy, Optional } from '@angular/core';\nimport { DragHandleRegistrarService } from './providers/drag-handle-registrar.service';\n\n@Directive({ selector: '[clrDragHandle]', host: { '[class.drag-handle]': 'true' } })\nexport class ClrDragHandle<T> implements OnDestroy {\n  constructor(private el: ElementRef, @Optional() private dragHandleRegistrar: DragHandleRegistrarService<T>) {\n    if (!this.dragHandleRegistrar) {\n      // ClrDragHandleRegistrar is provided in ClrDraggable so we expect it to be present here\n      // as clrDragHandle is required to be used only inside of a clrDraggable directive.\n      throw new Error('The clrDragHandle directive can only be used inside of a clrDraggable directive.');\n    }\n    this.dragHandleRegistrar.registerCustomHandle(this.el.nativeElement);\n  }\n\n  ngOnDestroy() {\n    this.dragHandleRegistrar.unregisterCustomHandle();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrDraggable } from './draggable/draggable';\nimport { ClrDroppable } from './droppable/droppable';\nimport { ClrIfDragged } from './if-dragged';\nimport { ClrDragHandle } from './drag-handle';\nimport { ClrDraggableGhost } from './draggable-ghost';\n\nexport const CLR_DRAG_AND_DROP_DIRECTIVES: Type<any>[] = [\n  ClrDraggable,\n  ClrDroppable,\n  ClrIfDragged,\n  ClrDragHandle,\n  ClrDraggableGhost,\n];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_DRAG_AND_DROP_DIRECTIVES],\n  entryComponents: [ClrDraggableGhost],\n  exports: [CLR_DRAG_AND_DROP_DIRECTIVES],\n})\nexport class ClrDragAndDropModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ElementRef, HostBinding, HostListener, Input } from '@angular/core';\n\nimport { animate, style, transition, trigger } from '@angular/animations';\nimport { DomAdapter } from '../../dom-adapter/dom-adapter';\n\n@Component({\n  selector: 'clr-expandable-animation',\n  template: `\n    <ng-content></ng-content>\n  `,\n  styles: [\n    `\n    :host {\n      display: block;\n    }\n  `,\n  ],\n  animations: [\n    trigger('expandAnimation', [\n      transition('true <=> false', [\n        style({ height: '{{startHeight}}px', overflow: 'hidden' }),\n        animate('0.2s ease-in-out', style({ height: '*' })),\n      ]),\n    ]),\n  ],\n  providers: [DomAdapter],\n})\nexport class ClrExpandableAnimation {\n  @Input() clrExpandTrigger: any;\n\n  startHeight: number = 0;\n\n  constructor(private element: ElementRef, private domAdapter: DomAdapter) {}\n\n  @HostBinding('@expandAnimation')\n  get expandAnimation() {\n    return { value: this.clrExpandTrigger, params: { startHeight: this.startHeight } };\n  }\n\n  @HostListener('@expandAnimation.done')\n  animationDone() {\n    // A \"safe\" auto-update of the height ensuring basic OOTB user experience .\n    // Prone to small jumps in initial animation height if data was changed in the meantime, window was resized, etc.\n    // For optimal behavior call manually updateStartHeight() from the parent component before initiating the update.\n    this.updateStartHeight();\n  }\n\n  updateStartHeight() {\n    this.startHeight = this.domAdapter.computedHeight(this.element.nativeElement) || 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\n\nimport { ClrExpandableAnimation } from './expandable-animation';\n\nexport * from './expandable-animation';\n\nexport const EXPANDABLE_ANIMATION_DIRECTIVES: Type<any>[] = [ClrExpandableAnimation];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { EXPANDABLE_ANIMATION_DIRECTIVES } from './index';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [EXPANDABLE_ANIMATION_DIRECTIVES],\n  exports: [EXPANDABLE_ANIMATION_DIRECTIVES],\n})\nexport class ClrExpandableAnimationModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input, HostBinding, ElementRef, AfterViewInit } from '@angular/core';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\nimport { ClrAriaLiveService, ClrAriaLivePoliteness } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  selector: 'clr-spinner',\n  providers: [ClrAriaLiveService],\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[attr.aria-busy]': 'true',\n  },\n})\nexport class ClrSpinner implements AfterViewInit {\n  constructor(private el: ElementRef, private ariaLiveService: ClrAriaLiveService) {}\n\n  ngAfterViewInit() {\n    this.ariaLiveService.announce(this.el.nativeElement, this.ariaLive);\n  }\n\n  /**\n   * Default class for all spinners. This class is always true\n   */\n  @HostBinding('class.spinner')\n  get spinnerClass() {\n    return true;\n  }\n\n  // Style\n  private _inline: boolean;\n  @HostBinding('class.spinner-inline')\n  get inlineClass() {\n    return this._inline;\n  }\n\n  @Input('clrInline')\n  set clrInline(value: boolean | string) {\n    this._inline = isBooleanAttributeSet(value);\n  }\n\n  private _inverse: boolean;\n  @HostBinding('class.spinner-inverse')\n  get inverseClass() {\n    return this._inverse;\n  }\n\n  @Input('clrInverse')\n  set clrInverse(value: boolean | string) {\n    this._inverse = isBooleanAttributeSet(value);\n  }\n\n  // Size\n  /**\n   * By default all spinners are Large. (spinner-lg)\n   * To change the size you need to use set clrSmall or clrMedium to TRUE/\n   */\n\n  /**\n   * Small\n   */\n  private _small: boolean;\n  @HostBinding('class.spinner-sm')\n  get smallClass() {\n    return this._small;\n  }\n\n  @Input('clrSmall')\n  set clrSmall(value: boolean | string) {\n    this._small = isBooleanAttributeSet(value);\n  }\n\n  /**\n   * When clrSmall & clrMedium are set both to true.\n   * The CSS with high priority will be small - so medium size will be ignored.\n   *\n   * For this reason if clrSmall is set we won't add clrMedium class.\n   *\n   * NOTE: This is dictated by the CSS rules.\n   * DON'T USE clrSmall & clrMedium to toggle classes. This could change without notice.\n   *\n   * Also there is no logical need to have both of them set to TRUE or FALSE.\n   */\n  private _medium: boolean;\n  @HostBinding('class.spinner-md')\n  get mediumClass() {\n    if (this._small) {\n      return false;\n    }\n    return this._medium;\n  }\n\n  @Input('clrMedium')\n  set clrMedium(value: boolean | string) {\n    this._medium = isBooleanAttributeSet(value);\n  }\n\n  // Aria Live\n\n  /**\n   * By default aria-live will be set to `polite` .\n   * To change is it you need to set clrAssertive or clrOff to TRUE\n   *\n   * There is priority:\n   *   Default: polite\n   *   Asertive\n   *   Off\n   *\n   * In case when for some reason you have clrAssertive=TRUE and clrOff=TRUE,\n   * we gonna set `assertive` as value of aria-live.\n   *\n   */\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrAssertive') assertive: boolean;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrOff') off: boolean;\n  get ariaLive(): ClrAriaLivePoliteness {\n    if (isBooleanAttributeSet(this.assertive)) {\n      return ClrAriaLivePoliteness.assertive;\n    }\n    if (isBooleanAttributeSet(this.off)) {\n      return ClrAriaLivePoliteness.off;\n    }\n    return ClrAriaLivePoliteness.polite;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrSpinner } from './spinner';\n\nexport const CLR_SPINNER_DIRECTIVES: Type<any>[] = [ClrSpinner];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_SPINNER_DIRECTIVES],\n  exports: [CLR_SPINNER_DIRECTIVES],\n})\nexport class ClrSpinnerModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\n\nexport const FOCUS_ON_VIEW_INIT = new InjectionToken<boolean>('FOCUS_ON_VIEW_INIT');\n\n// This provider holds the default value for clrFocusOnViewInit directive's isEnabled property.\n// So users can interject this provider and set their own value for this provider.\nexport const FOCUS_ON_VIEW_INIT_PROVIDER = {\n  provide: FOCUS_ON_VIEW_INIT,\n  useValue: true,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Inject,\n  Input,\n  PLATFORM_ID,\n  Renderer2,\n} from '@angular/core';\nimport { FOCUS_ON_VIEW_INIT } from './focus-on-view-init.provider';\n\n/*  This directive is for guiding the document focus to the newly added content when its view is initialized \n    so that assistive technologies can read its content. */\n@Directive({\n  selector: '[clrFocusOnViewInit]',\n})\nexport class ClrFocusOnViewInit implements AfterViewInit {\n  constructor(\n    private el: ElementRef,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(FOCUS_ON_VIEW_INIT) private focusOnViewInit: boolean,\n    @Inject(DOCUMENT) document: any,\n    private renderer: Renderer2\n  ) {\n    this._isEnabled = this.focusOnViewInit;\n\n    // Angular compiler doesn't understand the type Document\n    // when working out the metadata for injectable parameters,\n    // even though it understands the injection token DOCUMENT\n    // https://github.com/angular/angular/issues/20351\n    this.document = document;\n  }\n\n  private document: Document;\n  private directFocus = true; // true if the element gets focused without need to set tabindex;\n\n  @HostListener('focusout')\n  onFocusout() {\n    if (!this.directFocus) {\n      // manually set attributes and styles should be removed\n      this.renderer.removeAttribute(this.el.nativeElement, 'tabindex');\n      this.renderer.setStyle(this.el.nativeElement, 'outline', null);\n    }\n  }\n\n  private _isEnabled: boolean;\n  @Input('clrFocusOnViewInit')\n  set isEnabled(value: boolean) {\n    if (this.focusOnViewInit && typeof value === 'boolean') {\n      this._isEnabled = value;\n    }\n  }\n\n  ngAfterViewInit() {\n    this.focus();\n  }\n\n  private focus() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    if (!this._isEnabled) {\n      return;\n    }\n    if (this.document && this.document.activeElement !== this.el.nativeElement) {\n      this.el.nativeElement.focus();\n      if (this.document.activeElement !== this.el.nativeElement) {\n        // if it's not directly focused now, it means it was a non-interactive element\n        // so we need to give it a tabindex.\n        this.directFocus = false;\n        this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '-1');\n        this.renderer.setStyle(this.el.nativeElement, 'outline', 'none');\n        this.el.nativeElement.focus();\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrFocusOnViewInit } from './focus-on-view-init';\nimport { FOCUS_ON_VIEW_INIT_PROVIDER } from './focus-on-view-init.provider';\n\nexport const FOCUS_ON_VIEW_INIT_DIRECTIVES: Type<any>[] = [ClrFocusOnViewInit];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [FOCUS_ON_VIEW_INIT_DIRECTIVES],\n  providers: [FOCUS_ON_VIEW_INIT_PROVIDER],\n  exports: [FOCUS_ON_VIEW_INIT_DIRECTIVES],\n})\nexport class ClrFocusOnViewInitModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport abstract class CustomFilter {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/*\n * This provider implements some form of synchronous debouncing through a lock pattern\n * to avoid emitting multiple state changes for a single user action.\n */\n@Injectable()\nexport class StateDebouncer {\n  /**\n   * The Observable that lets other classes subscribe to global state changes\n   */\n  private _change = new Subject<void>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<void> {\n    return this._change.asObservable();\n  }\n\n  /*\n     * This is the lock, to only emit once all the changes have finished processing\n     */\n  private nbChanges = 0;\n\n  public changeStart() {\n    this.nbChanges++;\n  }\n\n  public changeDone() {\n    if (--this.nbChanges === 0) {\n      this._change.next();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class Page {\n  constructor(private stateDebouncer: StateDebouncer) {}\n\n  private preventEmit = false;\n  public activated = false;\n\n  /**\n   * Page size, a value of 0 means no pagination\n   */\n  private _size = 0;\n  public get size(): number {\n    return this._size;\n  }\n  public set size(size: number) {\n    const oldSize = this._size;\n    if (size !== oldSize) {\n      if (!this.preventEmit) {\n        this.stateDebouncer.changeStart();\n      }\n      this._size = size;\n      if (size === 0) {\n        this._current = 1;\n      } else {\n        // Yeap. That's the formula to keep the first item from the old page still\n        // displayed in the new one.\n        this._current = Math.floor(oldSize / size * (this._current - 1)) + 1;\n      }\n      // We always emit an event even if the current page index didn't change, because\n      // the size changing means the items inside the page are different\n      if (!this.preventEmit) {\n        this._change.next(this._current);\n        this._sizeChange.next(this._size);\n        this.stateDebouncer.changeDone();\n      }\n    }\n    this.preventEmit = false;\n  }\n\n  /**\n   * Total items (needed to guess the last page)\n   */\n  private _totalItems?: number;\n  public get totalItems(): number {\n    return this._totalItems || 0; // remains 0 if not set to avoid breaking change\n  }\n  public set totalItems(total: number) {\n    this._totalItems = total;\n    // If we have less items than before, we might need to change the current page\n    if (this.current > this.last) {\n      this.current = this.last;\n    }\n  }\n\n  /**\n   * Last page\n   */\n  private _last: number;\n  public get last(): number {\n    if (this._last) {\n      return this._last;\n    }\n    // If the last page isn't known, we compute it from the last item's index\n    if (this.size > 0 && this.totalItems) {\n      return Math.ceil(this.totalItems / this.size);\n    }\n    return 1;\n  }\n  public set last(page: number) {\n    this._last = page;\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to page changes\n   */\n  private _change = new Subject<number>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<number> {\n    return this._change.asObservable();\n  }\n\n  private _sizeChange = new Subject<number>();\n\n  public get sizeChange(): Observable<number> {\n    return this._sizeChange.asObservable();\n  }\n\n  /**\n   * Current page\n   */\n  private _current = 1;\n  public get current(): number {\n    return this._current;\n  }\n  public set current(page: number) {\n    if (page !== this._current) {\n      this.stateDebouncer.changeStart();\n      this._current = page;\n      this._change.next(page);\n      this.stateDebouncer.changeDone();\n    }\n  }\n\n  /**\n   * Moves to the previous page if it exists\n   */\n  public previous() {\n    if (this.current > 1) {\n      this.current--;\n    }\n  }\n\n  /**\n   * Moves to the next page if it exists\n   */\n  public next() {\n    if (this.current < this.last) {\n      this.current++;\n    }\n  }\n\n  /**\n   * Index of the first item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get firstItem(): number {\n    if (this._totalItems === 0) {\n      return -1;\n    }\n\n    if (this.size === 0) {\n      return 0;\n    }\n    return (this.current - 1) * this.size;\n  }\n\n  /**\n   * Index of the last item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get lastItem(): number {\n    if (this._totalItems === 0) {\n      return -1;\n    }\n\n    if (this.size === 0) {\n      return this.totalItems - 1;\n    }\n    let lastInPage = this.current * this.size - 1;\n    if (this.totalItems) {\n      lastInPage = Math.min(lastInPage, this.totalItems - 1);\n    }\n    return lastInPage;\n  }\n\n  /**\n   * Resets the page size to 0\n   */\n  public resetPageSize(preventEmit = false): void {\n    this.preventEmit = preventEmit;\n    this.size = 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrDatagridFilterInterface } from '../interfaces/filter.interface';\nimport { Page } from './page';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class FiltersProvider<T = any> {\n  constructor(private _page: Page, private stateDebouncer: StateDebouncer) {}\n  /**\n   * This subject is the list of filters that changed last, not the whole list.\n   * We emit a list rather than just one filter to allow batch changes to several at once.\n   */\n  private _change = new Subject<ClrDatagridFilterInterface<T>[]>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<ClrDatagridFilterInterface<T>[]> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * List of all filters, whether they're active or not\n   */\n  private _all: RegisteredFilter<T, ClrDatagridFilterInterface<T>>[] = [];\n\n  /**\n   * Tests if at least one filter is currently active\n   */\n  public hasActiveFilters(): boolean {\n    // We do not use getActiveFilters() because this function will be called much more often\n    // and stopping the loop early might be relevant.\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive()) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns a list of all currently active filters\n   */\n  public getActiveFilters(): ClrDatagridFilterInterface<T>[] {\n    const ret: ClrDatagridFilterInterface<T>[] = [];\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive()) {\n        ret.push(filter);\n      }\n    }\n    return ret;\n  }\n\n  /**\n   * Registers a filter, and returns a deregistration function\n   */\n  public add<F extends ClrDatagridFilterInterface<T>>(filter: F): RegisteredFilter<T, F> {\n    const subscription = filter.changes.subscribe(() => this.resetPageAndEmitFilterChange([filter]));\n    let hasUnregistered = false;\n    const registered = new RegisteredFilter(filter, () => {\n      if (hasUnregistered) {\n        return;\n      }\n      subscription.unsubscribe();\n      const matchIndex = this._all.findIndex(item => item.filter === filter);\n      if (matchIndex >= 0) {\n        this._all.splice(matchIndex, 1);\n      }\n      if (filter.isActive()) {\n        this.resetPageAndEmitFilterChange([]);\n      }\n      hasUnregistered = true;\n    });\n    this._all.push(registered);\n    if (filter.isActive()) {\n      this.resetPageAndEmitFilterChange([filter]);\n    }\n    return registered;\n  }\n\n  /**\n   * Accepts an item if it is accepted by all currently active filters\n   */\n  public accepts(item: T): boolean {\n    for (const { filter } of this._all) {\n      if (filter && filter.isActive() && !filter.accepts(item)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private resetPageAndEmitFilterChange(filters: ClrDatagridFilterInterface<T>[]) {\n    this.stateDebouncer.changeStart();\n    // filtering may change the page number such that current page number doesn't exist in the filtered dataset.\n    // So here we always set the current page to 1 so that it'll fetch first page's data with the given filter.\n    this._page.current = 1;\n    this._change.next(filters);\n    this.stateDebouncer.changeDone();\n  }\n}\n\nexport class RegisteredFilter<T, F extends ClrDatagridFilterInterface<T>> {\n  constructor(public filter: F, public unregister: () => void) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { OnDestroy } from '@angular/core';\nimport { ClrDatagridFilterInterface } from '../interfaces/filter.interface';\nimport { FiltersProvider, RegisteredFilter } from '../providers/filters';\n\nexport abstract class DatagridFilterRegistrar<T, F extends ClrDatagridFilterInterface<T>> implements OnDestroy {\n  constructor(private filters: FiltersProvider<T>) {}\n\n  public registered: RegisteredFilter<T, F>;\n\n  public get filter(): F {\n    return this.registered && this.registered.filter;\n  }\n\n  public setFilter(filter: F | RegisteredFilter<T, F>) {\n    // If we previously had another filter, we unregister it\n    this.deleteFilter();\n    if (filter instanceof RegisteredFilter) {\n      this.registered = filter;\n    } else if (filter) {\n      this.registered = this.filters.add(filter);\n    }\n  }\n\n  public deleteFilter() {\n    if (this.registered) {\n      this.registered.unregister();\n      delete this.registered;\n    }\n  }\n\n  public ngOnDestroy(): void {\n    this.deleteFilter();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  Inject,\n  OnDestroy,\n  PLATFORM_ID,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\n\nimport { ClrDatagridFilterInterface } from './interfaces/filter.interface';\nimport { CustomFilter } from './providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from './providers/filters';\nimport { DatagridFilterRegistrar } from './utils/datagrid-filter-registrar';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { Subscription } from 'rxjs';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * Custom filter that can be added in any column to override the default object property string filter.\n * The reason this is not just an input on DatagridColumn is because we need the filter's template to be projected,\n * since it can be anything (not just a text input).\n */\n@Component({\n  selector: 'clr-dg-filter',\n  // We register this component as a CustomFilter, for the parent column to detect it.\n  providers: [{ provide: CustomFilter, useExisting: ClrDatagridFilter }, UNIQUE_ID_PROVIDER],\n  template: `\n      <button class=\"datagrid-filter-toggle\"\n              type=\"button\"\n              #anchor\n              [attr.aria-label]=\"commonStrings.keys.datagridFilterAriaLabel\"\n              [attr.aria-expanded]=\"ariaExpanded\"\n              [attr.aria-controls]=\"popoverId\"\n              clrPopoverAnchor\n              clrPopoverOpenCloseButton\n              [class.datagrid-filter-open]=\"open\"\n              [class.datagrid-filtered]=\"active\">\n          <clr-icon [attr.shape]=\"active ? 'filter-grid-circle': 'filter-grid'\" class=\"is-solid\"></clr-icon>\n      </button>\n\n      <div class=\"datagrid-filter\"\n           [id]=\"popoverId\"\n           clrFocusTrap\n           *clrPopoverContent=\"open at smartPosition; outsideClickToClose: true; scrollToClose: true\">\n          <div class=\"datagrid-filter-close-wrapper\">\n              <button type=\"button\" class=\"close\" clrPopoverCloseButton>\n                  <clr-icon shape=\"close\" [attr.title]=\"commonStrings.keys.close\"></clr-icon>\n              </button>\n          </div>\n\n          <ng-content></ng-content>\n      </div>\n  `,\n})\nexport class ClrDatagridFilter<T = any> extends DatagridFilterRegistrar<T, ClrDatagridFilterInterface<T>>\n  implements CustomFilter, OnDestroy {\n  private subs: Subscription[] = [];\n  public ariaExpanded: boolean = false;\n\n  constructor(\n    _filters: FiltersProvider<T>,\n    public commonStrings: ClrCommonStringsService,\n    private smartToggleService: ClrPopoverToggleService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {\n    super(_filters);\n    this.subs.push(\n      smartToggleService.openChange.subscribe(change => {\n        this.open = change;\n        this.ariaExpanded = change;\n      })\n    );\n  }\n\n  @ViewChild('anchor', { read: ElementRef })\n  anchor: ElementRef;\n\n  // Smart Popover\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.END,\n    content: ClrAlignment.END,\n  };\n\n  private _open: boolean = false;\n  public get open() {\n    return this._open;\n  }\n\n  @Input('clrDgFilterOpen')\n  public set open(open: boolean) {\n    open = !!open;\n    if (this.open !== open) {\n      this.smartToggleService.open = open;\n      this.openChange.emit(open);\n      if (!open && isPlatformBrowser(this.platformId)) {\n        this.anchor.nativeElement.focus();\n      }\n      // keep track of the state\n      this._open = open;\n    }\n  }\n\n  @Output('clrDgFilterOpenChange') public openChange = new EventEmitter<boolean>(false);\n\n  @Input('clrDgFilter')\n  public set customFilter(filter: ClrDatagridFilterInterface<T> | RegisteredFilter<T, ClrDatagridFilterInterface<T>>) {\n    this.setFilter(filter);\n  }\n\n  /**\n   * Indicates if the filter is currently active\n   */\n  public get active() {\n    return !!this.filter && this.filter.isActive();\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Generic accessor for deep object properties\n * that can be specified as simple dot-separated strings.\n */\nexport class NestedProperty<T = any> {\n  private splitProp: string[];\n\n  constructor(private prop: string) {\n    if (prop.indexOf('.') >= 0) {\n      this.splitProp = prop.split('.');\n    }\n  }\n\n  // Safe getter for a deep object property, will not throw an error but return\n  // undefined if one of the intermediate properties is null or undefined.\n  public getPropValue(item: T): any {\n    if (this.splitProp) {\n      let value = item;\n      for (const nestedProp of this.splitProp) {\n        if (value == null || typeof value === 'undefined' || typeof value[nestedProp] === 'undefined') {\n          return undefined;\n        }\n        value = value[nestedProp];\n      }\n      return value;\n    } else {\n      return item[this.prop];\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyStringFilter<T = any> implements ClrDatagridStringFilterInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string, public exact = false) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  accepts(item: T, search: string): boolean {\n    const propValue = this.nestedProp.getPropValue(item);\n    if (typeof propValue === 'undefined') {\n      return false;\n    } else if (this.exact) {\n      return ('' + propValue).toLowerCase() === search;\n    } else {\n      return ('' + propValue).toLowerCase().indexOf(search) >= 0;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Observable, Subject } from 'rxjs';\nimport { ClrDatagridFilterInterface } from '../../interfaces/filter.interface';\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { DatagridPropertyStringFilter } from './datagrid-property-string-filter';\n\nexport class DatagridStringFilterImpl<T = any> implements ClrDatagridFilterInterface<T> {\n  constructor(public filterFn: ClrDatagridStringFilterInterface<T>) {}\n\n  /**\n   * The Observable required as part of the Filter interface\n   */\n  private _changes = new Subject<string>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get changes(): Observable<string> {\n    return this._changes.asObservable();\n  }\n\n  /**\n   * Raw input value\n   */\n  private _rawValue: string = '';\n  public get value(): string {\n    return this._rawValue;\n  }\n  /**\n   * Input value converted to lowercase\n   */\n  private _lowerCaseValue: string = '';\n  public get lowerCaseValue() {\n    return this._lowerCaseValue;\n  }\n  /**\n   * Common setter for the input value\n   */\n  public set value(value: string) {\n    if (!value) {\n      value = '';\n    }\n    if (value !== this._rawValue) {\n      this._rawValue = value;\n      this._lowerCaseValue = value.toLowerCase().trim();\n      this._changes.next(value);\n    }\n  }\n\n  /**\n   * Indicates if the filter is currently active, meaning the input is not empty\n   */\n  public isActive(): boolean {\n    return !!this.value;\n  }\n\n  /**\n   * Tests if an item matches a search text\n   */\n  public accepts(item: T): boolean {\n    // We always test with the lowercase value of the input, to stay case insensitive\n    return this.filterFn.accepts(item, this.lowerCaseValue);\n  }\n\n  public get state() {\n    if (this.filterFn instanceof DatagridPropertyStringFilter) {\n      return {\n        property: this.filterFn.prop,\n        value: this.value,\n      };\n    }\n    return this;\n  }\n\n  public equals(other: ClrDatagridFilterInterface<T, any>): boolean {\n    if (other instanceof DatagridStringFilterImpl) {\n      if (other.filterFn instanceof DatagridPropertyStringFilter) {\n        return (\n          this.filterFn instanceof DatagridPropertyStringFilter &&\n          other.filterFn.prop === this.filterFn.prop &&\n          other.value === this.value\n        );\n      }\n      return other === this;\n    }\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrDatagridFilter } from '../../datagrid-filter';\nimport { ClrDatagridStringFilterInterface } from '../../interfaces/string-filter.interface';\nimport { CustomFilter } from '../../providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from '../../providers/filters';\nimport { DomAdapter } from '../../../../utils/dom-adapter/dom-adapter';\nimport { DatagridFilterRegistrar } from '../../utils/datagrid-filter-registrar';\n\nimport { DatagridStringFilterImpl } from './datagrid-string-filter-impl';\nimport { ClrPopoverToggleService } from '../../../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dg-string-filter',\n  providers: [{ provide: CustomFilter, useExisting: DatagridStringFilter }],\n  template: `\n        <clr-dg-filter [clrDgFilter]=\"registered\" [(clrDgFilterOpen)]=\"open\">\n            <input #input type=\"text\" name=\"search\" [(ngModel)]=\"value\" class=\"clr-input\" />\n        </clr-dg-filter>\n    `,\n})\nexport class DatagridStringFilter<T = any> extends DatagridFilterRegistrar<T, DatagridStringFilterImpl<T>>\n  implements CustomFilter, AfterViewInit, OnDestroy {\n  private subs: Subscription[] = [];\n  constructor(\n    filters: FiltersProvider<T>,\n    private domAdapter: DomAdapter,\n    private smartToggleService: ClrPopoverToggleService\n  ) {\n    super(filters);\n  }\n\n  /**\n   * Customizable filter logic based on a search text\n   */\n  @Input('clrDgStringFilter')\n  set customStringFilter(\n    value: ClrDatagridStringFilterInterface<T> | RegisteredFilter<T, DatagridStringFilterImpl<T>>\n  ) {\n    if (value instanceof RegisteredFilter) {\n      this.setFilter(value);\n    } else {\n      this.setFilter(new DatagridStringFilterImpl(value));\n    }\n    if (this.initFilterValue) {\n      this.value = this.initFilterValue;\n      // This initFilterValue should be used only once after the filter registration\n      // So deleting this property value to prevent it from being used again\n      // if this customStringFilter property is set again\n      delete this.initFilterValue;\n    }\n  }\n\n  /**\n   * Indicates if the filter dropdown is open\n   */\n  public open: boolean = false;\n\n  /**\n   * We need the actual input element to automatically focus on it\n   */\n  @ViewChild('input') public input: ElementRef;\n\n  /**\n   * We grab the ClrDatagridFilter we wrap to register this StringFilter to it.\n   */\n  @ViewChild(ClrDatagridFilter) public filterContainer: ClrDatagridFilter<T>;\n  ngAfterViewInit() {\n    this.subs.push(\n      this.smartToggleService.openChange.subscribe(openChange => {\n        this.open = openChange;\n        // The timeout in used because when this executes, the input isn't displayed.\n        setTimeout(() => {\n          this.domAdapter.focus(this.input.nativeElement);\n        });\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n\n  private initFilterValue: string;\n\n  /**\n   * Common setter for the input value\n   */\n  public get value() {\n    return this.filter.value;\n  }\n  @Input('clrFilterValue')\n  public set value(value: string) {\n    if (this.filter) {\n      if (!value) {\n        value = '';\n      }\n      if (value !== this.filter.value) {\n        this.filter.value = value;\n        this.filterValueChange.emit(value);\n      }\n    } else {\n      this.initFilterValue = value;\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyNumericFilter<T = any> implements ClrDatagridNumericFilterInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string, public exact = false) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  accepts(item: T, low: number, high: number): boolean {\n    const propValue = this.nestedProp.getPropValue(item);\n    if (low !== null && propValue < low) {\n      return false;\n    }\n    if (high !== null && propValue > high) {\n      return false;\n    }\n    return true;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Observable, Subject } from 'rxjs';\nimport { ClrDatagridFilterInterface } from '../../interfaces/filter.interface';\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { DatagridPropertyNumericFilter } from './datagrid-property-numeric-filter';\n\nexport class DatagridNumericFilterImpl<T = any> implements ClrDatagridFilterInterface<T> {\n  constructor(public filterFn: ClrDatagridNumericFilterInterface<T>) {}\n\n  /**\n   * The Observable required as part of the Filter interface\n   */\n  private _changes = new Subject<[number, number]>();\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get changes(): Observable<[number, number]> {\n    return this._changes.asObservable();\n  }\n\n  /**\n   * Internal values and accessor\n   */\n  private _low: number = null;\n  private _high: number = null;\n\n  /**\n   * Common setters for the input values, including individual limits and\n   * both at the same time.  Value is singular to make the interface similar\n   * to the built-in string filter.\n   */\n\n  public get value(): [number, number] {\n    return [this._low, this._high];\n  }\n\n  public set value(vals: [number, number]) {\n    const low = vals[0];\n    const high = vals[1];\n    if (low !== this._low || high !== this._high) {\n      this._low = low;\n      this._high = high;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public set low(low: number) {\n    if (low !== this._low) {\n      this._low = low;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public set high(high: number) {\n    if (high !== this._high) {\n      this._high = high;\n      this._changes.next([this._low, this._high]);\n    }\n  }\n\n  public get low() {\n    return this._low;\n  }\n\n  public get high() {\n    return this._high;\n  }\n\n  /**\n   * Indicates if the filter is currently active, (at least one input is set)\n   */\n  public isActive(): boolean {\n    return this._low !== null || this.high !== null;\n  }\n\n  /**\n   * Tests if an item matches a search text\n   */\n  public accepts(item: T): boolean {\n    // We have a filter function in case someone wants to implement a numeric\n    // filter that always passes nulls or similar\n    return this.filterFn.accepts(item, this._low, this._high);\n  }\n\n  public get state() {\n    if (this.filterFn instanceof DatagridPropertyNumericFilter) {\n      return {\n        property: this.filterFn.prop,\n        low: this._low,\n        high: this._high,\n      };\n    }\n    return this;\n  }\n\n  public equals(other: ClrDatagridFilterInterface<T, any>): boolean {\n    if (other instanceof DatagridNumericFilterImpl) {\n      if (other.filterFn instanceof DatagridPropertyNumericFilter) {\n        return (\n          this.filterFn instanceof DatagridPropertyNumericFilter &&\n          other.filterFn.prop === this.filterFn.prop &&\n          other.low === this._low &&\n          other.high === this._high\n        );\n      }\n      return other === this;\n    }\n    return false;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridFilter } from '../../datagrid-filter';\nimport { ClrDatagridNumericFilterInterface } from '../../interfaces/numeric-filter.interface';\nimport { CustomFilter } from '../../providers/custom-filter';\nimport { FiltersProvider, RegisteredFilter } from '../../providers/filters';\nimport { DomAdapter } from '../../../../utils/dom-adapter/dom-adapter';\nimport { DatagridFilterRegistrar } from '../../utils/datagrid-filter-registrar';\nimport { DatagridNumericFilterImpl } from './datagrid-numeric-filter-impl';\nimport { ClrCommonStringsService } from '../../../../utils/i18n/common-strings.service';\nimport { ClrPopoverToggleService } from '../../../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dg-numeric-filter',\n  providers: [{ provide: CustomFilter, useExisting: DatagridNumericFilter }],\n  template: `\n        <clr-dg-filter [clrDgFilter]=\"registered\" [(clrDgFilterOpen)]=\"open\">\n            <input class=\"datagrid-numeric-filter-input\" #input_low type=\"number\" name=\"low\" [(ngModel)]=\"low\"\n                   [placeholder]=\"commonStrings.keys.minValue\" [attr.aria-label]=\"commonStrings.keys.minValue\" />\n                <span class=\"datagrid-filter-input-spacer\"></span>\n            <input class=\"datagrid-numeric-filter-input\" #input_high type=\"number\" name=\"high\" [(ngModel)]=\"high\"\n                   [placeholder]=\"commonStrings.keys.maxValue\" [attr.aria-label]=\"commonStrings.keys.maxValue\" />\n        </clr-dg-filter>\n    `,\n})\nexport class DatagridNumericFilter<T = any> extends DatagridFilterRegistrar<T, DatagridNumericFilterImpl<T>>\n  implements CustomFilter, AfterViewInit {\n  constructor(\n    filters: FiltersProvider<T>,\n    private domAdapter: DomAdapter,\n    public commonStrings: ClrCommonStringsService,\n    private popoverToggleService: ClrPopoverToggleService\n  ) {\n    super(filters);\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => {\n      sub.unsubscribe();\n    });\n  }\n\n  /**\n   * Customizable filter logic based on high and low values\n   */\n  @Input('clrDgNumericFilter')\n  set customNumericFilter(\n    value: ClrDatagridNumericFilterInterface<T> | RegisteredFilter<T, DatagridNumericFilterImpl<T>>\n  ) {\n    if (value instanceof RegisteredFilter) {\n      this.setFilter(value);\n    } else {\n      this.setFilter(new DatagridNumericFilterImpl(value));\n    }\n    if (this.initFilterValues) {\n      this.value = this.initFilterValues;\n      // This initFilterValues should be used only once after the filter registration\n      // So deleting this property value to prevent it from being used again\n      // if this customStringFilter property is set again\n      delete this.initFilterValues;\n    }\n  }\n\n  /**\n   * Indicates if the filter dropdown is open\n   */\n  public open: boolean = false;\n\n  /**\n   * We need the actual input element to automatically focus on it\n   */\n  @ViewChild('input_low') public input: ElementRef;\n\n  /**\n   * We grab the ClrDatagridFilter we wrap to register this StringFilter to it.\n   */\n  @ViewChild(ClrDatagridFilter) public filterContainer: ClrDatagridFilter<T>;\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.popoverToggleService.openChange.subscribe(openChange => {\n        this.open = openChange;\n        // The timeout in used because when this executes, the input isn't displayed.\n        setTimeout(() => {\n          this.domAdapter.focus(this.input.nativeElement);\n        });\n      })\n    );\n  }\n\n  private initFilterValues: [number, number];\n  /**\n   * Common setter for the input values\n   */\n  public get value() {\n    return [this.filter.low, this.filter.high];\n  }\n\n  @Input('clrFilterValue')\n  public set value(values: [number, number]) {\n    if (this.filter) {\n      if (values && (values[0] !== this.filter.low || values[1] !== this.filter.high)) {\n        if (typeof values[0] === 'number') {\n          this.filter.low = values[0];\n        } else {\n          this.filter.low = null;\n        }\n        if (typeof values[1] === 'number') {\n          this.filter.high = values[1];\n        } else {\n          this.filter.high = null;\n        }\n        this.filterValueChange.emit(values);\n      }\n    } else {\n      this.initFilterValues = values;\n    }\n  }\n\n  public get low() {\n    if (typeof this.filter.low === 'number' && isFinite(this.filter.low)) {\n      return this.filter.low;\n    } else {\n      // There's not a low limit\n      return null;\n    }\n  }\n\n  public get high() {\n    if (typeof this.filter.high === 'number' && isFinite(this.filter.high)) {\n      return this.filter.high;\n    } else {\n      // There's not a high limit\n      return null;\n    }\n  }\n\n  public set low(low: number | string) {\n    if (typeof low === 'number' && low !== this.filter.low) {\n      this.filter.low = low;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    } else if (typeof low !== 'number') {\n      this.filter.low = null;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    }\n  }\n\n  public set high(high: number | string) {\n    if (typeof high === 'number' && high !== this.filter.high) {\n      this.filter.high = high;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    } else if (typeof high !== 'number') {\n      this.filter.high = null;\n      this.filterValueChange.emit([this.filter.low, this.filter.high]);\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentChecked, ChangeDetectorRef, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { WillyWonka } from './willy-wonka';\n\nexport abstract class OompaLoompa implements AfterContentChecked, OnDestroy {\n  // FIXME: Request Injector once we move to Angular 4.2+, it'll allow easier refactors\n  constructor(cdr: ChangeDetectorRef, willyWonka: WillyWonka) {\n    this.subscription = willyWonka.chocolate.subscribe(() => {\n      if (this.latestFlavor !== this.flavor) {\n        willyWonka.disableChocolateCheck = true;\n        cdr.detectChanges();\n        willyWonka.disableChocolateCheck = false;\n      }\n    });\n  }\n\n  private subscription: Subscription;\n\n  private latestFlavor: any;\n\n  abstract get flavor(): any;\n\n  ngAfterContentChecked() {\n    this.latestFlavor = this.flavor;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class RowActionService {\n  private actionableCount = 0;\n\n  public register() {\n    this.actionableCount++;\n  }\n\n  public unregister() {\n    this.actionableCount--;\n  }\n\n  /**\n   * false means no rows with action\n   */\n  public get hasActionableRow(): boolean {\n    return this.actionableCount > 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewChecked } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/*\n * After a conversation with the Angular core team, it turns out we don't have much of a choice for our\n * declarative API, we need to fight against change detection and its one-way flow. This is\n * currently the least dirty solution to do what we want.\n *\n * Do not modify or even use this class unless you know exactly what you're doing.\n * It has the potential to trigger change detection loops or kill app performances.\n */\nexport class WillyWonka implements AfterViewChecked {\n  private _chocolate = new Subject<string>();\n\n  public get chocolate(): Observable<string> {\n    return this._chocolate.asObservable();\n  }\n\n  disableChocolateCheck = false;\n\n  ngAfterViewChecked() {\n    if (!this.disableChocolateCheck) {\n      this._chocolate.next();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-datagrid' })\nexport class DatagridWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { RowActionService } from '../providers/row-action-service';\nimport { DatagridWillyWonka } from './datagrid-willy-wonka';\n\n@Directive({ selector: 'clr-datagrid, clr-dg-row' })\nexport class ActionableOompaLoompa extends OompaLoompa {\n  private rowActions: RowActionService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: DatagridWillyWonka, rowActions: RowActionService) {\n    if (!willyWonka) {\n      throw new Error('clr-dg-row should only be used inside of a clr-datagrid');\n    }\n    super(cdr, willyWonka);\n    this.rowActions = rowActions;\n  }\n\n  get flavor() {\n    return this.rowActions.hasActionableRow;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable()\nexport class DetailService {\n  private toggleState = false;\n  private _state: BehaviorSubject<boolean | null> = new BehaviorSubject<boolean>(this.toggleState);\n  private cache: any;\n  private _enabled = false;\n  private button: HTMLButtonElement;\n  public id: string;\n\n  get enabled(): boolean {\n    return this._enabled;\n  }\n\n  set enabled(state: boolean) {\n    this._enabled = state;\n  }\n\n  public get stateChange(): Observable<boolean | null> {\n    return this._state.asObservable();\n  }\n\n  close() {\n    this.toggleState = false;\n    this._state.next(this.toggleState);\n    if (this.button) {\n      this.button.focus();\n      this.button = null;\n    }\n  }\n\n  open(item: any, button?: HTMLButtonElement) {\n    this.cache = item;\n    this.button = button;\n    this.toggleState = true;\n    this._state.next(this.toggleState);\n  }\n\n  toggle(item: any, button?: HTMLButtonElement) {\n    if (this.isRowOpen(item) || !item) {\n      this.close();\n    } else {\n      this.open(item, button);\n    }\n  }\n\n  get state() {\n    return this.cache;\n  }\n\n  isRowOpen(item: any) {\n    return !!(this.toggleState && this.cache === item);\n  }\n\n  get isOpen() {\n    return this.toggleState === true;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { DetailService } from './detail.service';\n\n@Injectable()\nexport class ExpandableRowsCount {\n  constructor(private detailService: DetailService) {}\n\n  private expandableCount = 0;\n\n  public register() {\n    this.expandableCount++;\n  }\n\n  public unregister() {\n    this.expandableCount--;\n  }\n\n  /**\n   * false means no rows with action\n   * check if details are on, and disable rows entirely\n   */\n  public get hasExpandableRow(): boolean {\n    return !this.detailService.enabled && this.expandableCount > 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { ExpandableRowsCount } from '../providers/global-expandable-rows';\nimport { DatagridWillyWonka } from './datagrid-willy-wonka';\n\n@Directive({ selector: 'clr-datagrid, clr-dg-row' })\nexport class ExpandableOompaLoompa extends OompaLoompa {\n  private expandableCount: ExpandableRowsCount;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: DatagridWillyWonka,\n    expandableCount: ExpandableRowsCount\n  ) {\n    if (!willyWonka) {\n      throw new Error('clr-dg-row should only be used inside of a clr-datagrid');\n    }\n    super(cdr, willyWonka);\n    this.expandableCount = expandableCount;\n  }\n\n  get flavor() {\n    return this.expandableCount.hasExpandableRow;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ClrDatagridComparatorInterface } from '../../interfaces/comparator.interface';\nimport { NestedProperty } from '../nested-property';\n\nexport class DatagridPropertyComparator<T = any> implements ClrDatagridComparatorInterface<T> {\n  private nestedProp: NestedProperty<T>;\n\n  constructor(public prop: string) {\n    this.nestedProp = new NestedProperty(prop);\n  }\n\n  public compare(a: T, b: T): number {\n    let propA = this.nestedProp.getPropValue(a);\n    let propB = this.nestedProp.getPropValue(b);\n\n    if (typeof propA === 'string') {\n      propA = propA.toLowerCase();\n    }\n\n    if (typeof propB === 'string') {\n      propB = propB.toLowerCase();\n    }\n\n    if (typeof propA === 'undefined' || propA === null) {\n      if (typeof propB === 'undefined' || propB === null) {\n        return 0;\n      } else {\n        return 1;\n      }\n    } else {\n      if (typeof propB === 'undefined' || propB === null) {\n        return -1;\n      } else if (propA < propB) {\n        return -1;\n      } else if (propA > propB) {\n        return 1;\n      } else {\n        return 0;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridDisplayMode {\n  DISPLAY,\n  CALCULATE,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridRenderStep {\n  ALIGN_COLUMNS,\n  CALCULATE_MODE_ON,\n  CALCULATE_MODE_OFF,\n  CLEAR_WIDTHS, // Note this is listened to by both cells and columns\n  COMPUTE_COLUMN_WIDTHS,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrDatagridComparatorInterface } from '../interfaces/comparator.interface';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n@Injectable()\nexport class Sort<T = any> {\n  constructor(private stateDebouncer: StateDebouncer) {}\n\n  /**\n   * Currently active comparator\n   */\n  private _comparator: ClrDatagridComparatorInterface<T>;\n  public get comparator(): ClrDatagridComparatorInterface<T> {\n    return this._comparator;\n  }\n  public set comparator(value: ClrDatagridComparatorInterface<T>) {\n    this.stateDebouncer.changeStart();\n    this._comparator = value;\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * Ascending order if false, descending if true\n   */\n  private _reverse: boolean = false;\n  public get reverse(): boolean {\n    return this._reverse;\n  }\n  public set reverse(value: boolean) {\n    this.stateDebouncer.changeStart();\n    this._reverse = value;\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to sort changes\n   */\n  private _change = new Subject<Sort<T>>();\n  private emitChange() {\n    this._change.next(this);\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<Sort<T>> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * Sets a comparator as the current one, or toggles reverse if the comparator is already used. The\n   * optional forceReverse input parameter allows to override that toggling behavior by sorting in\n   * reverse order if `true`.\n   *\n   * @memberof Sort\n   */\n  public toggle(sortBy: ClrDatagridComparatorInterface<T>, forceReverse?: boolean) {\n    this.stateDebouncer.changeStart();\n    // We modify private properties directly, to batch the change event\n    if (this.comparator === sortBy) {\n      this._reverse = typeof forceReverse !== 'undefined' ? forceReverse || !this._reverse : !this._reverse;\n    } else {\n      this._comparator = sortBy;\n      this._reverse = typeof forceReverse !== 'undefined' ? forceReverse : false;\n    }\n    this.emitChange();\n    this.stateDebouncer.changeDone();\n  }\n\n  /**\n   * Clears the current sorting order\n   */\n  public clear() {\n    this.comparator = null;\n  }\n\n  /**\n   * Compares two objects according to the current comparator\n   */\n  public compare(a: T, b: T): number {\n    return (this.reverse ? -1 : 1) * this.comparator.compare(a, b);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-column',\n  template: `\n        <ng-template #columnPortal>\n            <ng-content></ng-content>\n        </ng-template>\n    `,\n})\nexport class WrappedColumn implements DynamicWrapper, AfterViewInit, OnDestroy {\n  _dynamic = false;\n\n  @ViewChild('columnPortal') templateRef: TemplateRef<void>;\n  columnView: EmbeddedViewRef<void>; // the columns projected view (in memory)\n\n  ngAfterViewInit() {\n    // Create the cells view in memory, not the DOM.\n    this.columnView = this.templateRef.createEmbeddedView(null);\n  }\n\n  ngOnDestroy() {\n    this.columnView.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  ContentChild,\n  EventEmitter,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewContainerRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { DatagridPropertyComparator } from './built-in/comparators/datagrid-property-comparator';\nimport { DatagridPropertyStringFilter } from './built-in/filters/datagrid-property-string-filter';\nimport { DatagridPropertyNumericFilter } from './built-in/filters/datagrid-property-numeric-filter';\nimport { DatagridStringFilterImpl } from './built-in/filters/datagrid-string-filter-impl';\nimport { DatagridNumericFilterImpl } from './built-in/filters/datagrid-numeric-filter-impl';\nimport { ClrDatagridSortOrder } from './enums/sort-order.enum';\nimport { ClrDatagridComparatorInterface } from './interfaces/comparator.interface';\nimport { CustomFilter } from './providers/custom-filter';\nimport { FiltersProvider } from './providers/filters';\nimport { Sort } from './providers/sort';\nimport { DatagridFilterRegistrar } from './utils/datagrid-filter-registrar';\nimport { ClrDatagridFilterInterface } from './interfaces/filter.interface';\nimport { WrappedColumn } from './wrapped-column';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { DetailService } from './providers/detail.service';\n\n@Component({\n  selector: 'clr-dg-column',\n  template: `\n      <div class=\"datagrid-column-flex\">\n          <button\n            class=\"datagrid-column-title\"\n            [attr.aria-label]=\"commonStrings.keys.sortColumn\"\n            *ngIf=\"sortable\"\n            (click)=\"sort()\"\n            type=\"button\">\n              <ng-container  *ngTemplateOutlet=\"columnTitle\"></ng-container>\n              <clr-icon\n                      *ngIf=\"sortIcon\"\n                      [attr.shape]=\"sortIcon\"\n                      class=\"sort-icon\"></clr-icon>\n          </button>\n          <!-- I'm really not happy with that select since it's not very scalable -->\n          <ng-content select=\"clr-dg-filter, clr-dg-string-filter, clr-dg-numeric-filter\"></ng-content>\n\n          <clr-dg-string-filter\n                  *ngIf=\"field && !customFilter && (colType=='string')\"\n                  [clrDgStringFilter]=\"registered\"\n                  [(clrFilterValue)]=\"filterValue\"></clr-dg-string-filter>\n\n          <clr-dg-numeric-filter\n                  *ngIf=\"field && !customFilter && (colType=='number')\"\n                  [clrDgNumericFilter]=\"registered\"\n                  [(clrFilterValue)]=\"filterValue\"></clr-dg-numeric-filter>\n\n          <ng-template #columnTitle>\n              <ng-content></ng-content>\n          </ng-template>\n\n\n          <span class=\"datagrid-column-title\" *ngIf=\"!sortable\">\n              <ng-container *ngTemplateOutlet=\"columnTitle\"></ng-container>\n          </span>\n\n          <clr-dg-column-separator *ngIf=\"showSeparator\"></clr-dg-column-separator>\n      </div>\n    `,\n  providers: [ClrPopoverPositionService, ClrPopoverEventsService, ClrPopoverToggleService],\n  host: {\n    '[class.datagrid-column]': 'true',\n    '[attr.aria-sort]': 'ariaSort',\n    role: 'columnheader',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrDatagridColumn<T = any> extends DatagridFilterRegistrar<T, ClrDatagridFilterInterface<T>>\n  implements OnDestroy, OnInit {\n  constructor(\n    private _sort: Sort<T>,\n    filters: FiltersProvider<T>,\n    private vcr: ViewContainerRef,\n    private detailService: DetailService,\n    private changeDetectorRef: ChangeDetectorRef,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    super(filters);\n    this.subscriptions.push(this.listenForSortingChanges());\n    this.subscriptions.push(this.listenForDetailPaneChanges());\n  }\n\n  public showSeparator = true;\n\n  /**\n   * Subscription to the sort service changes\n   */\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenForDetailPaneChanges() {\n    return this.detailService.stateChange.subscribe(state => {\n      if (this.showSeparator !== !state) {\n        this.showSeparator = !state;\n        // Have to manually change because of OnPush\n        this.changeDetectorRef.markForCheck();\n      }\n    });\n  }\n\n  private listenForSortingChanges() {\n    return this._sort.change.subscribe(sort => {\n      // Need to manually mark the component to be checked\n      // for both activating and deactivating sorting\n      this.changeDetectorRef.markForCheck();\n      // We're only listening to make sure we emit an event when the column goes from sorted to unsorted\n      if (this.sortOrder !== ClrDatagridSortOrder.UNSORTED && sort.comparator !== this._sortBy) {\n        this._sortOrder = ClrDatagridSortOrder.UNSORTED;\n        this.sortOrderChange.emit(this._sortOrder);\n        // removes the sortIcon when column becomes unsorted\n        this.sortIcon = null;\n      }\n      // deprecated: to be removed - START\n      if (this.sorted && sort.comparator !== this._sortBy) {\n        this._sorted = false;\n        this.sortedChange.emit(false);\n      }\n      // deprecated: to be removed - END\n    });\n  }\n\n  /*\n     * Simple object property shortcut, activates both sorting and filtering\n     * based on native comparison of the specified property on the items.\n     */\n  private _field: string;\n  public get field() {\n    return this._field;\n  }\n\n  /*\n  * What type is this column?  This defaults to STRING, but can also be\n  * set to NUMBER.  Unsupported types default to STRING. Users can set it\n  * via the [clrDgColType] input by setting it to 'string' or 'number'.\n  */\n\n  private _colType: 'string' | 'number' = 'string';\n\n  get colType() {\n    return this._colType;\n  }\n\n  // TODO: We might want to make this an enum in the future\n  @Input('clrDgColType')\n  set colType(value: 'string' | 'number') {\n    this._colType = value;\n    if (!this.customFilter && !this.filter && this._colType && this._field) {\n      this.setupDefaultFilter(this._field, this._colType);\n    }\n  }\n\n  @Input('clrDgField')\n  public set field(field: string) {\n    if (typeof field === 'string') {\n      this._field = field;\n      if (!this.customFilter && this._colType) {\n        this.setupDefaultFilter(this._field, this._colType);\n      }\n      if (!this._sortBy) {\n        this._sortBy = new DatagridPropertyComparator(this._field);\n      }\n    }\n  }\n\n  private setupDefaultFilter(field: string, colType: 'string' | 'number') {\n    if (colType === 'number') {\n      this.setFilter(new DatagridNumericFilterImpl(new DatagridPropertyNumericFilter(field)));\n    } else if (colType === 'string') {\n      this.setFilter(new DatagridStringFilterImpl(new DatagridPropertyStringFilter(field)));\n    }\n    if (this.filter && this.initFilterValue) {\n      this.updateFilterValue = this.initFilterValue;\n      // This initFilterValue should be used only once after the filter registration\n      // So deleting this property value to prevent it from being used again\n      // if this field property is set again\n      delete this.initFilterValue;\n    }\n  }\n\n  /**\n   * ClrDatagridComparatorInterface to use when sorting the column\n   */\n\n  private _sortBy: ClrDatagridComparatorInterface<T>;\n\n  public get sortBy() {\n    return this._sortBy;\n  }\n\n  @Input('clrDgSortBy')\n  public set sortBy(comparator: ClrDatagridComparatorInterface<T> | string) {\n    if (typeof comparator === 'string') {\n      this._sortBy = new DatagridPropertyComparator(comparator);\n    } else {\n      if (comparator) {\n        this._sortBy = comparator;\n      } else {\n        if (this._field) {\n          this._sortBy = new DatagridPropertyComparator(this._field);\n        } else {\n          delete this._sortBy;\n        }\n      }\n    }\n  }\n\n  /**\n   * Indicates if the column is sortable\n   */\n  public get sortable(): boolean {\n    return !!this._sortBy;\n  }\n\n  // deprecated: to be removed - START\n  /**\n   * Indicates if the column is currently sorted\n   *\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  private _sorted = false;\n  public get sorted() {\n    return this._sorted;\n  }\n\n  /**\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  @Input('clrDgSorted')\n  public set sorted(value: boolean) {\n    if (!value && this.sorted) {\n      this._sorted = false;\n      this._sort.clear();\n    } else if (value && !this.sorted) {\n      this.sort();\n    }\n  }\n\n  /**\n   * @deprecated This will be removed soon, in favor of the sortOrder mechanism\n   */\n  @Output('clrDgSortedChange') public sortedChange = new EventEmitter<boolean>();\n\n  // deprecated: to be removed - END\n\n  /**\n   * Indicates how the column is currently sorted\n   */\n  private _sortOrder: ClrDatagridSortOrder = ClrDatagridSortOrder.UNSORTED;\n  public get sortOrder() {\n    return this._sortOrder;\n  }\n\n  @Input('clrDgSortOrder')\n  public set sortOrder(value: ClrDatagridSortOrder) {\n    if (typeof value === 'undefined') {\n      return;\n    }\n\n    // only if the incoming order is different from the current one\n    if (this._sortOrder === value) {\n      return;\n    }\n\n    switch (value) {\n      // the Unsorted case happens when the current state is either Asc or Desc\n      default:\n      case ClrDatagridSortOrder.UNSORTED:\n        this._sort.clear();\n        break;\n      case ClrDatagridSortOrder.ASC:\n        this.sort(false);\n        break;\n      case ClrDatagridSortOrder.DESC:\n        this.sort(true);\n        break;\n    }\n  }\n\n  public get ariaSort() {\n    switch (this._sortOrder) {\n      default:\n      case ClrDatagridSortOrder.UNSORTED:\n        return 'none';\n      case ClrDatagridSortOrder.ASC:\n        return 'ascending';\n      case ClrDatagridSortOrder.DESC:\n        return 'descending';\n    }\n  }\n\n  @Output('clrDgSortOrderChange') public sortOrderChange = new EventEmitter<ClrDatagridSortOrder>();\n\n  public sortIcon: string;\n  /**\n   * Sorts the datagrid based on this column\n   */\n  public sort(reverse?: boolean) {\n    if (!this.sortable) {\n      return;\n    }\n\n    this._sort.toggle(this._sortBy, reverse);\n\n    // setting the private variable to not retrigger the setter logic\n    this._sortOrder = this._sort.reverse ? ClrDatagridSortOrder.DESC : ClrDatagridSortOrder.ASC;\n    // Sets the correct icon for current sort order\n    this.sortIcon = this._sortOrder === ClrDatagridSortOrder.DESC ? 'arrow down' : 'arrow';\n    this.sortOrderChange.emit(this._sortOrder);\n\n    // deprecated: to be removed - START\n    this._sorted = true;\n    this.sortedChange.emit(true);\n    // deprecated: to be removed - END\n  }\n\n  /**\n   * A custom filter for this column that can be provided in the projected content\n   */\n  public customFilter = false;\n\n  @ContentChild(CustomFilter)\n  public set projectedFilter(custom: any) {\n    if (custom) {\n      this.deleteFilter();\n      this.customFilter = true;\n    }\n  }\n\n  // This property holds filter value temporarily while this.filter property is not yet registered\n  // When this.filter is registered, this property value would be used update this.filter.value\n  private initFilterValue: string | [number, number];\n\n  public get filterValue() {\n    if (this.filter instanceof DatagridStringFilterImpl || this.filter instanceof DatagridNumericFilterImpl) {\n      return this.filter.value;\n    }\n  }\n\n  @Input('clrFilterValue')\n  public set updateFilterValue(newValue: string | [number, number]) {\n    if (this.filter) {\n      if (this.filter instanceof DatagridStringFilterImpl) {\n        if (!newValue || typeof newValue !== 'string') {\n          newValue = '';\n        }\n        if (newValue !== this.filter.value) {\n          this.filter.value = newValue;\n        }\n      } else if (this.filter instanceof DatagridNumericFilterImpl) {\n        if (!newValue || !(newValue instanceof Array)) {\n          newValue = [null, null];\n        }\n        if (newValue.length === 2 && (newValue[0] !== this.filter.value[0] || newValue[1] !== this.filter.value[1])) {\n          this.filter.value = newValue;\n        }\n      }\n    } else {\n      this.initFilterValue = newValue;\n    }\n  }\n\n  public set filterValue(newValue: string | [number, number]) {\n    if (this.filter instanceof DatagridStringFilterImpl || this.filter instanceof DatagridNumericFilterImpl) {\n      this.updateFilterValue = newValue;\n      this.filterValueChange.emit(this.filter.value);\n    }\n  }\n\n  @Output('clrFilterValueChange') filterValueChange = new EventEmitter();\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedColumn, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedColumn, this.vcr).columnView;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, TrackByFunction } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nimport { FiltersProvider } from './filters';\nimport { Page } from './page';\nimport { Sort } from './sort';\n\n@Injectable()\nexport class Items<T = any> {\n  constructor(private _filters: FiltersProvider<T>, private _sort: Sort<T>, private _page: Page) {}\n\n  /**\n   * Indicates if the data is currently loading\n   */\n  public loading = false;\n\n  // TODO: Verify that trackBy is registered for the *ngFor case too\n  /**\n   * Tracking function to identify objects. Default is reference equality.\n   */\n  public trackBy: TrackByFunction<T> = (index: number, item: T) => item;\n\n  /**\n   * Subscriptions to the other providers changes.\n   */\n  private _filtersSub: Subscription;\n  private _sortSub: Subscription;\n  private _pageSub: Subscription;\n  /**\n   * Cleans up our subscriptions to other providers\n   */\n  public destroy() {\n    if (this._filtersSub) {\n      this._filtersSub.unsubscribe();\n    }\n    if (this._sortSub) {\n      this._sortSub.unsubscribe();\n    }\n    if (this._pageSub) {\n      this._pageSub.unsubscribe();\n    }\n  }\n\n  /**\n   * Whether we should use smart items for this datagrid or let the user handle\n   * everything.\n   */\n  private _smart = false;\n  public get smart(): boolean {\n    return this._smart;\n  }\n  public smartenUp() {\n    this._smart = true;\n    /*\n         * These observers trigger a chain of function: filter -> sort -> paginate\n         * An observer up the chain re-triggers all the operations that follow it.\n         */\n    this._filtersSub = this._filters.change.subscribe(() => this._filterItems());\n    this._sortSub = this._sort.change.subscribe(() => {\n      // Special case, if the datagrid went from sorted to unsorted, we have to re-filter\n      // to get the original order back\n      if (!this._sort.comparator) {\n        this._filterItems();\n      } else {\n        this._sortItems();\n      }\n    });\n    this._pageSub = this._page.change.subscribe(() => this._changePage());\n  }\n\n  /**\n   * List of all items in the datagrid\n   */\n  private _all: T[];\n  public get all() {\n    return this._all;\n  }\n  public set all(items: T[]) {\n    this._all = items;\n    this.emitAllChanges(items);\n    if (this.smart) {\n      this._filterItems();\n    } else {\n      this._displayed = items;\n      this.emitChange();\n    }\n  }\n\n  /**\n   * Manually recompute the list of displayed items\n   */\n  public refresh() {\n    if (this.smart) {\n      this._filterItems();\n    }\n  }\n\n  /**\n   * Internal temporary step, which we preserve to avoid re-filtering or re-sorting if not necessary\n   */\n  private _filtered: T[];\n\n  /**\n   * List of items currently displayed\n   */\n  private _displayed: T[] = [];\n  public get displayed(): T[] {\n    // Ideally we could return an immutable array, but we don't have it in Clarity yet.\n    return this._displayed;\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to items changes\n   */\n  private _change = new Subject<T[]>();\n  private emitChange() {\n    this._change.next(this.displayed);\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<T[]> {\n    return this._change.asObservable();\n  }\n\n  private _allChanges = new Subject<T[]>();\n  private emitAllChanges(items: T[]): void {\n    this._allChanges.next(items);\n  }\n\n  public get allChanges(): Observable<T[]> {\n    return this._allChanges.asObservable();\n  }\n\n  /**\n   * Checks if we don't have data to process yet, to abort early operations\n   */\n  private get uninitialized() {\n    return !this._all;\n  }\n\n  /**\n   * FiltersProvider items from the raw list\n   */\n  private _filterItems() {\n    if (this.uninitialized) {\n      return;\n    }\n    if (this._filters.hasActiveFilters()) {\n      this._filtered = this._all.filter(item => this._filters.accepts(item));\n    } else {\n      // Work on a shallow copy of the array, to not modify the user's model\n      this._filtered = this._all.slice();\n    }\n    this._page.totalItems = this._filtered.length;\n    this._sortItems();\n  }\n\n  /**\n   * Sorts items in the filtered list\n   */\n  private _sortItems() {\n    if (this.uninitialized) {\n      return;\n    }\n    if (this._sort.comparator) {\n      this._filtered.sort((a, b) => this._sort.compare(a, b));\n    }\n    this._changePage();\n  }\n\n  /**\n   * Extracts the current page from the sorted list\n   */\n  private _changePage() {\n    // If we know we have pagination but the page size hasn't been set yet, we wait for it.\n    if (this.uninitialized || (this._page.activated && this._page.size === 0)) {\n      return;\n    }\n    if (this._page.size > 0) {\n      this._displayed = this._filtered.slice(this._page.firstItem, this._page.lastItem + 1);\n    } else {\n      this._displayed = this._filtered;\n    }\n    this.emitChange();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgForOf, NgForOfContext } from '@angular/common';\nimport {\n  Directive,\n  DoCheck,\n  Input,\n  IterableDiffer,\n  IterableDiffers,\n  TemplateRef,\n  TrackByFunction,\n  ViewContainerRef,\n  OnDestroy,\n} from '@angular/core';\n\nimport { Items } from './providers/items';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrDgItems][clrDgItemsOf]',\n})\nexport class ClrDatagridItems<T> implements DoCheck, OnDestroy {\n  private iterableProxy: NgForOf<T>;\n  private _rawItems: T[];\n  private differ: IterableDiffer<T> | null = null;\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrDgItemsOf')\n  public set rawItems(items: T[]) {\n    this._rawItems = items ? items : []; // local copy for ngOnChange diffing\n  }\n\n  @Input('clrDgItemsTrackBy')\n  set trackBy(value: TrackByFunction<T>) {\n    this.iterableProxy.ngForTrackBy = value;\n  }\n\n  constructor(\n    public template: TemplateRef<NgForOfContext<T>>,\n    private differs: IterableDiffers,\n    private items: Items,\n    private vcr: ViewContainerRef\n  ) {\n    items.smartenUp();\n    this.iterableProxy = new NgForOf<T>(this.vcr, this.template, this.differs);\n    this.subscriptions.push(\n      items.change.subscribe(newItems => {\n        this.iterableProxy.ngForOf = newItems;\n        this.iterableProxy.ngDoCheck();\n      })\n    );\n  }\n\n  ngDoCheck() {\n    if (!this.differ) {\n      this.differ = this.differs.find(this._rawItems).create(this.iterableProxy.ngForTrackBy);\n    }\n    if (this.differ) {\n      const changes = this.differ.diff(this._rawItems);\n      if (changes) {\n        // TODO: not very efficient right now,\n        // but premature optimization is the root of all evil.\n        this.items.all = this._rawItems;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { Items } from './providers/items';\n\n@Component({\n  selector: 'clr-dg-placeholder',\n  template: `\n        <div\n            class=\"datagrid-placeholder\"\n            [class.datagrid-empty]=\"emptyDatagrid\">\n                <div class=\"datagrid-placeholder-image\" *ngIf=\"emptyDatagrid\"></div>\n                <ng-content *ngIf=\"emptyDatagrid\"></ng-content>\n        </div>\n    `,\n  host: { '[class.datagrid-placeholder-container]': 'true' },\n})\nexport class ClrDatagridPlaceholder<T = any> {\n  constructor(private items: Items<T>) {}\n\n  /**\n   * Tests if the datagrid is empty, meaning it doesn't contain any items\n   */\n  public get emptyDatagrid() {\n    return !this.items.loading && (!this.items.displayed || this.items.displayed.length === 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ElementRef, InjectionToken } from '@angular/core';\n\nexport const POPOVER_HOST_ANCHOR = new InjectionToken<ElementRef>('POPOVER_HOST_ANCHOR');\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class SignpostFocusManager {\n  private _triggerEl: HTMLElement;\n\n  set triggerEl(value: HTMLElement) {\n    this._triggerEl = value;\n  }\n\n  focusTrigger() {\n    if (this._triggerEl) {\n      this._triggerEl.focus();\n    }\n  }\n}\n","/*\n *  Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n *\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class SignpostIdService {\n  private _id: Subject<string> = new Subject<string>();\n\n  setId(id: string) {\n    this._id.next(id);\n  }\n\n  get id(): Observable<string> {\n    return this._id.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { Directive, ElementRef, HostListener, Inject, OnDestroy, PLATFORM_ID } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\n\n@Directive({\n  selector: '[clrSignpostTrigger]',\n  host: {\n    class: 'signpost-trigger',\n    '[attr.aria-label]': 'commonStrings.keys.signpostToggle',\n    '[attr.aria-expanded]': 'ariaExpanded',\n    '[attr.aria-controls]': 'ariaControl',\n    '[class.active]': 'isOpen',\n  },\n})\n\n/*********\n *\n * @description\n * A Directive added to the ClrSignpost Trigger button that will call the ClrSignpost.toggle() function to hide/show the\n * ClrSignpostContent.\n *\n */\nexport class ClrSignpostTrigger implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  public ariaExpanded: boolean;\n  public ariaControl: string;\n  public isOpen: boolean;\n\n  private document: Document;\n\n  constructor(\n    private toggleService: ClrPopoverToggleService,\n    private el: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    private signpostIdService: SignpostIdService,\n    private signpostFocusManager: SignpostFocusManager,\n    @Inject(DOCUMENT) document: any,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.document = document;\n  }\n\n  ngOnInit() {\n    this.signpostFocusManager.triggerEl = this.el.nativeElement;\n    this.subscriptions.push(\n      this.toggleService.openChange.subscribe((isOpen: boolean) => {\n        this.ariaExpanded = isOpen;\n\n        const prevIsOpen = this.isOpen;\n        this.isOpen = isOpen;\n\n        // openChange fires false on initialization because signpost starts as closed by default\n        // but we shouldn't focus on that initial false value\n        // we should focus back only if it's closed after being opened\n        if (!this.isOpen && prevIsOpen) {\n          this.focusOnClose();\n        }\n      }),\n      this.signpostIdService.id.subscribe(idChange => (this.ariaControl = idChange))\n    );\n  }\n\n  private focusOnClose() {\n    if (!isPlatformBrowser(this.platformId)) {\n      return;\n    }\n    // we have to set the focus back on the trigger only if the focus is reset back to the body element\n    // if the focus is on another element, we are not allowed to move that focus back to this trigger again.\n    if (!this.isOpen && this.document.activeElement === this.document.body) {\n      this.signpostFocusManager.focusTrigger();\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  /**********\n   *\n   * @description\n   * click handler for the ClrSignpost trigger button used to hide/show ClrSignpostContent.\n   */\n  @HostListener('click', ['$event'])\n  onSignpostTriggerClick(event: Event): void {\n    this.toggleService.toggleWithEvent(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, ElementRef } from '@angular/core';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\n\nimport { ClrSignpostTrigger } from './signpost-trigger';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\n\n@Component({\n  selector: 'clr-signpost',\n  template: `\n        <ng-container *ngIf=\"!useCustomTrigger\">\n            <button\n                type=\"button\"\n                class=\"signpost-action btn btn-small btn-link\"\n                clrSignpostTrigger>\n                <clr-icon shape=\"info\" [attr.title]=\"commonStrings.keys.info\"></clr-icon>\n            </button>\n        </ng-container>\n\n        <ng-content></ng-content>\n    `,\n  host: { '[class.signpost]': 'true' },\n  providers: [\n    ClrPopoverToggleService,\n    SignpostFocusManager,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    SignpostIdService,\n  ],\n})\n\n/*********\n *\n * @class ClrSignpost\n *\n * @description\n * Class used to configure and control the state of a ClrSignpost and its associated ClrSignpostContent.\n * It supports the clrPosition with a 'right-middle' default.\n *\n */\nexport class ClrSignpost {\n  constructor(public commonStrings: ClrCommonStringsService) {}\n\n  /**********\n   * @property useCustomTrigger\n   *\n   * @description\n   * Flag used to determine if we need to use the default trigger or a user supplied trigger element.\n   *\n   */\n  public useCustomTrigger: boolean = false;\n\n  /**********\n   * @property signPostTrigger\n   *\n   * @description\n   * Uses ContentChild to check for a user supplied element with the ClrSignpostTrigger on it.\n   *\n   */\n  @ContentChild(ClrSignpostTrigger)\n  set customTrigger(trigger: ClrSignpostTrigger) {\n    this.useCustomTrigger = !!trigger;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-cell',\n  template: `\n        <ng-template #cellPortal>\n            <ng-content></ng-content>\n        </ng-template>\n    `,\n})\nexport class WrappedCell implements DynamicWrapper, AfterViewInit, OnDestroy {\n  _dynamic = false;\n  @ViewChild('cellPortal') templateRef: TemplateRef<void>;\n  cellView: EmbeddedViewRef<void>; // the cells projected view\n\n  ngAfterViewInit() {\n    this.cellView = this.templateRef.createEmbeddedView(null);\n  }\n\n  ngOnDestroy() {\n    this.cellView.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChildren, Injector, OnInit, QueryList, ViewContainerRef } from '@angular/core';\n\nimport { ClrSignpost } from '../../popover/signpost/signpost';\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { WrappedCell } from './wrapped-cell';\n\n@Component({\n  selector: 'clr-dg-cell',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.datagrid-cell]': 'true',\n    '[class.datagrid-signpost-trigger]': 'signpost.length > 0',\n    role: 'gridcell',\n  },\n})\nexport class ClrDatagridCell implements OnInit {\n  /*********\n   * @property signpost\n   *\n   * @description\n   * @ContentChild is used to detect the presence of a Signpost in the projected content.\n   * On the host, we set the .datagrid-signpost-trigger class on the cell when signpost.length is greater than 0.\n   *\n   */\n  @ContentChildren(ClrSignpost) signpost: QueryList<ClrSignpost>;\n\n  constructor(private vcr: ViewContainerRef) {}\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedCell, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedCell, this.vcr).cellView;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum SelectionType {\n  None,\n  Single,\n  Multi,\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\n\n@Injectable()\nexport class DatagridRenderOrganizer {\n  protected _renderStep: Subject<DatagridRenderStep> = new Subject<DatagridRenderStep>();\n  public get renderStep(): Observable<DatagridRenderStep> {\n    return this._renderStep.asObservable();\n  }\n\n  public filterRenderSteps(step: DatagridRenderStep) {\n    return this.renderStep.pipe(filter(testStep => step === testStep));\n  }\n\n  private alreadySized = false;\n\n  public resize() {\n    this._renderStep.next(DatagridRenderStep.CALCULATE_MODE_ON);\n    if (this.alreadySized) {\n      this._renderStep.next(DatagridRenderStep.CLEAR_WIDTHS);\n    }\n    this._renderStep.next(DatagridRenderStep.COMPUTE_COLUMN_WIDTHS);\n    this._renderStep.next(DatagridRenderStep.ALIGN_COLUMNS);\n    this.alreadySized = true;\n    this._renderStep.next(DatagridRenderStep.CALCULATE_MODE_OFF);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DatagridDisplayMode } from '../enums/display-mode.enum';\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { DatagridRenderOrganizer } from '../render/render-organizer';\n\n@Injectable()\nexport class DisplayModeService implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  protected _view: BehaviorSubject<DatagridDisplayMode> = new BehaviorSubject<DatagridDisplayMode>(\n    DatagridDisplayMode.DISPLAY\n  );\n\n  constructor(renderOrganizer: DatagridRenderOrganizer) {\n    this.subscriptions.push(\n      renderOrganizer\n        .filterRenderSteps(DatagridRenderStep.CALCULATE_MODE_ON)\n        .subscribe(() => this._view.next(DatagridDisplayMode.CALCULATE))\n    );\n\n    this.subscriptions.push(\n      renderOrganizer\n        .filterRenderSteps(DatagridRenderStep.CALCULATE_MODE_OFF)\n        .subscribe(() => this._view.next(DatagridDisplayMode.DISPLAY))\n    );\n  }\n\n  public get view(): Observable<DatagridDisplayMode> {\n    return this._view.asObservable();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, TrackByFunction } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\n\nimport { FiltersProvider } from './filters';\nimport { Items } from './items';\nimport { SelectionType } from '../enums/selection-type';\n\nlet nbSelection: number = 0;\n\n@Injectable()\nexport class Selection<T = any> {\n  public id: string;\n  public preserveSelection: boolean = false;\n  private prevSelectionRefs: T[] = []; // Refs of selected items\n  private prevSingleSelectionRef: T; // Ref of single selected item\n  private lockedRefs: T[] = []; // Ref of locked items\n\n  constructor(private _items: Items<T>, private _filters: FiltersProvider<T>) {\n    this.id = 'clr-dg-selection' + nbSelection++;\n\n    this.subscriptions.push(\n      this._filters.change.subscribe(() => {\n        if (!this._selectable || this.preserveSelection) {\n          return;\n        }\n        this.clearSelection();\n      })\n    );\n\n    this.subscriptions.push(\n      this._items.allChanges.subscribe(updatedItems => {\n        // Reset the lockedRefs;\n        const updateLockedRef: T[] = [];\n\n        switch (this.selectionType) {\n          case SelectionType.None: {\n            break;\n          }\n\n          case SelectionType.Single: {\n            let newSingle: any;\n            const trackBy: TrackByFunction<T> = this._items.trackBy;\n            let selectionUpdated: boolean = false;\n\n            // if the currentSingle has been set before data was loaded, we look up and save the ref from current data set\n            if (this.currentSingle && !this.prevSingleSelectionRef) {\n              if (this._items.all && this._items.trackBy) {\n                const lookup = this._items.all.findIndex(maybe => maybe === this.currentSingle);\n                this.prevSingleSelectionRef = this._items.trackBy(lookup, this.currentSingle);\n              }\n            }\n\n            updatedItems.forEach((item, index) => {\n              const ref = trackBy(index, item);\n              // If one of the updated items is the previously selectedSingle, set it as the new one\n              if (this.prevSingleSelectionRef === ref) {\n                newSingle = item;\n                selectionUpdated = true;\n              }\n              if (this.lockedRefs.indexOf(ref) > -1) {\n                updateLockedRef.push(ref);\n              }\n            });\n\n            // If we're using smart datagrids, we expect all items to be present in the updatedItems array.\n            // Therefore, we should delete the currentSingle if it used to be defined but doesn't exist anymore.\n            // No explicit \"delete\" is required, since newSingle would be undefined at this point.\n            // Marking it as selectionUpdated here will set currentSingle to undefined below in the setTimeout.\n            if (this._items.smart && !newSingle) {\n              selectionUpdated = true;\n            }\n\n            // TODO: Discussed this with Eudes and this is fine for now.\n            // But we need to figure out a different pattern for the\n            // child triggering the parent change detection problem.\n            // Using setTimeout for now to fix this.\n            setTimeout(() => {\n              if (selectionUpdated) {\n                this.currentSingle = newSingle;\n              }\n            }, 0);\n            break;\n          }\n\n          case SelectionType.Multi: {\n            let leftOver: any[] = this.current.slice();\n            const trackBy: TrackByFunction<any> = this._items.trackBy;\n            let selectionUpdated: boolean = false;\n\n            // if the current has been set before data was loaded, we look up and save the ref from current data set\n            if (this.current.length > 0 && this.prevSelectionRefs.length !== this.current.length) {\n              if (this._items.all && this._items.trackBy) {\n                this.prevSelectionRefs = [];\n                this.current.forEach(item => {\n                  const lookup = this._items.all.findIndex(maybe => maybe === item);\n                  this.prevSelectionRefs.push(this._items.trackBy(lookup, item));\n                });\n              }\n            }\n\n            // Duplicate loop, when the issue is issue#2342 is revisited keep in mind that\n            // we need to go over every updated item and check to see if there are valid to be\n            // locked or not and update it. When only add items that are found in the lockedRefs back.\n            //\n            // The both loops below that goes over updatedItems could be combined into one.\n            updatedItems.forEach((item, index) => {\n              const ref = trackBy(index, item);\n              if (this.lockedRefs.indexOf(ref) > -1) {\n                updateLockedRef.push(ref);\n              }\n            });\n\n            // TODO: revisit this when we work on https://github.com/vmware/clarity/issues/2342\n            // currently, the selection is cleared when filter is applied, so the logic inside\n            // the if statement below results in broken behavior.\n            if (leftOver.length > 0) {\n              updatedItems.forEach((item, index) => {\n                const ref = trackBy(index, item);\n                // Look in current selected refs array if item is selected, and update actual value\n                const selectedIndex = this.prevSelectionRefs.indexOf(ref);\n                if (selectedIndex > -1) {\n                  leftOver[selectedIndex] = item;\n                  selectionUpdated = true;\n                }\n              });\n\n              // Filter out any unmatched items if we're using smart datagrids where we expect all items to be\n              // present\n              if (this._items.smart) {\n                leftOver = leftOver.filter(selected => updatedItems.indexOf(selected) > -1);\n                if (this.current.length !== leftOver.length) {\n                  selectionUpdated = true;\n                }\n              }\n\n              // TODO: Discussed this with Eudes and this is fine for now.\n              // But we need to figure out a different pattern for the\n              // child triggering the parent change detection problem.\n              // Using setTimeout for now to fix this.\n              setTimeout(() => {\n                if (selectionUpdated) {\n                  this.current = leftOver;\n                }\n              }, 0);\n            }\n            break;\n          }\n\n          default: {\n            break;\n          }\n        }\n        // Sync locked items\n        this.lockedRefs = updateLockedRef;\n      })\n    );\n  }\n\n  public clearSelection(): void {\n    this.current.length = 0;\n    this.prevSelectionRefs = [];\n    this._currentSingle = null;\n    this.prevSingleSelectionRef = null;\n    this.emitChange();\n  }\n\n  private _selectionType: SelectionType = SelectionType.None;\n  public get selectionType(): SelectionType {\n    return this._selectionType;\n  }\n  public set selectionType(value: SelectionType) {\n    if (value === this.selectionType) {\n      return;\n    }\n    this._selectionType = value;\n    if (value === SelectionType.None) {\n      delete this.current;\n    } else {\n      this.updateCurrent([], false);\n    }\n  }\n\n  /** @deprecated since 2.0, remove in 3.0 */\n  public rowSelectionMode: boolean = false;\n\n  private get _selectable(): boolean {\n    return this._selectionType === SelectionType.Multi || this._selectionType === SelectionType.Single;\n  }\n  /**\n   * Ignore items changes in the same change detection cycle.\n   */\n  // tslint:disable-next-line\n  private debounce: boolean = false;\n\n  /**\n   * Subscriptions to the other providers changes.\n   */\n  private subscriptions: Subscription[] = [];\n\n  /**\n   * Cleans up our subscriptions to other providers\n   */\n  public destroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * The current selection in single selection type\n   */\n  private _currentSingle: T;\n  public get currentSingle(): T {\n    return this._currentSingle;\n  }\n  public set currentSingle(value: T) {\n    if (value === this._currentSingle) {\n      return;\n    }\n\n    this._currentSingle = value;\n    if (this._items.all && this._items.trackBy && value) {\n      const lookup = this._items.all.findIndex(maybe => maybe === value);\n      this.prevSingleSelectionRef = this._items.trackBy(lookup, value);\n    }\n    this.emitChange();\n    // Ignore items changes in the same change detection cycle.\n    // @TODO This can likely be removed!\n    this.debounce = true;\n    setTimeout(() => (this.debounce = false));\n  }\n\n  /**\n   * The current selection\n   */\n  private _current: T[];\n  public get current(): T[] {\n    return this._current;\n  }\n  public set current(value: T[]) {\n    this.updateCurrent(value, true);\n  }\n\n  public updateCurrent(value: T[], emit: boolean) {\n    this._current = value;\n    if (emit) {\n      this.emitChange();\n      // Ignore items changes in the same change detection cycle.\n      // @TODO This can likely be removed!\n      this.debounce = true;\n      setTimeout(() => (this.debounce = false));\n    }\n  }\n\n  /**\n   * The Observable that lets other classes subscribe to selection changes\n   */\n  private _change = new Subject<T[] | T>();\n  private emitChange() {\n    if (this._selectionType === SelectionType.Single) {\n      this._change.next(this.currentSingle);\n    } else if (this._selectionType === SelectionType.Multi) {\n      this._change.next(this.current);\n    }\n  }\n  // We do not want to expose the Subject itself, but the Observable which is read-only\n  public get change(): Observable<T[] | T> {\n    return this._change.asObservable();\n  }\n\n  /**\n   * Checks if an item is currently selected\n   */\n  public isSelected(item: T): boolean {\n    if (this._selectionType === SelectionType.Single) {\n      return this.currentSingle === item;\n    } else if (this._selectionType === SelectionType.Multi) {\n      return this.current.indexOf(item) >= 0;\n    }\n    return false;\n  }\n\n  /**\n   * Selects an item\n   */\n  private selectItem(item: T): void {\n    this.current.push(item);\n    if (this._items.trackBy) {\n      // Push selected ref onto array\n      const lookup = this._items.all.findIndex(maybe => maybe === item);\n      this.prevSelectionRefs.push(this._items.trackBy(lookup, item));\n    }\n  }\n\n  /**\n   * Deselects an item\n   */\n  private deselectItem(indexOfItem: number): void {\n    this.current.splice(indexOfItem, 1);\n    if (this._items.trackBy && indexOfItem < this.prevSelectionRefs.length) {\n      // Keep selected refs array in sync\n      const removedItems = this.prevSelectionRefs.splice(indexOfItem, 1);\n      // locked reference is no longer needed (if any)\n      this.lockedRefs = this.lockedRefs.filter(locked => locked !== removedItems[0]);\n    }\n  }\n\n  /**\n   * Selects or deselects an item\n   */\n  public setSelected(item: T, selected: boolean) {\n    switch (this._selectionType) {\n      case SelectionType.None:\n        break;\n      case SelectionType.Single:\n        // in single selection, set currentSingle method should be used\n        break;\n      case SelectionType.Multi:\n        const index = this.current.indexOf(item);\n        if (index >= 0 && !selected) {\n          this.deselectItem(index);\n          this.emitChange();\n        } else if (index < 0 && selected) {\n          this.selectItem(item);\n          this.emitChange();\n        }\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Checks if all currently displayed items are selected\n   */\n  public isAllSelected(): boolean {\n    if (this._selectionType !== SelectionType.Multi || !this._items.displayed) {\n      return false;\n    }\n    // make sure to exclude the locked items from the list when counting\n    const displayedItems: T[] = this._items.displayed.filter(item => {\n      return this.isLocked(item) === false;\n    });\n\n    const nbDisplayed = displayedItems.length;\n    if (nbDisplayed < 1) {\n      return false;\n    }\n    const temp: T[] = displayedItems.filter(item => this.current.indexOf(item) > -1);\n    return temp.length === displayedItems.length;\n  }\n\n  private canItBeLocked() {\n    // We depend on the trackBy and all so there are part of the requirment of is item could be locked\n    return this._selectionType !== SelectionType.None;\n  }\n\n  /**\n   * Lock and unlock item\n   */\n  public lockItem(item: T, lock: boolean) {\n    if (this.canItBeLocked()) {\n      const ref = this._items.trackBy(this._items.all.findIndex(maybe => maybe === item), item);\n      if (lock === true) {\n        // Add to lockedRef\n        this.lockedRefs.push(ref);\n      } else {\n        // Remove from lockedRef\n        this.lockedRefs = this.lockedRefs.filter(lockedItem => ref !== lockedItem);\n      }\n    }\n  }\n\n  /**\n   * Check is item locked or not by searcing into lockedRefs for entry\n   */\n  public isLocked(item: T): boolean {\n    /**\n     * The check for selectionType will boost the performence by NOT searching\n     * into the array when there is no need for that.\n     */\n    if (this.canItBeLocked()) {\n      const ref = this._items.trackBy(this._items.all.findIndex(maybe => maybe === item), item);\n      return this.lockedRefs.indexOf(ref) > -1;\n    }\n\n    return false;\n  }\n\n  /**\n   * Selects or deselects all currently displayed items\n   */\n  public toggleAll() {\n    if (this._selectionType === SelectionType.None || this._selectionType === SelectionType.Single) {\n      return;\n    }\n    /**\n     * If every currently displayed item is already selected, we clear them.\n     * If at least one item isn't selected, we select every currently displayed item.\n     */\n    if (this.isAllSelected()) {\n      this._items.displayed.forEach(item => {\n        const currentIndex = this.current.indexOf(item);\n        if (currentIndex > -1 && this.isLocked(item) === false) {\n          this.deselectItem(currentIndex);\n        }\n      });\n    } else {\n      this._items.displayed.forEach(item => {\n        if (this.current.indexOf(item) < 0 && this.isLocked(item) === false) {\n          this.selectItem(item);\n        }\n      });\n    }\n    this.emitChange();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum DatagridColumnChanges {\n  WIDTH,\n  HIDDEN,\n}\n\nexport const ALL_COLUMN_CHANGES: DatagridColumnChanges[] = Object.keys(DatagridColumnChanges)\n  .map(key => DatagridColumnChanges[key])\n  .filter(key => key === parseInt(key, 10)); // extracts only integer keys\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Component, EmbeddedViewRef, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\n\nimport { DynamicWrapper } from '../../utils/host-wrapping/dynamic-wrapper';\n\n@Component({\n  selector: 'dg-wrapped-row',\n  template: `\n        <ng-template #rowPortal>\n            <ng-content></ng-content>\n        </ng-template>\n    `,\n})\nexport class WrappedRow implements DynamicWrapper, AfterViewInit, OnDestroy {\n  _dynamic = false;\n\n  @ViewChild('rowPortal') templateRef: TemplateRef<void>;\n  rowView: EmbeddedViewRef<void>; // the rows projected view (in memory)\n\n  ngAfterViewInit() {\n    // Create the cells view in memory, not the DOM.\n    this.rowView = this.templateRef.createEmbeddedView(null);\n  }\n\n  ngOnDestroy() {\n    this.rowView.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { ClrLoadingState } from '../../utils/loading/loading';\n\n@Injectable()\nexport class DatagridIfExpandService extends IfExpandService {\n  // due to the es5 spec if the set is overridden on base class the getter must also be overridden\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  set expanded(value: boolean) {\n    value = !!value;\n    if (value !== this._expanded) {\n      this._expanded = value;\n      this._animate.next();\n      this._expandChange.next(value);\n    }\n  }\n\n  loadingStateChange(state: ClrLoadingState) {\n    super.loadingStateChange(state);\n    if (state !== ClrLoadingState.LOADING) {\n      this._animate.next();\n    }\n  }\n\n  private _replace: BehaviorSubject<boolean> = new BehaviorSubject(false);\n  get replace(): Observable<boolean> {\n    return this._replace.asObservable();\n  }\n\n  setReplace(replaceValue: boolean) {\n    this._replace.next(replaceValue);\n  }\n\n  private _animate: Subject<boolean> = new Subject<boolean>();\n  get animate(): Observable<boolean> {\n    return this._animate.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  Input,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { combineLatest, Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { HostWrapper } from '../../utils/host-wrapping/host-wrapper';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\n\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { DatagridDisplayMode } from './enums/display-mode.enum';\nimport { DisplayModeService } from './providers/display-mode.service';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { WrappedRow } from './wrapped-row';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SelectionType } from './enums/selection-type';\nimport { DatagridIfExpandService } from './datagrid-if-expanded.service';\nimport { ClrExpandableAnimation } from '../../utils/animations/expandable-animation/expandable-animation';\nimport { DetailService } from './providers/detail.service';\n\nlet nbRow: number = 0;\n\n@Component({\n  selector: 'clr-dg-row',\n  templateUrl: './datagrid-row.html',\n  host: {\n    '[class.datagrid-row]': 'true',\n    '[class.datagrid-selected]': 'selected',\n    '[attr.aria-owns]': 'id',\n    role: 'rowgroup',\n  },\n  providers: [\n    DatagridIfExpandService,\n    { provide: IfExpandService, useExisting: DatagridIfExpandService },\n    { provide: LoadingListener, useExisting: DatagridIfExpandService },\n  ],\n})\nexport class ClrDatagridRow<T = any> implements AfterContentInit, AfterViewInit {\n  public id: string;\n  public radioId: string;\n  public checkboxId: string;\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  @ViewChild(ClrExpandableAnimation) expandAnimation: ClrExpandableAnimation;\n\n  /**\n   * Model of the row, to use for selection\n   */\n  @Input('clrDgItem') item: T;\n\n  public replaced;\n\n  public expandAnimationTrigger: boolean = false;\n\n  constructor(\n    public selection: Selection<T>,\n    public rowActionService: RowActionService,\n    public globalExpandable: ExpandableRowsCount,\n    public expand: DatagridIfExpandService,\n    public detailService: DetailService,\n    private displayMode: DisplayModeService,\n    private vcr: ViewContainerRef,\n    private renderer: Renderer2,\n    private el: ElementRef,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    nbRow++;\n    this.id = 'clr-dg-row' + nbRow;\n    this.radioId = 'clr-dg-row-rd' + nbRow;\n    this.checkboxId = 'clr-dg-row-cb' + nbRow;\n\n    this.subscriptions.push(\n      combineLatest(this.expand.replace, this.expand.expandChange).subscribe(\n        ([expandReplaceValue, expandChangeValue]) => {\n          if (expandReplaceValue && expandChangeValue) {\n            // replaced and expanding\n            this.replaced = true;\n            this.renderer.addClass(this.el.nativeElement, 'datagrid-row-replaced');\n          } else {\n            this.replaced = false;\n            // Handles these cases: not replaced and collapsing & replaced and\n            // collapsing and not replaced and expanding.\n            this.renderer.removeClass(this.el.nativeElement, 'datagrid-row-replaced');\n          }\n        }\n      )\n    );\n  }\n\n  private _selected = false;\n  /**\n   * Indicates if the row is selected\n   */\n  public get selected() {\n    if (this.selection.selectionType === SelectionType.None) {\n      return this._selected;\n    } else {\n      return this.selection.isSelected(this.item);\n    }\n  }\n\n  @Input('clrDgSelected')\n  public set selected(value: boolean) {\n    if (this.selection.selectionType === SelectionType.None) {\n      this._selected = value;\n    } else {\n      this.selection.setSelected(this.item, value);\n    }\n  }\n\n  // By default every item is selectable\n  @Input('clrDgSelectable')\n  public set clrDgSelectable(value: boolean) {\n    this.selection.lockItem(this.item, value === false);\n  }\n\n  public get clrDgSelectable() {\n    return !this.selection.isLocked(this.item);\n  }\n\n  @Output('clrDgSelectedChange') selectedChanged = new EventEmitter<boolean>(false);\n\n  public toggle(selected = !this.selected) {\n    if (selected !== this.selected) {\n      this.selected = selected;\n      this.selectedChanged.emit(selected);\n    }\n  }\n\n  public get expanded() {\n    return this.expand.expanded;\n  }\n\n  @Input('clrDgExpanded')\n  public set expanded(value: boolean) {\n    this.expand.expanded = value;\n  }\n\n  @Output('clrDgExpandedChange') expandedChange = new EventEmitter<boolean>(false);\n\n  public toggleExpand() {\n    if (this.expand.expandable) {\n      this.expandAnimation.updateStartHeight();\n      this.expanded = !this.expanded;\n      this.expandedChange.emit(this.expanded);\n    }\n  }\n\n  @ViewChild('detailButton') detailButton;\n\n  private _detailOpenLabel = '';\n  @Input()\n  set clrDgDetailOpenLabel(label: string) {\n    this._detailOpenLabel = label;\n  }\n  get clrDgDetailOpenLabel(): string {\n    return this._detailOpenLabel ? this._detailOpenLabel : this.commonStrings.keys.open;\n  }\n  private _detailCloseLabel = '';\n  @Input()\n  set clrDgDetailCloseLabel(label: string) {\n    this._detailCloseLabel = label;\n  }\n  get clrDgDetailCloseLabel(): string {\n    return this._detailCloseLabel ? this._detailCloseLabel : this.commonStrings.keys.close;\n  }\n\n  /*****\n   * property dgCells\n   *\n   * @description\n   * A Query List of the ClrDatagrid cells in this row.\n   *\n   */\n  @ContentChildren(ClrDatagridCell) dgCells: QueryList<ClrDatagridCell>;\n\n  ngAfterContentInit() {\n    this.dgCells.changes.subscribe(() => {\n      this.dgCells.forEach(cell => {\n        if (!cell._view.destroyed) {\n          this._scrollableCells.insert(cell._view);\n        }\n      });\n    });\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(\n      this.displayMode.view.subscribe(viewChange => {\n        // Listen for view changes and move cells around depending on the current displayType\n        // remove cell views from display view\n        for (let i = this._scrollableCells.length; i > 0; i--) {\n          this._scrollableCells.detach();\n        }\n        // remove cell views from calculated view\n        for (let i = this._calculatedCells.length; i > 0; i--) {\n          this._calculatedCells.detach();\n        }\n        if (viewChange === DatagridDisplayMode.CALCULATE) {\n          this.displayCells = false;\n          this.dgCells.forEach(cell => {\n            if (!cell._view.destroyed) {\n              this._calculatedCells.insert(cell._view);\n            }\n          });\n        } else {\n          this.displayCells = true;\n          this.dgCells.forEach(cell => {\n            if (!cell._view.destroyed) {\n              this._scrollableCells.insert(cell._view);\n            }\n          });\n        }\n      }),\n      this.expand.animate.subscribe(() => {\n        this.expandAnimationTrigger = !this.expandAnimationTrigger;\n      })\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  public displayCells = false;\n\n  @ViewChild('stickyCells', { read: ViewContainerRef })\n  _stickyCells: ViewContainerRef;\n  @ViewChild('scrollableCells', { read: ViewContainerRef })\n  _scrollableCells: ViewContainerRef;\n  @ViewChild('calculatedCells', { read: ViewContainerRef })\n  _calculatedCells: ViewContainerRef;\n\n  private wrappedInjector: Injector;\n\n  ngOnInit() {\n    this.wrappedInjector = new HostWrapper(WrappedRow, this.vcr);\n  }\n\n  public get _view() {\n    return this.wrappedInjector.get(WrappedRow, this.vcr).rowView;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { DatagridPropertyComparator } from '../built-in/comparators/datagrid-property-comparator';\nimport { ClrDatagridStateInterface } from '../interfaces/state.interface';\n\nimport { FiltersProvider } from './filters';\nimport { Page } from './page';\nimport { Sort } from './sort';\nimport { StateDebouncer } from './state-debouncer.provider';\n\n/**\n * This provider aggregates state changes from the various providers of the Datagrid\n */\n@Injectable()\nexport class StateProvider<T> {\n  constructor(\n    private filters: FiltersProvider<T>,\n    private sort: Sort<T>,\n    private page: Page,\n    private debouncer: StateDebouncer\n  ) {}\n\n  /**\n   * The Observable that lets other classes subscribe to global state changes\n   */\n  change: Observable<ClrDatagridStateInterface<T>> = this.debouncer.change.pipe(map(() => this.state));\n\n  /*\n     * By making this a getter, we open the possibility for a setter in the future.\n     * It's been requested a couple times.\n     */\n  get state(): ClrDatagridStateInterface<T> {\n    const state: ClrDatagridStateInterface<T> = {};\n    if (this.page.size > 0) {\n      state.page = {\n        from: this.page.firstItem,\n        to: this.page.lastItem,\n        size: this.page.size,\n        current: this.page.current,\n      };\n    }\n    if (this.sort.comparator) {\n      if (this.sort.comparator instanceof DatagridPropertyComparator) {\n        /*\n                 * Special case for the default object property comparator,\n                 * we give the property name instead of the actual comparator.\n                 */\n        state.sort = { by: (<DatagridPropertyComparator<T>>this.sort.comparator).prop, reverse: this.sort.reverse };\n      } else {\n        state.sort = { by: this.sort.comparator, reverse: this.sort.reverse };\n      }\n    }\n\n    const activeFilters = this.filters.getActiveFilters();\n    if (activeFilters.length > 0) {\n      state.filters = [];\n      for (const filter of activeFilters) {\n        if (filter.state) {\n          state.filters.push(filter.state);\n        } else {\n          state.filters.push(filter);\n        }\n      }\n    }\n    return state;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, PLATFORM_ID } from '@angular/core';\n\n/**\n * @description\n * Internal datagrid service that holds a reference to the clr-dg-table element and exposes a method to get height.\n */\n@Injectable()\nexport class TableSizeService {\n  private _tableRef: HTMLElement;\n\n  public get tableRef(): HTMLElement {\n    return this._tableRef;\n  }\n\n  public set tableRef(element: HTMLElement) {\n    this._tableRef = element;\n  }\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {}\n  public set table(table: ElementRef) {\n    if (isPlatformBrowser(this.platformId) && table.nativeElement) {\n      this.tableRef = table.nativeElement.querySelector('.datagrid-table');\n    }\n  }\n\n  // Used when resizing columns to show the column border being dragged.\n  getColumnDragHeight(): string {\n    if (!this.tableRef) {\n      return;\n    }\n    return `${this.tableRef.clientHeight}px`;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ColumnStateDiff, ColumnState } from '../interfaces/column-state.interface';\nimport { ALL_COLUMN_CHANGES } from '../enums/column-changes.enum';\n\n@Injectable()\nexport class ColumnsService {\n  columns: BehaviorSubject<ColumnState>[] = [];\n  private _cache: ColumnState[] = [];\n\n  cache() {\n    this._cache = this.columns.map(subject => {\n      const value = { ...subject.value };\n      delete value.changes;\n      return value;\n    });\n  }\n\n  hasCache() {\n    return !!this._cache.length;\n  }\n\n  resetToLastCache() {\n    this._cache.forEach((state, index) => {\n      // Just emit the exact value from the cache\n      this.columns[index].next({ ...state, changes: ALL_COLUMN_CHANGES });\n    });\n    this._cache = [];\n  }\n\n  get columnStates(): ColumnState[] {\n    return this.columns.map(column => column.value);\n  }\n\n  get hasHideableColumns(): boolean {\n    return this.columnStates.filter(state => state.hideable).length > 0;\n  }\n\n  // Helper method to emit a change to a column only when there is an actual diff to process for that column\n  emitStateChangeAt(columnIndex: number, diff: ColumnStateDiff) {\n    if (!this.columns[columnIndex]) {\n      return;\n    }\n    this.emitStateChange(this.columns[columnIndex], diff);\n  }\n\n  emitStateChange(column: BehaviorSubject<ColumnState>, diff: ColumnStateDiff) {\n    column.next({ ...column.value, ...diff });\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChild,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n  Renderer2,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridColumn } from './datagrid-column';\nimport { ClrDatagridItems } from './datagrid-items';\nimport { ClrDatagridPlaceholder } from './datagrid-placeholder';\nimport { ClrDatagridRow } from './datagrid-row';\nimport { DatagridDisplayMode } from './enums/display-mode.enum';\nimport { ClrDatagridStateInterface } from './interfaces/state.interface';\nimport { DisplayModeService } from './providers/display-mode.service';\nimport { FiltersProvider } from './providers/filters';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { Items } from './providers/items';\nimport { Page } from './providers/page';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { Sort } from './providers/sort';\nimport { StateDebouncer } from './providers/state-debouncer.provider';\nimport { StateProvider } from './providers/state.provider';\nimport { TableSizeService } from './providers/table-size.service';\nimport { DatagridRenderOrganizer } from './render/render-organizer';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { SelectionType } from './enums/selection-type';\nimport { ColumnsService } from './providers/columns.service';\nimport { DetailService } from './providers/detail.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-datagrid',\n  templateUrl: './datagrid.html',\n  providers: [\n    Selection,\n    Sort,\n    FiltersProvider,\n    Page,\n    Items,\n    DatagridRenderOrganizer,\n    RowActionService,\n    ExpandableRowsCount,\n    StateDebouncer,\n    DetailService,\n    UNIQUE_ID_PROVIDER,\n    StateProvider,\n    TableSizeService,\n    ColumnsService,\n    DisplayModeService,\n  ],\n  host: {\n    '[class.datagrid-host]': 'true',\n    '[class.datagrid-detail-open]': 'detailService.isOpen',\n  },\n})\nexport class ClrDatagrid<T = any> implements AfterContentInit, AfterViewInit, OnDestroy {\n  constructor(\n    private organizer: DatagridRenderOrganizer,\n    public items: Items<T>,\n    public expandableRows: ExpandableRowsCount,\n    public selection: Selection<T>,\n    public rowActionService: RowActionService,\n    private stateProvider: StateProvider<T>,\n    private displayMode: DisplayModeService,\n    private renderer: Renderer2,\n    public detailService: DetailService,\n    @Inject(UNIQUE_ID) datagridId: string,\n    private el: ElementRef,\n    private page: Page,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this.detailService.id = datagridId;\n  }\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  /**\n   * Freezes the datagrid while data is loading\n   */\n  public get loading(): boolean {\n    return this.items.loading;\n  }\n\n  @Input('clrDgLoading')\n  public set loading(value: boolean) {\n    this.items.loading = value;\n  }\n\n  /**\n   * Output emitted whenever the data needs to be refreshed, based on user action or external ones\n   */\n  @Output('clrDgRefresh') public refresh = new EventEmitter<ClrDatagridStateInterface<T>>(false);\n\n  /**\n   * Public method to re-trigger the computation of displayed items manually\n   */\n  public dataChanged() {\n    this.items.refresh();\n  }\n\n  /**\n   * We grab the smart iterator from projected content\n   */\n  @ContentChild(ClrDatagridItems) public iterator: ClrDatagridItems<T>;\n\n  /**\n   * Array of all selected items\n   */\n  @Input('clrDgSelected')\n  set selected(value: T[]) {\n    if (value) {\n      this.selection.selectionType = SelectionType.Multi;\n    } else {\n      this.selection.selectionType = SelectionType.None;\n    }\n    this.selection.updateCurrent(value, false);\n  }\n\n  @Output('clrDgSelectedChange') selectedChanged = new EventEmitter<T[]>(false);\n\n  /**\n   * Selected item in single-select mode\n   */\n  @Input('clrDgSingleSelected')\n  set singleSelected(value: T) {\n    this.selection.selectionType = SelectionType.Single;\n    // the clrDgSingleSelected is updated in one of two cases:\n    // 1. an explicit value is passed\n    // 2. is being set to null or undefined, where previously it had a value\n    if (value) {\n      this.selection.currentSingle = value;\n    } else if (this.selection.currentSingle) {\n      this.selection.currentSingle = null;\n    }\n  }\n\n  @Output('clrDgSingleSelectedChange') singleSelectedChanged = new EventEmitter<T>(false);\n\n  @Input() clrDgSingleSelectionAriaLabel: string = this.commonStrings.keys.singleSelectionAriaLabel;\n  @Input() clrDgSingleActionableAriaLabel: string = this.commonStrings.keys.singleActionableAriaLabel;\n  @Input() clrDetailExpandableAriaLabel: string = this.commonStrings.keys.detailExpandableAriaLabel;\n\n  @Input()\n  set clrDgPreserveSelection(state: boolean) {\n    this.selection.preserveSelection = state;\n  }\n  /**\n   * @deprecated since 2.0, remove in 3.0\n   *\n   * Selection/Deselection on row click mode\n   */\n  @Input('clrDgRowSelection')\n  set rowSelectionMode(value: boolean) {\n    this.selection.rowSelectionMode = value;\n  }\n\n  /**\n   * Indicates if all currently displayed items are selected\n   */\n  public get allSelected() {\n    return this.selection.isAllSelected();\n  }\n\n  /**\n   * Selects/deselects all currently displayed items\n   * @param value\n   */\n  public set allSelected(value: boolean) {\n    /**\n     * This is a setter but we ignore the value.\n     * It's strange, but it lets us have an indeterminate state where only\n     * some of the items are selected.\n     */\n    this.selection.toggleAll();\n  }\n\n  /**\n   * Custom placeholder detection\n   */\n  @ContentChild(ClrDatagridPlaceholder) public placeholder: ClrDatagridPlaceholder<T>;\n\n  /**\n   * Hideable Column data source / detection.\n   */\n  @ContentChildren(ClrDatagridColumn) public columns: QueryList<ClrDatagridColumn<T>>;\n\n  /**\n   * When the datagrid is user-managed without the smart iterator, we get the items displayed\n   * by querying the projected content. This is needed to keep track of the models currently\n   * displayed, typically for selection.\n   */\n\n  @ContentChildren(ClrDatagridRow) rows: QueryList<ClrDatagridRow<T>>;\n  @ViewChild('scrollableColumns', { read: ViewContainerRef })\n  scrollableColumns: ViewContainerRef;\n\n  @ViewChild('datagridTable', { read: ElementRef })\n  datagridTable: ElementRef;\n\n  ngAfterContentInit() {\n    if (!this.items.smart) {\n      this.items.all = this.rows.map((row: ClrDatagridRow<T>) => row.item);\n    }\n\n    this._subscriptions.push(\n      this.rows.changes.subscribe(() => {\n        if (!this.items.smart) {\n          this.items.all = this.rows.map((row: ClrDatagridRow<T>) => row.item);\n        }\n        this.rows.forEach(row => {\n          this._displayedRows.insert(row._view);\n        });\n      })\n    );\n  }\n\n  /**\n   * Our setup happens in the view of some of our components, so we wait for it to be done before starting\n   */\n  ngAfterViewInit() {\n    // TODO: determine if we can get rid of provider wiring in view init so that subscriptions can be done earlier\n    this.refresh.emit(this.stateProvider.state);\n    this._subscriptions.push(\n      this.stateProvider.change.subscribe(state => this.refresh.emit(state)),\n      this.selection.change.subscribe(s => {\n        if (this.selection.selectionType === SelectionType.Single) {\n          this.singleSelectedChanged.emit(<T>s);\n        } else if (this.selection.selectionType === SelectionType.Multi) {\n          this.selectedChanged.emit(<T[]>s);\n        }\n      }),\n      this.page.change.subscribe(() => {\n        this.datagridTable.nativeElement.focus();\n      }),\n      // A subscription that listens for displayMode changes on the datagrid\n      this.displayMode.view.subscribe(viewChange => {\n        // Remove any projected columns from the projectedDisplayColumns container\n        for (let i = this._projectedDisplayColumns.length; i > 0; i--) {\n          this._projectedDisplayColumns.detach();\n        }\n        // Remove any projected columns from the projectedCalculationColumns container\n        for (let i = this._projectedCalculationColumns.length; i > 0; i--) {\n          this._projectedCalculationColumns.detach();\n        }\n        // Remove any projected rows from the calculationRows container\n        for (let i = this._calculationRows.length; i > 0; i--) {\n          this._calculationRows.detach();\n        }\n        // Remove any projected rows from the displayedRows container\n        for (let i = this._displayedRows.length; i > 0; i--) {\n          this._displayedRows.detach();\n        }\n        if (viewChange === DatagridDisplayMode.DISPLAY) {\n          // Set state, style for the datagrid to DISPLAY and insert row & columns into containers\n          this.renderer.removeClass(this.el.nativeElement, 'datagrid-calculate-mode');\n          this.columns.forEach(column => {\n            this._projectedDisplayColumns.insert(column._view);\n          });\n          this.rows.forEach(row => {\n            this._displayedRows.insert(row._view);\n          });\n        } else {\n          // Set state, style for the datagrid to CALCULATE and insert row & columns into containers\n          this.renderer.addClass(this.el.nativeElement, 'datagrid-calculate-mode');\n          this.columns.forEach(column => {\n            this._projectedCalculationColumns.insert(column._view);\n          });\n          this.rows.forEach(row => {\n            this._calculationRows.insert(row._view);\n          });\n        }\n      })\n    );\n  }\n\n  /**\n   * Subscriptions to all the services and queries changes\n   */\n  private _subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n  }\n\n  resize(): void {\n    this.organizer.resize();\n  }\n\n  @ViewChild('projectedDisplayColumns', { read: ViewContainerRef })\n  _projectedDisplayColumns: ViewContainerRef;\n  @ViewChild('projectedCalculationColumns', { read: ViewContainerRef })\n  _projectedCalculationColumns: ViewContainerRef;\n  @ViewChild('displayedRows', { read: ViewContainerRef })\n  _displayedRows: ViewContainerRef;\n  @ViewChild('calculationRows', { read: ViewContainerRef })\n  _calculationRows: ViewContainerRef;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-action-bar',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: { '[class.datagrid-action-bar]': 'true' },\n})\nexport class ClrDatagridActionBar {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Inject, Input, OnDestroy, Output, NgZone, PLATFORM_ID } from '@angular/core';\n\nimport { RowActionService } from './providers/row-action-service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { isPlatformBrowser } from '@angular/common';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { Subscription } from 'rxjs';\n\nlet clrDgActionId = 0;\n\n@Component({\n  selector: 'clr-dg-action-overflow',\n  providers: [UNIQUE_ID_PROVIDER, ClrPopoverToggleService, ClrPopoverEventsService, ClrPopoverPositionService],\n  template: `\n      <button class=\"datagrid-action-toggle\"\n              type=\"button\"\n              role=\"button\"\n              aria-haspopup=\"true\"\n              #anchor\n              [attr.aria-controls]=\"popoverId\"\n              [attr.aria-expanded]=\"open\"\n              [attr.aria-label]=\"commonStrings.keys.rowActions\"\n              clrPopoverAnchor\n              clrPopoverOpenCloseButton>\n          <clr-icon shape=\"ellipsis-vertical\" [attr.title]=\"commonStrings.keys.rowActions\"></clr-icon>\n      </button>\n\n      <div class=\"datagrid-action-overflow\"\n           role=\"menu\"\n           [id]=\"popoverId\"\n           [attr.aria-hidden]=\"!open\"\n           [attr.id]=\"popoverId\"\n           clrFocusTrap\n           (click)=\"closeOverflowContent($event)\"\n           *clrPopoverContent=\"open at smartPosition; outsideClickToClose: true; scrollToClose: true\">\n          <ng-content></ng-content>\n      </div>\n  `,\n})\nexport class ClrDatagridActionOverflow implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.HORIZONTAL,\n    side: ClrSide.AFTER,\n    anchor: ClrAlignment.CENTER,\n    content: ClrAlignment.CENTER,\n  };\n\n  constructor(\n    private rowActionService: RowActionService,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private zone: NgZone,\n    private smartToggleService: ClrPopoverToggleService,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {\n    this.rowActionService.register();\n    this.subscriptions.push(\n      this.smartToggleService.openChange.subscribe(openState => {\n        this.open = openState;\n        if (openState) {\n          this.focusFirstButton();\n        }\n      })\n    );\n    this.popoverId = 'clr-action-menu' + clrDgActionId++;\n  }\n\n  ngOnDestroy() {\n    this.rowActionService.unregister();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  closeOverflowContent(event): void {\n    this.smartToggleService.toggleWithEvent(event);\n  }\n\n  private _open: boolean = false;\n  public get open() {\n    return this._open;\n  }\n\n  private focusFirstButton(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          const firstButton: HTMLButtonElement = document.querySelector('button.action-item');\n          if (firstButton) {\n            firstButton.focus();\n          }\n        });\n      });\n    }\n  }\n\n  @Input('clrDgActionOverflowOpen')\n  public set open(open: boolean) {\n    const openState = !!open;\n    if (!!openState !== this.open) {\n      // prevents chocolate mess\n      this.smartToggleService.open = openState;\n      this.openChange.emit(openState);\n      this._open = openState;\n    }\n  }\n\n  @Output('clrDgActionOverflowOpenChange') public openChange = new EventEmitter<boolean>(false);\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ElementRef, Injectable } from '@angular/core';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { ClrDragEvent } from '../../../utils/drag-and-drop/drag-event';\nimport { DatagridRenderOrganizer } from '../render/render-organizer';\n\nconst MIN_COLUMN_WIDTH = 96;\n\n// This service allows DatagridHeaderRenderer and ClrDatagridColumnSeparator\n// to share column resize data with each other.\n\n@Injectable()\nexport class ColumnResizerService {\n  constructor(private el: ElementRef, private domAdapter: DomAdapter, private organizer: DatagridRenderOrganizer) {}\n\n  private widthBeforeResize: number;\n\n  private _resizedBy: number = 0;\n\n  public get resizedBy() {\n    return this._resizedBy;\n  }\n\n  // is it within the maximum resize range to the left\n  public isWithinMaxResizeRange: boolean;\n\n  public get minColumnWidth() {\n    return this.domAdapter.minWidth(this.el.nativeElement) || MIN_COLUMN_WIDTH;\n  }\n\n  public get maxResizeRange() {\n    return this.widthBeforeResize - this.minColumnWidth;\n  }\n\n  public startResize(): void {\n    this._resizedBy = 0;\n    this.isWithinMaxResizeRange = true;\n    this.widthBeforeResize = this.domAdapter.clientRect(this.el.nativeElement).width;\n  }\n\n  public endResize(): void {\n    this.organizer.resize();\n  }\n\n  public get widthAfterResize(): number {\n    return this.widthBeforeResize + this._resizedBy;\n  }\n\n  public calculateResize(event: ClrDragEvent<any>): void {\n    const moveX = event.dragPosition.moveX;\n    // returns the resize amount within the allowed range\n    if (moveX < -this.maxResizeRange) {\n      this._resizedBy = -this.maxResizeRange;\n      this.isWithinMaxResizeRange = false;\n    } else {\n      this._resizedBy = moveX;\n      this.isWithinMaxResizeRange = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT } from '@angular/common';\nimport { Component, Inject, Renderer2 } from '@angular/core';\n\nimport { ClrDragEvent } from '../../utils/drag-and-drop/drag-event';\nimport { ColumnResizerService } from './providers/column-resizer.service';\nimport { TableSizeService } from './providers/table-size.service';\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-dg-column-separator',\n  template: `\n    <div class=\"datagrid-column-handle\" aria-hidden=\"true\"\n      clrDraggable \n      [clrGroup]=\"columnSeparatorId\" \n      (clrDragStart)=\"showTracker(resizeTrackerEl)\" \n      (clrDragMove)=\"moveTracker($event, resizeTrackerEl)\" \n      (clrDragEnd)=\"hideTracker(resizeTrackerEl)\"></div>\n    <div class=\"datagrid-column-resize-tracker\" #resizeTrackerEl></div>\n    `,\n  host: {\n    '[class.datagrid-column-separator]': 'true',\n  },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrDatagridColumnSeparator {\n  // Every column draggable separator should have its own unique ID\n  // in order to not conflict with other draggables/droppables.\n  constructor(\n    private columnResizerService: ColumnResizerService,\n    private renderer: Renderer2,\n    private tableSizeService: TableSizeService,\n    @Inject(DOCUMENT) private document: any,\n    @Inject(UNIQUE_ID) public columnSeparatorId: string\n  ) {}\n\n  public showTracker(resizeTrackerEl: HTMLElement) {\n    this.columnResizerService.startResize();\n    const tableHeight = this.tableSizeService.getColumnDragHeight();\n    this.renderer.setStyle(resizeTrackerEl, 'height', tableHeight);\n    this.renderer.setStyle(resizeTrackerEl, 'display', 'block');\n  }\n\n  public moveTracker(event: ClrDragEvent<any>, resizeTrackerEl: HTMLElement) {\n    this.columnResizerService.calculateResize(event);\n    this.renderer.setStyle(resizeTrackerEl, 'transform', `translateX(${this.columnResizerService.resizedBy}px)`);\n    this.renderer.setStyle(this.document.body, 'cursor', 'col-resize');\n    this.redFlagTracker(resizeTrackerEl);\n  }\n\n  public hideTracker(resizeTrackerEl: HTMLElement) {\n    this.columnResizerService.endResize();\n    this.renderer.setStyle(resizeTrackerEl, 'display', 'none');\n    this.renderer.setStyle(resizeTrackerEl, 'transform', `translateX(0px)`);\n    this.renderer.setStyle(this.document.body, 'cursor', 'auto');\n  }\n\n  private redFlagTracker(resizeTrackerEl: HTMLElement) {\n    let isWithinMaxResizeRange: boolean;\n    // @TODO(JEREMY) Review this, it will always be true because above is always null\n    if (isWithinMaxResizeRange !== this.columnResizerService.isWithinMaxResizeRange) {\n      isWithinMaxResizeRange = this.columnResizerService.isWithinMaxResizeRange;\n      if (!isWithinMaxResizeRange) {\n        this.renderer.addClass(resizeTrackerEl, 'exceeded-max');\n      } else {\n        this.renderer.removeClass(resizeTrackerEl, 'exceeded-max');\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-column-toggle-title',\n  template: `<ng-content></ng-content>`,\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggleTitle {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Output } from '@angular/core';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\n\n@Component({\n  selector: 'clr-dg-column-toggle-button',\n  template: `\n    <button class=\"btn btn-sm btn-link switch-button\"\n            (click)=\"selectAll()\"\n            [disabled]=\"allHideablesVisible\"\n            type=\"button\">\n      <ng-content></ng-content>\n    </button>\n  `,\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggleButton {\n  constructor(private columnsService: ColumnsService) {}\n\n  private allSelected: Subject<boolean> = new EventEmitter();\n\n  @Output('clrAllSelected')\n  get clrAllSelected(): Observable<boolean> {\n    return this.allSelected.asObservable();\n  }\n\n  private hideableColumns(): BehaviorSubject<ColumnState>[] {\n    return this.columnsService.columns.filter(column => column.value.hideable);\n  }\n\n  get allHideablesVisible() {\n    return this.hideableColumns().filter(column => column.value.hidden).length === 0;\n  }\n\n  selectAll() {\n    this.hideableColumns().forEach(hideableColumn =>\n      this.columnsService.emitStateChange(hideableColumn, {\n        hidden: false,\n        changes: [DatagridColumnChanges.HIDDEN],\n      })\n    );\n    this.allSelected.next(true);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Inject, ContentChild, ElementRef, NgZone, PLATFORM_ID, ViewChild } from '@angular/core';\n\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { ClrPopoverPosition } from '../../utils/popover/interfaces/popover-position.interface';\nimport { ClrAxis } from '../../utils/popover/enums/axis.enum';\nimport { ClrAlignment } from '../../utils/popover/enums/alignment.enum';\nimport { ClrSide } from '../../utils/popover/enums/side.enum';\nimport { ClrPopoverEventsService } from '../../utils/popover/providers/popover-events.service';\nimport { ClrPopoverPositionService } from '../../utils/popover/providers/popover-position.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\nimport { isPlatformBrowser } from '@angular/common';\nimport { ClrDatagridColumnToggleTitle } from './datagrid-column-toggle-title';\nimport { ClrDatagridColumnToggleButton } from './datagrid-column-toggle-button';\n\n@Component({\n  selector: 'clr-dg-column-toggle',\n  template: `    \n      <button\n              role=\"button\"\n              type=\"button\"\n              class=\"btn btn-sm btn-link column-toggle--action\"\n              clrPopoverAnchor\n              clrPopoverOpenCloseButton\n              [attr.aria-controls]=\"popoverId\"\n              [attr.aria-owns]=\"popoverId\">\n          <clr-icon shape=\"view-columns\" [attr.title]=\"commonStrings.keys.pickColumns\"></clr-icon>\n      </button>\n      <div class=\"column-switch\"\n           role=\"dialog\"\n           [id]=\"popoverId\"\n           clrFocusTrap\n           *clrPopoverContent=\"openState at smartPosition; outsideClickToClose: true; scrollToClose: true\">\n          <div class=\"switch-header\">\n              <div class=\"clr-sr-only\" tabindex=\"-1\" #menuDescription>{{commonStrings.keys.showColumnsMenuDescription}}</div>\n              <div class=\"clr-sr-only\" tabindex=\"-1\" #allSelected>{{commonStrings.keys.allColumnsSelected}}</div>\n              <ng-container *ngIf=\"!customToggleTitle\">{{commonStrings.keys.showColumns}}</ng-container>\n              <ng-content select=\"clr-dg-column-toggle-title\"></ng-content>\n              <button class=\"btn btn-sm btn-link toggle-switch-close-button\"\n                      clrPopoverCloseButton\n                      type=\"button\"\n                      [attr.aria-label]=\"commonStrings.keys.close\">\n                  <clr-icon shape=\"close\" \n                            [attr.title]=\"commonStrings.keys.close\"></clr-icon>\n              </button>\n          </div>\n          <ul class=\"switch-content list-unstyled\">\n              <li *ngFor=\"let columnState of hideableColumnStates;trackBy: trackByFn\">\n                  <clr-checkbox-wrapper>\n                      <input clrCheckbox type=\"checkbox\"\n                             [disabled]=\"hasOnlyOneVisibleColumn && !columnState.hidden\"\n                             [ngModel]=\"!columnState.hidden\"\n                             (ngModelChange)=\"toggleColumnState(columnState, !$event)\">\n                      <label>\n                          <ng-template [ngTemplateOutlet]=\"columnState.titleTemplateRef\"></ng-template>\n                      </label>\n                  </clr-checkbox-wrapper>\n              </li>\n          </ul>\n          <div class=\"switch-footer\">\n              <ng-content select=\"clr-dg-column-toggle-button\"></ng-content>\n              <clr-dg-column-toggle-button *ngIf=\"!customToggleButton\" (clrAllSelected)=\"allColumnsSelected()\">\n                  {{commonStrings.keys.selectAll}}\n              </clr-dg-column-toggle-button>\n          </div>\n      </div>\n  `,\n  host: { '[class.column-switch-wrapper]': 'true', '[class.active]': 'openState' },\n  providers: [UNIQUE_ID_PROVIDER, ClrPopoverEventsService, ClrPopoverPositionService, ClrPopoverToggleService],\n})\n/** @deprecated since 2.0, remove in 3.0 */\nexport class ClrDatagridColumnToggle {\n  private _allColumnsVisible: boolean;\n\n  // Smart Popover\n  public smartPosition: ClrPopoverPosition = {\n    axis: ClrAxis.VERTICAL,\n    side: ClrSide.BEFORE,\n    anchor: ClrAlignment.START,\n    content: ClrAlignment.START,\n  };\n  public openState;\n\n  @ContentChild(ClrDatagridColumnToggleTitle) customToggleTitle: ClrDatagridColumnToggleTitle;\n  @ContentChild(ClrDatagridColumnToggleButton) customToggleButton: ClrDatagridColumnToggleButton;\n  @ViewChild('menuDescription', { read: ElementRef })\n  private menuDescriptionElement: ElementRef<HTMLElement>;\n  @ViewChild('allSelected', { read: ElementRef })\n  private allSelectedElement: ElementRef<HTMLElement>;\n\n  public get allColumnsVisible(): boolean {\n    return this._allColumnsVisible;\n  }\n\n  public set allColumnsVisible(value: boolean) {\n    this._allColumnsVisible = value;\n  }\n\n  constructor(\n    public commonStrings: ClrCommonStringsService,\n    private columnsService: ColumnsService,\n    @Inject(UNIQUE_ID) public columnSwitchId: string,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private zone: NgZone,\n    @Inject(UNIQUE_ID) public popoverId: string\n  ) {}\n\n  get hideableColumnStates(): ColumnState[] {\n    const hideables = this.columnsService.columns.filter(column => column.value.hideable);\n    return hideables.map(column => column.value);\n  }\n\n  get hasOnlyOneVisibleColumn(): boolean {\n    const nbNonHideableColumns = this.columnsService.columns.length - this.hideableColumnStates.length;\n    // this should only return true when there is no non-hideable columns.\n    return (\n      nbNonHideableColumns === 0 && this.hideableColumnStates.filter(columnState => !columnState.hidden).length === 1\n    );\n  }\n\n  toggleColumnState(columnState: ColumnState, event: boolean) {\n    const columnToToggle = this.columnsService.columns.filter(column => column.value === columnState)[0];\n    this.columnsService.emitStateChange(columnToToggle, {\n      hidden: event,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n  }\n\n  toggleSwitchPanel() {\n    this.openState = !this.openState;\n    if (this.openState && isPlatformBrowser(this.platformId) && this.menuDescriptionElement) {\n      this.zone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.menuDescriptionElement.nativeElement.focus();\n        });\n      });\n    }\n  }\n\n  allColumnsSelected() {\n    this.allSelectedElement.nativeElement.focus();\n  }\n\n  // Without tracking the checkboxes get rerendered on model update, which leads\n  // to loss of focus after checkbox toggle.\n  trackByFn(index) {\n    return index;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Optional } from '@angular/core';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\n\n/*\n * I don't think this deserves to be in IfExpanded itself,\n * so I'm adding a second directive on the same selector for now just for the datagrid\n */\n@Directive({ selector: '[clrIfExpanded]' })\nexport class DatagridDetailRegisterer {\n  constructor(@Optional() private expandableRowsCount: ExpandableRowsCount) {\n    if (this.expandableRowsCount) {\n      this.expandableRowsCount.register();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.expandableRowsCount) {\n      this.expandableRowsCount.unregister();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { DetailService } from './providers/detail.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-dg-detail-header',\n  host: {\n    '[class.datagrid-detail-header]': 'true',\n  },\n  template: `\n    <div class=\"datagrid-detail-header-title\" clrFocusOnViewInit [id]=\"titleId\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"datagrid-detail-pane-close\">\n      <button type=\"button\" \n              class=\"btn btn-link\" \n              (click)=\"detailService.close()\" \n              [attr.aria-label]=\"commonStrings.keys.close\">\n        <clr-icon size=\"24\" shape=\"times\"></clr-icon>\n      </button>\n    </div>\n  `,\n})\nexport class ClrDatagridDetailHeader {\n  get titleId() {\n    return `${this.detailService.id}-title`;\n  }\n\n  constructor(public detailService: DetailService, public commonStrings: ClrCommonStringsService) {}\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, HostListener } from '@angular/core';\nimport { DetailService } from './providers/detail.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrDatagridDetailHeader } from './datagrid-detail-header';\n\n@Component({\n  selector: 'clr-dg-detail',\n  host: {\n    '[class.datagrid-detail-pane]': 'true',\n  },\n  // We put the *ngIf on the clrFocusTrap so it doesn't always exist on the page\n  // have to test for presence of header for aria-describedby because it was causing unit tests to crash\n  template: `\n    <div [clrFocusTrap]=\"{strict: false}\" class=\"datagrid-detail-pane-content\" *ngIf=\"detailService.isOpen\" role=\"dialog\"\n         [id]=\"detailService.id\" aria-modal=\"true\" [attr.aria-describedby]=\"header ? header.titleId : ''\">\n    <div class=\"clr-sr-only\">{{commonStrings.keys.detailPaneStart}}</div>\n      <ng-content></ng-content>\n      <div class=\"clr-sr-only\">{{commonStrings.keys.detailPaneEnd}}</div>\n    </div>\n    `,\n})\nexport class ClrDatagridDetail {\n  @ContentChild(ClrDatagridDetailHeader) public header: ClrDatagridDetailHeader;\n\n  constructor(public detailService: DetailService, public commonStrings: ClrCommonStringsService) {}\n\n  @HostListener('document:keyup.esc')\n  closeCheck(): void {\n    this.detailService.close();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Directive,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { DetailService } from './providers/detail.service';\n\n@Directive({\n  selector: '[clrIfDetail]',\n})\nexport class ClrIfDetail implements OnInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n  private skip = false; // This keeps us from resetting the input and calling the toggle twice\n\n  @Input('clrIfDetail')\n  set state(model) {\n    if (!this.skip) {\n      this.detailService.toggle(model);\n    }\n    this.skip = false;\n  }\n\n  @Output('clrIfDetailChange') public stateChange = new EventEmitter<any>(null);\n\n  constructor(\n    private templateRef: TemplateRef<any>,\n    private viewContainer: ViewContainerRef,\n    private detailService: DetailService\n  ) {\n    this.detailService.enabled = true;\n  }\n\n  ngOnInit() {\n    this.subscriptions.push(\n      this.detailService.stateChange.subscribe(state => {\n        if (state === true) {\n          this.togglePanel(true);\n        } else {\n          this.togglePanel(false);\n        }\n      })\n    );\n  }\n\n  private togglePanel(showPanel: boolean) {\n    let stateChangeParams = null;\n    this.viewContainer.clear();\n    if (showPanel === true) {\n      this.viewContainer.createEmbeddedView(this.templateRef, { $implicit: this.detailService.state });\n      this.skip = true;\n      stateChangeParams = this.detailService.state;\n    }\n\n    this.stateChange.emit(stateChangeParams);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-dg-detail-body',\n  template: `\n    <div class=\"clr-dg-detail-body-wrapper\">\n      <ng-content></ng-content>\n    </div>\n  `,\n  host: {\n    '[class.datagrid-detail-body]': 'true',\n  },\n})\nexport class ClrDatagridDetailBody {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild } from '@angular/core';\n\nimport { ClrDatagridColumnToggle } from './datagrid-column-toggle';\nimport { Selection } from './providers/selection';\nimport { SelectionType } from './enums/selection-type';\nimport { ColumnsService } from './providers/columns.service';\nimport { DetailService } from './providers/detail.service';\n\n@Component({\n  selector: 'clr-dg-footer',\n  template: `\n        <ng-container\n            *ngIf=\"(selection.selectionType === SELECTION_TYPE.Multi) && (selection.current.length > 0)\">\n          <div class=\"clr-form-control-disabled\">\n              <clr-checkbox-wrapper class=\"datagrid-footer-select\">\n                <input clrCheckbox type=\"checkbox\" checked=\"checked\" disabled>\n                <label>{{selection.current.length}}</label>\n            </clr-checkbox-wrapper>\n          </div>\n        </ng-container>\n        <ng-container *ngIf=\"!detailService.isOpen\">\n          <ng-content select=\"clr-dg-column-toggle\"></ng-content>\n          <clr-dg-column-toggle *ngIf=\"hasHideableColumns && !toggle\"></clr-dg-column-toggle>\n          <div class=\"datagrid-footer-description\">\n              <ng-content></ng-content>\n          </div>\n        </ng-container>\n        <ng-content select=\"clr-dg-pagination\"></ng-content>\n    `,\n  host: {\n    '[class.datagrid-footer]': 'true',\n  },\n})\nexport class ClrDatagridFooter<T = any> {\n  constructor(\n    public selection: Selection<T>,\n    public detailService: DetailService,\n    private columnsService: ColumnsService\n  ) {}\n\n  /* reference to the enum so that template can access */\n  public SELECTION_TYPE = SelectionType;\n\n  @ContentChild(ClrDatagridColumnToggle) toggle: ClrDatagridColumnToggle;\n\n  get hasHideableColumns(): boolean {\n    return this.columnsService.hasHideableColumns;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { InjectionToken } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ColumnState } from '../interfaces/column-state.interface';\n\nexport const COLUMN_STATE = new InjectionToken<ColumnState>('COLUMN_STATE');\n\nexport function columnStateFactory() {\n  return new BehaviorSubject<ColumnState>({\n    changes: [],\n  });\n}\n\nexport const COLUMN_STATE_PROVIDER = {\n  provide: COLUMN_STATE,\n  useFactory: columnStateFactory,\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum KeyCodes {\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n  Backspace = 'Backspace',\n  Tab = 'TAB',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Space = 'Space',\n  Home = 'Home',\n  End = 'End',\n}\n\nexport enum IEKeyCodes {\n  ArrowUp = 'Up',\n  ArrowDown = 'Down',\n  ArrowRight = 'Right',\n  ArrowLeft = 'Left',\n  Space = 'Spacebar',\n  Escape = 'Esc',\n  Home = 'Home',\n  End = 'End',\n  Enter = 'Enter',\n  Tab = 'Tab',\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// TODO: I'd like this to be a CheckedState enum for the checkboxes in the future.\nexport enum ClrSelectedState {\n  // WARNING! Unselected has the value 0,\n  // so it's actually the only one that will evaluate to false if cast to a boolean.\n  // Don't mess with the order!\n  UNSELECTED = 0,\n  SELECTED,\n  INDETERMINATE,\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Directive,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { BehaviorSubject, Subscription } from 'rxjs';\nimport { ColumnsService } from './providers/columns.service';\nimport { ColumnState } from './interfaces/column-state.interface';\nimport { DatagridColumnChanges } from './enums/column-changes.enum';\nimport { COLUMN_STATE } from './providers/column-state.provider';\n\n@Directive({ selector: '[clrDgHideableColumn]' })\n\n/**\n *\n * @description\n * A structural directive meant to be used inside a clr-dg-column component.\n *\n * <clr-dg-column>\n *       <ng-container *clrDgHideableColumn=\"{ hidden: true }\">\n *           User ID\n *       </ng-container>\n *   </clr-dg-column>\n *\n * It sets up state and properties so that columns can be manges for hide/show by a service and an internal\n * datagrid toggle component.\n *\n */\nexport class ClrDatagridHideableColumn implements OnDestroy {\n  /**\n   *\n   * @description\n   * Used to initialize the column with either hidden or visible state.\n   *\n   */\n  private _hidden: boolean;\n\n  /**\n   *\n   * @description\n   * Setter fn for the @Input with the same name as this structural directive.\n   * It allows the user to pre-configure the column's hide/show state. { hidden: true }\n   * It's more verbose but has more Clarity.\n   *\n   *\n   * @example\n   * *clrDgHideableColumn\n   * *clrDgHideableColumn={hidden: false}\n   * *clrDgHideableColumn={hidden: true}\n   *\n   */\n  @Input('clrDgHideableColumn')\n  set clrDgHideableColumn(value: { hidden: boolean }) {\n    this.clrDgHidden = value && value.hidden ? value.hidden : false;\n  }\n\n  @Input('clrDgHidden')\n  set clrDgHidden(hidden: boolean) {\n    this._hidden = hidden ? hidden : false;\n    this.columnsService.emitStateChange(this.columnState, {\n      hidden: this._hidden,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n  }\n\n  @Output('clrDgHiddenChange') public hiddenChange = new EventEmitter<boolean>();\n\n  constructor(\n    private titleTemplateRef: TemplateRef<any>,\n    private viewContainerRef: ViewContainerRef,\n    private columnsService: ColumnsService,\n    @Optional()\n    @Inject(COLUMN_STATE)\n    private columnState: BehaviorSubject<ColumnState>\n  ) {\n    this.viewContainerRef.createEmbeddedView(this.titleTemplateRef);\n\n    if (!this.columnState) {\n      throw new Error('The *clrDgHideableColumn directive can only be used inside of a clr-dg-column component.');\n    }\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnInit() {\n    this.columnsService.emitStateChange(this.columnState, {\n      hideable: true,\n      titleTemplateRef: this.titleTemplateRef,\n      hidden: this._hidden,\n      changes: [DatagridColumnChanges.HIDDEN],\n    });\n\n    this.subscriptions.push(\n      this.columnState.subscribe((state: ColumnState) => {\n        if (state.changes && state.changes.indexOf(DatagridColumnChanges.HIDDEN) > -1) {\n          this.hiddenChange.emit(state.hidden); // Can emit through @Output when desugared syntax is used\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Input, Optional, TrackByFunction } from '@angular/core';\n\nimport { Items } from './providers/items';\n\n@Directive({\n  selector: '[ngForTrackBy]',\n})\nexport class ClrDatagridItemsTrackBy<T = any> {\n  constructor(@Optional() private _items: Items<T>) {}\n\n  @Input('ngForTrackBy')\n  set trackBy(value: TrackByFunction<T>) {\n    if (this._items) {\n      this._items.trackBy = value;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input } from '@angular/core';\nimport { Page } from './providers/page';\n\n@Component({\n  selector: 'clr-dg-page-size',\n  template: `\n    <ng-content></ng-content>\n    <div class=\"clr-select-wrapper\">\n      <select [class.clr-page-size-select]=\"true\" [(ngModel)]=\"page.size\">\n        <option *ngFor=\"let option of pageSizeOptions\" [ngValue]=\"option\">{{option}}</option>\n      </select>\n    </div>\n  `,\n})\nexport class ClrDatagridPageSize {\n  @Input('clrPageSizeOptions') pageSizeOptions: number[];\n\n  constructor(public page: Page) {}\n\n  ngOnInit() {\n    if (!this.pageSizeOptions || this.pageSizeOptions.length === 0) {\n      this.pageSizeOptions = [this.page.size];\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Page } from './providers/page';\nimport { ClrDatagridPageSize } from './datagrid-page-size';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { DetailService } from './providers/detail.service';\n\n@Component({\n  selector: 'clr-dg-pagination',\n  template: `\n  <ng-container *ngIf=\"!detailService.isOpen\">\n    <div class=\"pagination-size\" *ngIf=\"_pageSizeComponent\">\n      <ng-content select=\"clr-dg-page-size\"></ng-content>\n    </div>\n    <div class=\"pagination-description\">\n      <ng-content></ng-content>\n    </div>\n    <div class=\"pagination-list\" *ngIf=\"page.last > 1\">\n      <button\n        type=\"button\" \n        class=\"pagination-first\" \n        [disabled]=\"page.current <= 1\" \n        (click)=\"page.current = 1\"\n        [attr.aria-label]=\"commonStrings.keys.firstPage\"\n        >\n        <clr-icon shape=\"step-forward-2 down\"></clr-icon>\n      </button>\n      <button \n        type=\"button\"\n        class=\"pagination-previous\" \n        [disabled]=\"page.current <= 1\" \n        (click)=\"page.current = page.current - 1\"\n        [attr.aria-label]=\"commonStrings.keys.previousPage\"\n        >\n        <clr-icon shape=\"angle left\"></clr-icon>\n      </button>\n        <input\n          *ngIf=\"!disableCurrentPageInput; else readOnly\"\n          #currentPageInput \n          type=\"text\" \n          class=\"pagination-current clr-input\" \n          [size]=\"page.last.toString().length\" \n          [value]=\"page.current\"\n          (keydown.enter)=\"updateCurrentPage($event)\" \n          (blur)=\"updateCurrentPage($event)\"\n          [attr.aria-label]=\"commonStrings.keys.currentPage\"\n          />\n          <ng-template #readOnly>\n            <span>{{ page.current }}</span>\n          </ng-template>\n\n          &nbsp;/&nbsp;<span [attr.aria-label]=\"commonStrings.keys.totalPages\">{{page.last}}</span>\n      <button \n        type=\"button\"\n        class=\"pagination-next\" \n        [disabled]=\"page.current >= page.last\" \n        (click)=\"page.current = page.current + 1\"\n        [attr.aria-label]=\"commonStrings.keys.nextPage\"\n        >\n        <clr-icon shape=\"angle right\"></clr-icon>\n      </button>\n      <button \n        type=\"button\" \n        class=\"pagination-last\" \n        [disabled]=\"page.current >= page.last\" \n        (click)=\"page.current = page.last\"\n        [attr.aria-label]=\"commonStrings.keys.lastPage\"\n        >\n        <clr-icon shape=\"step-forward-2 up\"></clr-icon>\n      </button>\n    </div>\n  </ng-container>\n  <ng-container *ngIf=\"detailService.isOpen\">\n      <div class=\"pagination-description-compact\">\n          {{page.firstItem + 1}}-{{page.lastItem + 1}} / {{page.totalItems}}\n      </div>\n      <div class=\"pagination-list\">\n          <button\n                  type=\"button\"\n                  class=\"pagination-previous\"\n                  [disabled]=\"page.current <= 1\"\n                  (click)=\"page.current = page.current - 1\"\n                  [attr.aria-label]=\"commonStrings.keys.previousPage\"\n          >\n              <clr-icon shape=\"angle left\"></clr-icon>\n          </button>\n          <span>{{page.current}}</span>\n          <button\n                  type=\"button\"\n                  class=\"pagination-next\"\n                  [disabled]=\"page.current >= page.last\"\n                  (click)=\"page.current = page.current + 1\"\n                  [attr.aria-label]=\"commonStrings.keys.nextPage\"\n          >\n              <clr-icon shape=\"angle right\"></clr-icon>\n          </button>\n      </div>\n  </ng-container>\n\n  `,\n  host: { '[class.pagination]': 'true' },\n})\nexport class ClrDatagridPagination implements OnDestroy, OnInit {\n  @ContentChild(ClrDatagridPageSize) _pageSizeComponent: ClrDatagridPageSize;\n  @ViewChild('currentPageInput') currentPageInputRef: ElementRef;\n\n  constructor(public page: Page, public commonStrings: ClrCommonStringsService, public detailService: DetailService) {\n    this.page.activated = true;\n  }\n\n  /**********\n   * Subscription to the Page service for page changes.\n   * Note: this only emits after the datagrid is initialized/stabalized and the page changes.\n   */\n  ngOnInit() {\n    /*\n     * Default page size is 10.\n     * The reason we set it here and not in the provider itself is because\n     * we don't want pagination if this component isn't present in the datagrid.\n     */\n    if (!this.page.size) {\n      this.page.size = 10;\n    }\n    this._pageSubscription = this.page.change.subscribe(current => this.currentChanged.emit(current));\n  }\n\n  /**\n   * Subscription to the page service changes\n   */\n  private _pageSubscription: Subscription;\n\n  ngOnDestroy() {\n    this.page.resetPageSize(true);\n    if (this._pageSubscription) {\n      this._pageSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Page size\n   */\n  public get pageSize(): number {\n    return this.page.size;\n  }\n\n  @Input('clrDgPageInputDisabled') public disableCurrentPageInput: boolean;\n\n  @Input('clrDgPageSize')\n  public set pageSize(size: number) {\n    if (typeof size === 'number') {\n      this.page.size = size;\n    }\n  }\n\n  /**\n   * Total items (needed to guess the last page)\n   */\n  public get totalItems(): number {\n    return this.page.totalItems;\n  }\n\n  @Input('clrDgTotalItems')\n  public set totalItems(total: number) {\n    if (typeof total === 'number') {\n      this.page.totalItems = total;\n    }\n  }\n\n  /**\n   * Last page\n   */\n  public get lastPage(): number {\n    return this.page.last;\n  }\n\n  @Input('clrDgLastPage')\n  public set lastPage(last: number) {\n    if (typeof last === 'number') {\n      this.page.last = last;\n    }\n  }\n\n  /**\n   * Current page\n   */\n  public get currentPage(): number {\n    return this.page.current;\n  }\n\n  @Input('clrDgPage')\n  public set currentPage(page: number) {\n    if (typeof page === 'number') {\n      this.page.current = page;\n    }\n  }\n\n  @Output('clrDgPageChange') currentChanged = new EventEmitter<number>(false);\n\n  /**\n   * Moves to the previous page if it exists\n   */\n  public previous() {\n    this.page.previous();\n  }\n\n  /**\n   * Moves to the next page if it exists\n   */\n  public next() {\n    this.page.next();\n  }\n\n  /**\n   * Index of the first item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get firstItem(): number {\n    return this.page.firstItem;\n  }\n\n  /**\n   * Index of the last item displayed on the current page, starting at 0, -1 if none displayed\n   */\n  public get lastItem(): number {\n    return this.page.lastItem;\n  }\n\n  /**\n   * Conditionally adds page numbers before and after the current page\n   */\n  public get middlePages(): number[] {\n    const middlePages: number[] = [];\n    if (this.page.current > 1) {\n      middlePages.push(this.page.current - 1);\n    }\n    middlePages.push(this.page.current);\n    if (this.page.current < this.page.last) {\n      middlePages.push(this.page.current + 1);\n    }\n    return middlePages;\n  }\n\n  /**\n   * We only update the pagination's current page on blur of the input field, or\n   * when they press enter.\n   */\n  public updateCurrentPage(event: any): void {\n    const parsed = parseInt(event.target.value, 10);\n\n    // if the input value, is not a number, we don't update the page\n    if (!isNaN(parsed)) {\n      if (parsed < 1) {\n        this.page.current = 1;\n      } else if (parsed > this.page.last) {\n        this.page.current = this.page.last;\n      } else {\n        this.page.current = parsed;\n      }\n    }\n\n    /**\n     * Set the input's value to the new current page. This is needed because the code\n     * above may have changed the value from what the user entered in.\n     */\n    this.currentPageInputRef.nativeElement.value = this.page.current;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentInit, Component, ContentChildren, Input, OnDestroy, QueryList } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { ExpandableRowsCount } from './providers/global-expandable-rows';\nimport { RowActionService } from './providers/row-action-service';\nimport { Selection } from './providers/selection';\nimport { SelectionType } from './enums/selection-type';\nimport { DatagridIfExpandService } from './datagrid-if-expanded.service';\n\n/**\n * Generic bland container serving various purposes for Datagrid.\n * For instance, it can help span a text over multiple rows in detail view.\n */\n@Component({\n  selector: 'clr-dg-row-detail',\n  template: `  \n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.datagrid-row-flex]': 'true',\n    '[class.datagrid-row-detail]': 'true',\n    '[class.datagrid-container]': 'cells.length === 0',\n  },\n})\nexport class ClrDatagridRowDetail<T = any> implements AfterContentInit, OnDestroy {\n  /* reference to the enum so that template can access it */\n  public SELECTION_TYPE = SelectionType;\n\n  constructor(\n    public selection: Selection,\n    public rowActionService: RowActionService,\n    public expand: DatagridIfExpandService,\n    public expandableRows: ExpandableRowsCount\n  ) {}\n\n  @ContentChildren(ClrDatagridCell) cells: QueryList<ClrDatagridCell>;\n\n  @Input('clrDgReplace')\n  set replace(value: boolean) {\n    this.expand.setReplace(!!value);\n  }\n  private subscriptions: Subscription[] = [];\n  public replacedRow = false;\n\n  ngAfterContentInit() {\n    this.subscriptions.push(\n      this.expand.replace.subscribe(replaceChange => {\n        this.replacedRow = replaceChange;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, OnDestroy, Renderer2 } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\n\nimport { HIDDEN_COLUMN_CLASS, STRICT_WIDTH_CLASS } from './constants';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnState } from '../interfaces/column-state.interface';\nimport { ALL_COLUMN_CHANGES, DatagridColumnChanges } from '../enums/column-changes.enum';\n\n@Directive({ selector: 'clr-dg-cell' })\nexport class DatagridCellRenderer implements OnDestroy {\n  private stateSubscription: Subscription;\n\n  private runAllChanges: DatagridColumnChanges[];\n\n  // @TODO(JEREMY) Work out how to dedupe some of this code between header and cell renderers\n  set columnState(columnState: BehaviorSubject<ColumnState>) {\n    if (this.stateSubscription) {\n      this.stateSubscription.unsubscribe();\n    }\n\n    this.runAllChanges = ALL_COLUMN_CHANGES;\n    this.stateSubscription = columnState.subscribe(state => this.stateChanges(state));\n  }\n\n  constructor(private el: ElementRef, private renderer: Renderer2, organizer: DatagridRenderOrganizer) {\n    this.subscriptions.push(\n      organizer.filterRenderSteps(DatagridRenderStep.CLEAR_WIDTHS).subscribe(() => this.clearWidth())\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    if (this.stateSubscription) {\n      this.stateSubscription.unsubscribe();\n    }\n  }\n\n  private stateChanges(state: ColumnState) {\n    if (this.runAllChanges) {\n      state.changes = this.runAllChanges;\n      delete this.runAllChanges;\n    }\n    if (state.changes && state.changes.length) {\n      state.changes.forEach(change => {\n        switch (change) {\n          case DatagridColumnChanges.WIDTH:\n            this.setWidth(state);\n            break;\n          case DatagridColumnChanges.HIDDEN:\n            this.setHidden(state);\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }\n\n  private clearWidth() {\n    this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    this.renderer.setStyle(this.el.nativeElement, 'width', null);\n  }\n\n  private setWidth(state: ColumnState) {\n    if (state.strictWidth) {\n      this.renderer.addClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    }\n    this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n  }\n\n  private setHidden(state: ColumnState) {\n    if (state.hidden) {\n      this.renderer.addClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// @TODO The top two are not used now, which is probably a performance drag that was broken along the way.\n// There was a previous pattern to hide everything to do computation then display, for Firefox, needs revisiting.\nexport const NO_LAYOUT_CLASS = 'datagrid-no-layout';\nexport const COMPUTE_WIDTH_CLASS = 'datagrid-computing-columns-width';\nexport const STRICT_WIDTH_CLASS = 'datagrid-fixed-width';\nexport const HIDDEN_COLUMN_CLASS = 'datagrid-hidden-column';\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, EventEmitter, Inject, OnDestroy, Output, Renderer2 } from '@angular/core';\nimport { BehaviorSubject, Subscription } from 'rxjs';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { ColumnResizerService } from '../providers/column-resizer.service';\nimport { HIDDEN_COLUMN_CLASS, STRICT_WIDTH_CLASS } from './constants';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnState } from '../interfaces/column-state.interface';\nimport { DatagridColumnChanges } from '../enums/column-changes.enum';\nimport { COLUMN_STATE, COLUMN_STATE_PROVIDER } from '../providers/column-state.provider';\nimport { ColumnsService } from '../providers/columns.service';\n\n@Directive({ selector: 'clr-dg-column', providers: [ColumnResizerService, COLUMN_STATE_PROVIDER] })\nexport class DatagridHeaderRenderer implements OnDestroy {\n  constructor(\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private organizer: DatagridRenderOrganizer,\n    private domAdapter: DomAdapter,\n    private columnResizerService: ColumnResizerService,\n    private columnsService: ColumnsService,\n    @Inject(COLUMN_STATE) private columnState: BehaviorSubject<ColumnState>\n  ) {\n    this.subscriptions.push(\n      this.organizer.filterRenderSteps(DatagridRenderStep.CLEAR_WIDTHS).subscribe(() => this.clearWidth())\n    );\n\n    this.subscriptions.push(columnState.subscribe(state => this.stateChanges(state)));\n  }\n\n  @Output('clrDgColumnResize') resizeEmitter: EventEmitter<number> = new EventEmitter();\n\n  /**\n   * Indicates if the column has a strict width, so it doesn't shrink or expand based on the content.\n   */\n  private widthSet: boolean = false;\n  private autoSet: boolean = false;\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  private stateChanges(state: ColumnState) {\n    if (state.changes && state.changes.length) {\n      state.changes.forEach(change => {\n        switch (change) {\n          case DatagridColumnChanges.WIDTH:\n            this.setWidth(state);\n            break;\n          case DatagridColumnChanges.HIDDEN:\n            this.setHidden(state);\n            break;\n          default:\n            break;\n        }\n      });\n    }\n  }\n\n  private clearWidth() {\n    // remove the width only if we set it, and it is not changed by dragging.\n    if (this.widthSet && !this.columnResizerService.resizedBy) {\n      this.renderer.setStyle(this.el.nativeElement, 'width', null);\n    }\n    if (this.autoSet) {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n    }\n  }\n\n  private detectStrictWidth(): number {\n    if (this.columnResizerService.resizedBy) {\n      return this.columnResizerService.widthAfterResize;\n    } else if (this.autoSet) {\n      return 0;\n    } else {\n      return this.domAdapter.userDefinedWidth(this.el.nativeElement);\n    }\n  }\n\n  private computeWidth(strictWidth: number): number {\n    let width: number = strictWidth;\n    if (!width) {\n      width = this.domAdapter.scrollWidth(this.el.nativeElement);\n    }\n    return width;\n  }\n\n  public getColumnWidthState(): Partial<ColumnState> {\n    const strictWidth = this.detectStrictWidth();\n    return {\n      width: this.computeWidth(strictWidth),\n      strictWidth: strictWidth,\n    };\n  }\n\n  public setColumnState(index: number) {\n    this.columnsService.columns[index] = this.columnState;\n  }\n\n  private setWidth(state: ColumnState) {\n    if (state.strictWidth) {\n      if (this.columnResizerService.resizedBy) {\n        this.resizeEmitter.emit(state.width);\n        this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n        this.widthSet = false;\n      }\n      // Don't set width if there is a user-defined one. Just add the strict width class.\n      this.renderer.addClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n      this.autoSet = false;\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, STRICT_WIDTH_CLASS);\n      this.renderer.setStyle(this.el.nativeElement, 'width', state.width + 'px');\n      this.widthSet = true;\n      this.autoSet = true;\n    }\n  }\n\n  private setHidden(state: ColumnState) {\n    if (state.hidden) {\n      this.renderer.addClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    } else {\n      this.renderer.removeClass(this.el.nativeElement, HIDDEN_COLUMN_CLASS);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * This version of the DomAdapter is for use on non-browser platforms, where there are no\n * nativeElements to use for calculations.\n */\n\nimport { Injectable } from '@angular/core';\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\n\n@Injectable()\nexport class NoopDomAdapter implements DomAdapter {\n  userDefinedWidth(element: any): number {\n    return 0;\n  }\n\n  scrollBarWidth(element: any) {\n    return 0;\n  }\n\n  scrollWidth(element: any) {\n    return 0;\n  }\n\n  computedHeight(element: any): number {\n    return 0;\n  }\n\n  clientRect(element: any): ClientRect {\n    return {\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: 0,\n      height: 0,\n    };\n  }\n\n  minWidth(element: any): number {\n    return 0;\n  }\n\n  focus(element: any): void {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterContentInit, ContentChildren, Directive, OnDestroy, QueryList } from '@angular/core';\n\nimport { DatagridCellRenderer } from './cell-renderer';\nimport { ColumnsService } from '../providers/columns.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({ selector: 'clr-dg-row, clr-dg-row-detail' })\nexport class DatagridRowRenderer implements AfterContentInit, OnDestroy {\n  @ContentChildren(DatagridCellRenderer) private cells: QueryList<DatagridCellRenderer>;\n\n  constructor(private columnsService: ColumnsService) {}\n\n  ngAfterContentInit() {\n    this.setColumnState(); // case #3 and #4\n    this.subscriptions.push(\n      this.cells.changes.subscribe(() => {\n        this.setColumnState(); // case #2\n        // Note on case #2: In the case of dynamic columns, when one column (header/cell together) gets deleted,\n        // this.cells.changes emits before this.columnsService.columns gets updated in MainRenderer\n        // when this.headers.changes emits as well. So that means there will be n+1 column state providers\n        // when this.cells.changes emits. Hence, we should quit earlier there. But this method will be called\n        // right after again when this.headers.changes emits. By then, there will be the same number of column state\n        // providers as column headers.\n      })\n    );\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  public setColumnState() {\n    // This method runs in four cases:\n    // 1. When the initial rows appear on the first page.\n    //    In this case, the method will be called in DatagridMainRenderer.\n    // 2. When columns (corresponding header/cells) get added and deleted.\n    //    In this case, the method will be called in DatagridMainRenderer. (Read the note on this case above).\n    // 3. When rows load asynchronously.\n    //    In this case, the method will be called in this class.\n    // 4. When rows load after switching pages.\n    //    In this case, the method will be called in this class (Basically, same as the case 3).\n    if (this.cells.length === this.columnsService.columns.length) {\n      this.cells.forEach((cell, index) => {\n        if (this.columnsService.columns[index]) {\n          cell.columnState = this.columnsService.columns[index];\n        }\n      });\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  AfterViewInit,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  OnDestroy,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DatagridRenderStep } from '../enums/render-step.enum';\nimport { Items } from '../providers/items';\nimport { Page } from '../providers/page';\nimport { TableSizeService } from '../providers/table-size.service';\n\nimport { DomAdapter } from '../../../utils/dom-adapter/dom-adapter';\nimport { DatagridHeaderRenderer } from './header-renderer';\nimport { NoopDomAdapter } from './noop-dom-adapter';\nimport { DatagridRenderOrganizer } from './render-organizer';\nimport { ColumnsService } from '../providers/columns.service';\nimport { DatagridColumnChanges } from '../enums/column-changes.enum';\nimport { DatagridRowRenderer } from './row-renderer';\nimport { ColumnStateDiff } from '../interfaces/column-state.interface';\nimport { DetailService } from '../providers/detail.service';\n\n// Fixes build error\n// @dynamic (https://github.com/angular/angular/issues/19698#issuecomment-338340211)\nexport const domAdapterFactory = (platformId: Object) => {\n  if (isPlatformBrowser(platformId)) {\n    return new DomAdapter();\n  } else {\n    return new NoopDomAdapter();\n  }\n};\n\n// Fixes build error\n// @dynamic (https://github.com/angular/angular/issues/19698#issuecomment-338340211)\n@Directive({\n  selector: 'clr-datagrid',\n  providers: [{ provide: DomAdapter, useFactory: domAdapterFactory, deps: [PLATFORM_ID] }],\n})\nexport class DatagridMainRenderer<T = any> implements AfterContentInit, AfterViewInit, AfterViewChecked, OnDestroy {\n  constructor(\n    private organizer: DatagridRenderOrganizer,\n    private items: Items,\n    private page: Page,\n    private domAdapter: DomAdapter,\n    private el: ElementRef,\n    private renderer: Renderer2,\n    private detailService: DetailService,\n    private tableSizeService: TableSizeService,\n    private columnsService: ColumnsService\n  ) {\n    this.subscriptions.push(\n      this.organizer\n        .filterRenderSteps(DatagridRenderStep.COMPUTE_COLUMN_WIDTHS)\n        .subscribe(() => this.computeHeadersWidth())\n    );\n\n    this.subscriptions.push(\n      this.page.sizeChange.subscribe(() => {\n        if (this._heightSet) {\n          this.resetDatagridHeight();\n        }\n      })\n    );\n    this.subscriptions.push(this.detailService.stateChange.subscribe(state => this.toggleDetailPane(state)));\n    this.subscriptions.push(this.items.change.subscribe(() => (this.shouldStabilizeColumns = true)));\n  }\n\n  @ContentChildren(DatagridHeaderRenderer) private headers: QueryList<DatagridHeaderRenderer>;\n  @ContentChildren(DatagridRowRenderer, { descendants: true })\n  private rows: QueryList<DatagridRowRenderer>; // if expandable row is expanded initially, query its cells too.\n\n  ngAfterContentInit() {\n    this.setupColumns();\n\n    this.subscriptions.push(\n      this.headers.changes.subscribe(() => {\n        // TODO: only re-stabilize if a column was added or removed. Reordering is fine.\n        // Need to setup columns before stabalizing them\n        this.setupColumns();\n        this.columnsSizesStable = false;\n        this.stabilizeColumns();\n      })\n    );\n  }\n\n  // Initialize and set Table width for horizontal scrolling here.\n  ngAfterViewInit() {\n    this.tableSizeService.table = this.el;\n  }\n\n  ngAfterViewChecked() {\n    if (this.shouldStabilizeColumns) {\n      this.stabilizeColumns();\n    }\n    if (this.shouldComputeHeight()) {\n      setTimeout(() => {\n        this.computeDatagridHeight();\n      });\n    }\n  }\n\n  private setupColumns() {\n    this.headers.forEach((header, index) => header.setColumnState(index));\n    this.columnsService.columns.splice(this.headers.length); // Trim any old columns\n    this.rows.forEach(row => row.setColumnState());\n  }\n\n  private _heightSet: boolean = false;\n\n  private shouldComputeHeight(): boolean {\n    if (!this._heightSet && this.page.size > 0) {\n      if (this.items.displayed.length === this.page.size) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public toggleDetailPane(state: boolean) {\n    if (this.headers) {\n      if (state && !this.columnsService.hasCache()) {\n        this.columnsService.cache();\n        this.headers.forEach((header, index) => {\n          if (index > 0) {\n            this.columnsService.emitStateChangeAt(index, {\n              changes: [DatagridColumnChanges.HIDDEN],\n              hidden: state,\n            });\n          }\n        });\n      } else if (!state) {\n        this.columnsService.resetToLastCache();\n      }\n    }\n  }\n\n  /**\n   * Computes the height of the datagrid.\n   *\n   * NOTE: We had to choose to set the height instead of the min-height because\n   * IE 11 requires the height on the parent for the children flex grow/shrink properties to work.\n   * When we used min-height, 1 1 auto doesn't used to work in IE11 :-(\n   * But this doesn't affect the fix. It works in both fixed & variable height datagrids.\n   *\n   * Refer: http://stackoverflow.com/questions/24396205/flex-grow-not-working-in-internet-explorer-11-0\n   */\n  private computeDatagridHeight() {\n    // IE doesn't return correct value for getComputedStyle(element).getPropertyValue(\"height\")\n    const value: number = this.domAdapter.clientRect(this.el.nativeElement).height;\n    this.renderer.setStyle(this.el.nativeElement, 'height', value + 'px');\n    this._heightSet = true;\n  }\n\n  private resetDatagridHeight() {\n    this.renderer.setStyle(this.el.nativeElement, 'height', '');\n    this._heightSet = false;\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  /**\n   * Makes each header compute its width.\n   */\n  private computeHeadersWidth() {\n    const nbColumns: number = this.headers.length;\n    let allStrict = true;\n    this.headers.forEach((header, index) => {\n      // On the last header column check whether all columns have strict widths.\n      // If all columns have strict widths, remove the strict width from the last column and make it the column's\n      // minimum width so that when all previous columns shrink, it will get a flexible width and cover the empty\n      // gap in the Datagrid.\n      const state: ColumnStateDiff = {\n        changes: [DatagridColumnChanges.WIDTH],\n        ...header.getColumnWidthState(),\n      };\n\n      if (!state.strictWidth) {\n        allStrict = false;\n      }\n\n      if (nbColumns === index + 1 && allStrict) {\n        state.strictWidth = 0;\n      }\n\n      this.columnsService.emitStateChangeAt(index, state);\n    });\n  }\n\n  /**\n   * Indicates if we want to re-compute columns width. This should only happen:\n   * 1) When headers change, with columns being added or removed\n   * 2) When rows are lazily loaded for the first time\n   */\n  private columnsSizesStable = false;\n\n  private shouldStabilizeColumns = true;\n\n  /**\n   * Triggers a whole re-rendring cycle to set column sizes, if needed.\n   */\n  private stabilizeColumns() {\n    this.shouldStabilizeColumns = false;\n    if (this.columnsSizesStable) {\n      // Nothing to do.\n      return;\n    }\n    // Resize when the rows are loaded.\n    if (this.items.displayed.length > 0) {\n      this.organizer.resize();\n      this.columnsSizesStable = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrFormsModule } from '../../forms/forms.module';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrLoadingModule } from '../../utils/loading/loading.module';\nimport { ClrOutsideClickModule } from '../../utils/outside-click/outside-click.module';\nimport { ClrDragAndDropModule } from '../../utils/drag-and-drop/drag-and-drop.module';\nimport { ClrExpandableAnimationModule } from '../../utils/animations/expandable-animation/expandable-animation.module';\nimport { ClrSpinnerModule } from '../../progress/spinner/spinner.module';\nimport { ClrPopoverModuleNext } from '../../utils/popover/popover.module';\nimport { ClrFocusTrapModule } from '../../utils/focus-trap/focus-trap.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { DatagridStringFilter } from './built-in/filters/datagrid-string-filter';\nimport { DatagridNumericFilter } from './built-in/filters/datagrid-numeric-filter';\nimport { ActionableOompaLoompa } from './chocolate/actionable-oompa-loompa';\nimport { DatagridWillyWonka } from './chocolate/datagrid-willy-wonka';\nimport { ExpandableOompaLoompa } from './chocolate/expandable-oompa-loompa';\nimport { ClrDatagrid } from './datagrid';\nimport { ClrDatagridActionBar } from './datagrid-action-bar';\nimport { ClrDatagridActionOverflow } from './datagrid-action-overflow';\nimport { ClrDatagridCell } from './datagrid-cell';\nimport { ClrDatagridColumn } from './datagrid-column';\nimport { ClrDatagridColumnSeparator } from './datagrid-column-separator';\nimport { ClrDatagridColumnToggle } from './datagrid-column-toggle';\nimport { ClrDatagridColumnToggleButton } from './datagrid-column-toggle-button';\nimport { ClrDatagridColumnToggleTitle } from './datagrid-column-toggle-title';\nimport { DatagridDetailRegisterer } from './datagrid-detail-registerer';\nimport { ClrDatagridDetail } from './datagrid-detail';\nimport { ClrIfDetail } from './datagrid-if-detail';\nimport { ClrDatagridDetailHeader } from './datagrid-detail-header';\nimport { ClrDatagridDetailBody } from './datagrid-detail-body';\nimport { ClrDatagridFilter } from './datagrid-filter';\nimport { ClrDatagridFooter } from './datagrid-footer';\nimport { ClrDatagridHideableColumn } from './datagrid-hideable-column';\nimport { ClrDatagridItems } from './datagrid-items';\nimport { ClrDatagridItemsTrackBy } from './datagrid-items-trackby';\nimport { ClrDatagridPagination } from './datagrid-pagination';\nimport { ClrDatagridPageSize } from './datagrid-page-size';\nimport { ClrDatagridPlaceholder } from './datagrid-placeholder';\nimport { ClrDatagridRow } from './datagrid-row';\nimport { ClrDatagridRowDetail } from './datagrid-row-detail';\nimport { DatagridCellRenderer } from './render/cell-renderer';\nimport { DatagridHeaderRenderer } from './render/header-renderer';\nimport { DatagridMainRenderer } from './render/main-renderer';\nimport { DatagridRowRenderer } from './render/row-renderer';\nimport { WrappedCell } from './wrapped-cell';\nimport { WrappedColumn } from './wrapped-column';\nimport { WrappedRow } from './wrapped-row';\n\nexport const CLR_DATAGRID_DIRECTIVES: Type<any>[] = [\n  // Core\n  ClrDatagrid,\n  ClrDatagridActionBar,\n  ClrDatagridActionOverflow,\n  ClrDatagridColumn,\n  ClrDatagridColumnSeparator,\n  ClrDatagridColumnToggle,\n  ClrDatagridHideableColumn,\n  ClrDatagridFilter,\n  ClrDatagridItems,\n  ClrDatagridItemsTrackBy,\n  ClrDatagridRow,\n  ClrDatagridRowDetail,\n  DatagridDetailRegisterer,\n  ClrDatagridCell,\n  ClrDatagridFooter,\n  ClrDatagridPagination,\n  ClrDatagridPageSize,\n  ClrDatagridPlaceholder,\n  ClrDatagridColumnToggleButton,\n  ClrDatagridColumnToggleTitle,\n  ClrDatagridDetail,\n  ClrIfDetail,\n  ClrDatagridDetailHeader,\n  ClrDatagridDetailBody,\n  WrappedCell,\n  WrappedColumn,\n  WrappedRow,\n\n  // Renderers\n  DatagridMainRenderer,\n  DatagridHeaderRenderer,\n  DatagridRowRenderer,\n  DatagridCellRenderer,\n\n  // Chocolate\n  DatagridWillyWonka,\n  ActionableOompaLoompa,\n  ExpandableOompaLoompa,\n\n  // Built-in shortcuts\n  DatagridStringFilter,\n  DatagridNumericFilter,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ClrIconModule,\n    ClrFormsModule,\n    FormsModule,\n    ClrLoadingModule,\n    ClrConditionalModule,\n    ClrOutsideClickModule,\n    ClrExpandableAnimationModule,\n    ClrDragAndDropModule,\n    ClrSpinnerModule,\n    ClrPopoverModuleNext,\n    ClrFocusTrapModule,\n    ClrFocusOnViewInitModule,\n  ],\n  declarations: [CLR_DATAGRID_DIRECTIVES],\n  exports: [CLR_DATAGRID_DIRECTIVES],\n  entryComponents: [WrappedCell, WrappedColumn, WrappedRow],\n})\nexport class ClrDatagridModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, HostBinding, Inject, Input, OnInit, Optional, Output, SkipSelf } from '@angular/core';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\n\n@Component({\n  selector: 'clr-stack-block',\n  template: `\n    <div class=\"stack-block-label\"\n        (click)=\"toggleExpand()\"\n        (keyup.enter)=\"toggleExpand()\"\n        (keyup.space)=\"toggleExpand()\"\n        (focus)=\"focused = true\"\n        (blur)=\"focused = false\"\n        [id]=\"uniqueId\"\n        [attr.role]=\"role\"\n        [attr.tabindex]=\"tabIndex\"\n        [attr.aria-expanded]=\"ariaExpanded\"\n        [attr.aria-controls]=\"getStackChildrenId()\"\n        [attr.aria-posinset]=\"ariaPosinset\"\n        [attr.aria-level]=\"ariaLevel\"\n        [attr.aria-setsize]=\"ariaSetsize\"\n        >\n      <clr-icon shape=\"caret\"\n                class=\"stack-block-caret\"\n                *ngIf=\"expandable\"\n                [attr.dir]=\"caretDirection\"\n                [attr.title]=\"caretTitle\"></clr-icon>\n      <span class=\"clr-sr-only\" *ngIf=\"getChangedValue\">{{commonStrings.keys.stackViewChanged}}</span>\n      <div class=\"stack-view-key\">\n        <!-- This structure changed to fix #3567 and the a11y request was to move away from dl's -->\n        <!-- I added the key class to update css targets for the original component style -->\n        <ng-content select=\"clr-stack-label\"></ng-content>\n      </div>\n      <div class=\"stack-block-content\">\n        <ng-content></ng-content>\n      </div>\n    </div>\n\n    <clr-expandable-animation [clrExpandTrigger]=\"expanded\" class=\"stack-children\" [attr.id]=\"getStackChildrenId()\">\n      <div [style.height]=\"expanded ? 'auto' : 0\" role=\"region\">\n        <ng-content select=\"clr-stack-block\"></ng-content>\n      </div>\n    </clr-expandable-animation>\n  `,\n  // Custom elements are inline by default\n  styles: [\n    `\n      :host {\n        display: block;\n      }\n    `,\n  ],\n  // Make sure the host has the proper class for styling purposes\n  host: { '[class.stack-block]': 'true' },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrStackBlock implements OnInit {\n  @HostBinding('class.stack-block-expanded')\n  @Input('clrSbExpanded')\n  expanded: boolean = false;\n  @Output('clrSbExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n  @HostBinding('class.stack-block-expandable')\n  @Input('clrSbExpandable')\n  expandable: boolean = false;\n\n  focused: boolean = false;\n  private _changedChildren: number = 0;\n  private _fullyInitialized: boolean = false;\n  private _changed: boolean = false;\n\n  @HostBinding('class.stack-block-changed')\n  get getChangedValue(): boolean {\n    return this._changed || (this._changedChildren > 0 && !this.expanded);\n  }\n\n  @Input('clrSbNotifyChange')\n  set setChangedValue(value: boolean) {\n    this._changed = value;\n\n    if (this.parent && this._fullyInitialized) {\n      if (value) {\n        this.parent._changedChildren++;\n      } else {\n        this.parent._changedChildren--;\n      }\n    }\n  }\n\n  /**\n   * Depth of the stack view starting from 1 for first level\n   */\n  @Input('clrStackViewLevel') ariaLevel: number;\n\n  /**\n   * Total number of rows in a given group\n   */\n  @Input('clrStackViewSetsize') ariaSetsize: number;\n\n  /**\n   * The position of the row inside the grouped by level rows\n   */\n  @Input('clrStackViewPosinset') ariaPosinset: number;\n\n  /*\n   * This would be more efficient with @ContentChildren, with the parent ClrStackBlock\n   * querying for children StackBlocks, but this feature is not available when downgrading\n   * the component for Angular 1.\n   */\n  constructor(\n    @SkipSelf()\n    @Optional()\n    private parent: ClrStackBlock,\n    @Inject(UNIQUE_ID) public uniqueId: string,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    if (parent) {\n      parent.addChild();\n    }\n  }\n\n  ngOnInit(): void {\n    // in order to access the parent ClrStackBlock's properties,\n    // the child ClrStackBlock has to be fully initialized at first.\n    this._fullyInitialized = true;\n  }\n\n  addChild(): void {\n    this.expandable = true;\n  }\n\n  toggleExpand(): void {\n    if (this.expandable) {\n      this.expanded = !this.expanded;\n      this.expandedChange.emit(this.expanded);\n    }\n  }\n\n  get caretDirection(): string {\n    return this.expanded ? 'down' : 'right';\n  }\n\n  get caretTitle(): string {\n    return this.expanded ? this.commonStrings.keys.collapse : this.commonStrings.keys.expand;\n  }\n\n  get role(): string {\n    return this.expandable ? 'button' : null;\n  }\n\n  get tabIndex(): string {\n    return this.expandable ? '0' : null;\n  }\n\n  @HostBinding('class.on-focus')\n  get onStackLabelFocus(): boolean {\n    return this.expandable && !this.expanded && this.focused;\n  }\n\n  get ariaExpanded(): string {\n    if (!this.expandable) {\n      return null;\n    } else {\n      return this.expanded ? 'true' : 'false';\n    }\n  }\n\n  getStackChildrenId() {\n    return this.expanded ? `clr-stack-children-${this.uniqueId}` : null;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'clr-stack-view',\n  template: `\n        <ng-content select=\"clr-stack-header\"></ng-content>\n        <div class=\"stack-view\"><ng-content></ng-content></div>\n    `,\n  // Custom elements are inline by default.\n  styles: [\n    `\n        :host { display: block; }\n    `,\n  ],\n})\nexport class ClrStackView {\n  /**\n   * Undocumented experimental feature: inline editing.\n   */\n  editable: boolean = false;\n\n  @Output('clrStackSave') save: EventEmitter<void> = new EventEmitter<void>(false);\n\n  private _editMode: boolean = false;\n\n  editingChange: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  get editing(): boolean {\n    return this.editable && this._editMode;\n  }\n\n  set editing(value: boolean) {\n    if (this.editable) {\n      this._editMode = value;\n      this.editingChange.emit(value);\n      if (!value) {\n        this.save.emit(null);\n      }\n    }\n  }\n  /**\n   * End of undocumented experimental feature.\n   */\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-header',\n  template: `\n        <h4 class=\"stack-header\">\n            <span class=\"stack-title\"><ng-content></ng-content></span>\n            \n            <span class=\"stack-actions\">\n                <ng-content select=\".stack-action\"></ng-content>\n                <!-- Undocumented experimental feature: inline editing. -->\n                <button *ngIf=\"stackView.editable\" class=\"stack-action btn btn-sm btn-link\" \n                        (click)=\"stackView.editing = !stackView.editing\" type=\"button\">\n                        Edit\n                </button>\n                <!-- End of undocumented experimental feature. -->\n            </span>\n        </h4>\n    `,\n  // Custom elements are inline by default\n  styles: [\n    `\n        :host { display: block; }\n    `,\n  ],\n})\nexport class ClrStackHeader {\n  constructor(public stackView: ClrStackView) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n */\n\nimport { EventEmitter } from '@angular/core';\nimport { ClrStackView } from './stack-view';\n\nexport class StackControl {\n  model: any;\n  modelChange: EventEmitter<any> = new EventEmitter<any>(false);\n\n  constructor(protected stackView: ClrStackView) {\n    // Make the ClrStackView editable, since it contains a StackControl\n    this.stackView.editable = true;\n    this.stackView.editingChange.subscribe((editing: boolean) => {\n      // Edit mode was closed\n      if (!editing) {\n        this.modelChange.emit(this.model);\n      }\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n *\n * TODO: support more types of inputs: checkbox, radio, ...\n * TODO: Mirror input attributes from the host to the actual input: size, min, max, placeholder, ...\n */\n\nimport { Component } from '@angular/core';\nimport { StackControl } from './stack-control';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-input',\n  inputs: ['model: clrModel', 'type'],\n  outputs: ['modelChange: clrModelChange'],\n  template: `\n        <span *ngIf=\"!stackView.editing\">{{model}}</span>\n        <input [type]=\"type\" *ngIf=\"stackView.editing\" [(ngModel)]=\"model\"/>\n    `,\n})\nexport class ClrStackInput extends StackControl {\n  type: string = 'text';\n\n  constructor(public stackView: ClrStackView) {\n    super(stackView);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n/**\n * Undocumented experimental feature: inline editing.\n *\n * TODO: Offer a a way to customize the value displayed, plain value may be unreadable.\n */\n\nimport { Component } from '@angular/core';\nimport { StackControl } from './stack-control';\nimport { ClrStackView } from './stack-view';\n\n@Component({\n  selector: 'clr-stack-select',\n  inputs: ['model: clrModel'],\n  outputs: ['modelChange: clrModelChange'],\n  template: `\n        <span *ngIf=\"!stackView.editing\">{{model}}</span>\n        <div class=\"select\" *ngIf=\"stackView.editing\" >\n            <select [(ngModel)]=\"model\">\n                <ng-content></ng-content>\n            </select>\n        </div>\n    `,\n})\nexport class ClrStackSelect extends StackControl {\n  constructor(public stackView: ClrStackView) {\n    super(stackView);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-stack-label, clr-stack-content' })\nexport class ClrStackViewCustomTags {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, Inject } from '@angular/core';\nimport { UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\n\n@Directive({\n  selector: '[clrStackInput]',\n  host: {\n    '[class.clr-input]': 'true',\n    '[attr.aria-labelledby]': 'uniqueId',\n  },\n})\nexport class ClrStackContentInput {\n  constructor(@Inject(UNIQUE_ID) public uniqueId: string) {}\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { ClrStackBlock } from './stack-block';\nimport { ClrStackHeader } from './stack-header';\nimport { ClrStackInput } from './stack-input';\nimport { ClrStackSelect } from './stack-select';\nimport { ClrStackView } from './stack-view';\nimport { ClrStackViewCustomTags } from './stack-view-custom-tags';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrExpandableAnimationModule } from '../../utils/animations/expandable-animation/expandable-animation.module';\nimport { ClrStackContentInput } from './stack-content-input';\n\nexport const CLR_STACK_VIEW_DIRECTIVES: Type<any>[] = [\n  ClrStackView,\n  ClrStackHeader,\n  ClrStackBlock,\n  ClrStackContentInput,\n  ClrStackViewCustomTags,\n  /**\n   * Undocumented experimental feature: inline editing.\n   */\n  ClrStackInput,\n  ClrStackSelect,\n  /**\n   * End of undocumented experimental feature.\n   */\n];\n\n@NgModule({\n  imports: [CommonModule, FormsModule, ClrIconModule, ClrExpandableAnimationModule],\n  declarations: [CLR_STACK_VIEW_DIRECTIVES],\n  exports: [CLR_STACK_VIEW_DIRECTIVES],\n})\nexport class ClrStackViewModule {}\n","/*\n* Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n* This software is released under MIT license.\n* The full license information can be found in LICENSE in the root directory of this project.\n*/\n\nimport { KeyCodes, IEKeyCodes } from './../../enums/key-codes.enum';\n\nexport function keyValidator(key: string) {\n  if (key === KeyCodes.ArrowUp || key === IEKeyCodes.ArrowUp) {\n    return KeyCodes.ArrowUp;\n  } else if (key === KeyCodes.ArrowDown || key === IEKeyCodes.ArrowDown) {\n    return KeyCodes.ArrowDown;\n  } else if (key === KeyCodes.ArrowRight || key === IEKeyCodes.ArrowRight) {\n    return KeyCodes.ArrowRight;\n  } else if (key === KeyCodes.ArrowLeft || key === IEKeyCodes.ArrowLeft) {\n    return KeyCodes.ArrowLeft;\n  } else if (key === KeyCodes.Space || key === IEKeyCodes.Space) {\n    return KeyCodes.Space;\n  } else if (key === KeyCodes.Escape || key === IEKeyCodes.Escape) {\n    return KeyCodes.Escape;\n  } else {\n    return key;\n  }\n}\n\nexport function preventArrowKeyScroll(event: KeyboardEvent) {\n  const validKey = keyValidator(event.key);\n\n  if (\n    validKey === KeyCodes.ArrowUp ||\n    validKey === KeyCodes.ArrowDown ||\n    validKey === KeyCodes.ArrowLeft ||\n    validKey === KeyCodes.ArrowRight\n  ) {\n    // prevent element container scroll\n    // MDN references this is really the only way to prevent native browser interactions\n    // https://developer.mozilla.org/en-US/docs/Web/Accessibility/Keyboard-navigable_JavaScript_widgets\n    event.preventDefault();\n  }\n}\n\nexport function getKeyCodes(event: KeyboardEvent) {\n  // IE does not properly follow the spec for `event.key` so we need to return a different enum for the key events\n  // We use `event.key` for optimal browser support, to detect IE/Edge check if `event.code` is undefined\n  const isIEKeyboardEvent = event.code === undefined;\n  return isIEKeyboardEvent ? IEKeyCodes : KeyCodes;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrSelectedState } from './selected-state.enum';\nimport { BehaviorSubject } from 'rxjs';\n\nexport abstract class TreeNodeModel<T> {\n  nodeId: string;\n  expanded: boolean;\n  selected = new BehaviorSubject<ClrSelectedState>(ClrSelectedState.UNSELECTED);\n  model: T | null;\n  /*\n   * Ideally, I would like to use a polymorphic this type here to ensure homogeneity of the tree, something like:\n   * abstract parent: this<T> | null;\n   * abstract children: this<T>[];\n   * But I'm hitting limitations on typescript not allowing that type in constructors or static methods.\n   * So I'm resorting to forcing override with more precise types by marking these abstract.\n   */\n  abstract parent: TreeNodeModel<T> | null;\n  abstract children: TreeNodeModel<T>[];\n\n  /*\n   * Being able to push this down to the RecursiveTreeNodeModel would require too much work on the angular components\n   * right now for them to know which kind of model they are using. So I'm lifting the public properties to this\n   * abstract parent class for now and we can revisit it later, when we're not facing such a close deadline.\n   */\n  loading = false;\n\n  destroy() {\n    // Just to be safe\n    this.selected.complete();\n  }\n\n  // Propagate by default when eager, don't propagate in the lazy-loaded tree.\n  setSelected(state: ClrSelectedState, propagateUp: boolean, propagateDown: boolean) {\n    if (state === this.selected.value) {\n      return;\n    }\n    this.selected.next(state);\n    if (propagateDown && state !== ClrSelectedState.INDETERMINATE && this.children) {\n      this.children.forEach(child => child.setSelected(state, false, true));\n    }\n    if (propagateUp && this.parent) {\n      this.parent._updateSelectionFromChildren();\n    }\n  }\n\n  toggleSelection(propagate: boolean) {\n    // Both unselected and indeterminate toggle to selected\n    const newState =\n      this.selected.value === ClrSelectedState.SELECTED ? ClrSelectedState.UNSELECTED : ClrSelectedState.SELECTED;\n    // NOTE: we always propagate selection up in this method because it is only called when the user takes an action.\n    // It should never be called from lifecycle hooks or app-provided inputs.\n    this.setSelected(newState, true, propagate);\n  }\n\n  private computeSelectionStateFromChildren() {\n    let oneSelected = false;\n    let oneUnselected = false;\n    // Using a good old for loop to exit as soon as we can tell, for better performance on large trees.\n    for (const child of this.children) {\n      switch (child.selected.value) {\n        case ClrSelectedState.INDETERMINATE:\n          return ClrSelectedState.INDETERMINATE;\n        case ClrSelectedState.SELECTED:\n          oneSelected = true;\n          if (oneUnselected) {\n            return ClrSelectedState.INDETERMINATE;\n          }\n          break;\n        case ClrSelectedState.UNSELECTED:\n        default:\n          // Default is the same as unselected, in case an undefined somehow made it all the way here.\n          oneUnselected = true;\n          if (oneSelected) {\n            return ClrSelectedState.INDETERMINATE;\n          }\n          break;\n      }\n    }\n    if (!oneSelected) {\n      return ClrSelectedState.UNSELECTED;\n    } else if (!oneUnselected) {\n      return ClrSelectedState.SELECTED;\n    }\n  }\n\n  /*\n   * Internal, but needs to be called by other nodes\n   */\n  _updateSelectionFromChildren() {\n    const newState = this.computeSelectionStateFromChildren();\n    if (newState === this.selected.value) {\n      return;\n    }\n    this.selected.next(newState);\n    if (this.parent) {\n      this.parent._updateSelectionFromChildren();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { TreeNodeModel } from './tree-node.model';\n\n/*\n * A declarative model is built by traversing the Angular component tree.\n * Declarative = Tree node components dictate the model\n */\nexport class DeclarativeTreeNodeModel<T> extends TreeNodeModel<T> {\n  constructor(parent: DeclarativeTreeNodeModel<T> | null) {\n    super();\n    this.parent = parent;\n    if (parent) {\n      parent._addChild(this);\n    }\n    this.children = [];\n  }\n\n  // Override for a more precise type\n  parent: DeclarativeTreeNodeModel<T> | null;\n  children: DeclarativeTreeNodeModel<T>[];\n\n  _addChild(child: DeclarativeTreeNodeModel<T>) {\n    this.children.push(child);\n  }\n\n  _removeChild(child: DeclarativeTreeNodeModel<T>) {\n    const index = this.children.indexOf(child);\n    if (index > -1) {\n      this.children.splice(index, 1);\n    }\n  }\n\n  destroy() {\n    if (this.parent) {\n      this.parent._removeChild(this);\n    }\n    super.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Optional, SkipSelf, TemplateRef } from '@angular/core';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\nimport { ClrRecursiveForOfContext } from './recursive-for-of';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class TreeFeaturesService<T> {\n  selectable = false;\n  eager = true;\n  recursion: {\n    template: TemplateRef<ClrRecursiveForOfContext<T>>;\n    root: RecursiveTreeNodeModel<T>[];\n  };\n  childrenFetched: Subject<void> = new Subject();\n}\n\nexport function treeFeaturesFactory<T>(existing: TreeFeaturesService<T>) {\n  return existing || new TreeFeaturesService();\n}\n\nexport const TREE_FEATURES_PROVIDER = {\n  provide: TreeFeaturesService,\n  useFactory: treeFeaturesFactory,\n  /*\n   * The Optional + SkipSelf pattern ensures that in case of nested components, only the root one will\n   * instantiate a new service and all its children will reuse the root's instance.\n   * If there are several roots (in this case, several independent trees on a page), each root will instantiate\n   * its own service so they won't interfere with one another.\n   *\n   * TL;DR - Optional + SkipSelf = 1 instance of TreeFeaturesService per tree.\n   */\n  deps: [[new Optional(), new SkipSelf(), TreeFeaturesService]],\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { TreeNodeModel } from './models/tree-node.model';\n\n@Injectable()\nexport class TreeFocusManagerService<T> {\n  public rootNodeModels: TreeNodeModel<T>[];\n\n  private focusedNodeId: string;\n\n  private _focusRequest: Subject<string> = new Subject();\n\n  private _focusChange: Subject<string> = new Subject();\n\n  get focusRequest(): Observable<string> {\n    return this._focusRequest.asObservable();\n  }\n\n  get focusChange(): Observable<string> {\n    return this._focusChange.asObservable();\n  }\n\n  private findSiblings(model: TreeNodeModel<T>): TreeNodeModel<T>[] {\n    // the method will return not only sibling models but also itself among them\n    if (model.parent) {\n      return model.parent.children;\n    } else {\n      return this.rootNodeModels;\n    }\n  }\n\n  private findLastVisibleInNode(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    // the method will traverse through until it finds the last visible node from the given node\n    if (!model) {\n      return;\n    }\n    if (model.expanded && model.children.length > 0) {\n      const children = model.children;\n      const lastChild = children[children.length - 1];\n      return this.findLastVisibleInNode(lastChild);\n    } else {\n      return model;\n    }\n  }\n\n  private findNextFocusable(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    if (!model) {\n      return;\n    }\n\n    const siblings = this.findSiblings(model);\n    const selfIndex = siblings.indexOf(model);\n\n    if (selfIndex < siblings.length - 1) {\n      return siblings[selfIndex + 1];\n    } else if (selfIndex === siblings.length - 1) {\n      return this.findNextFocusable(model.parent);\n    }\n  }\n\n  private findLastVisibleInTree(): TreeNodeModel<T> {\n    const lastRootNode =\n      this.rootNodeModels && this.rootNodeModels.length && this.rootNodeModels[this.rootNodeModels.length - 1];\n    return this.findLastVisibleInNode(lastRootNode);\n  }\n\n  private findNodeAbove(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    if (!model) {\n      return;\n    }\n\n    const siblings = this.findSiblings(model);\n    const selfIndex = siblings.indexOf(model);\n\n    if (selfIndex === 0) {\n      return model.parent;\n    } else if (selfIndex > 0) {\n      return this.findLastVisibleInNode(siblings[selfIndex - 1]);\n    }\n  }\n\n  private findNodeBelow(model: TreeNodeModel<T>): TreeNodeModel<T> {\n    if (!model) {\n      return;\n    }\n\n    if (model.expanded && model.children.length > 0) {\n      return model.children[0];\n    } else {\n      return this.findNextFocusable(model);\n    }\n  }\n\n  focusNode(model: TreeNodeModel<T>): void {\n    if (model) {\n      this._focusRequest.next(model.nodeId);\n    }\n  }\n\n  broadcastFocusedNode(nodeId: string): void {\n    if (this.focusedNodeId !== nodeId) {\n      this.focusedNodeId = nodeId;\n      this._focusChange.next(nodeId);\n    }\n  }\n\n  focusParent(model: TreeNodeModel<T>): void {\n    if (model) {\n      this.focusNode(model.parent);\n    }\n  }\n\n  focusFirstVisibleNode(): void {\n    const focusModel = this.rootNodeModels && this.rootNodeModels[0];\n    this.focusNode(focusModel);\n  }\n\n  focusLastVisibleNode(): void {\n    this.focusNode(this.findLastVisibleInTree());\n  }\n\n  focusNodeAbove(model: TreeNodeModel<T>): void {\n    this.focusNode(this.findNodeAbove(model));\n  }\n\n  focusNodeBelow(model: TreeNodeModel<T>): void {\n    this.focusNode(this.findNodeBelow(model));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef } from '@angular/core';\n\n@Directive({\n  selector: '.clr-treenode-link',\n})\nexport class ClrTreeNodeLink {\n  constructor(private el: ElementRef) {}\n\n  activate() {\n    if (this.el.nativeElement && this.el.nativeElement.click) {\n      this.el.nativeElement.click();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, style, transition, trigger, state } from '@angular/animations';\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  SkipSelf,\n  ViewChild,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { KeyCodes } from './../../utils/enums/key-codes.enum';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { keyValidator, preventArrowKeyScroll } from '../../utils/focus/key-focus/util';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { LoadingListener } from '../../utils/loading/loading-listener';\nimport { DeclarativeTreeNodeModel } from './models/declarative-tree-node.model';\nimport { ClrSelectedState } from './models/selected-state.enum';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { TreeFeaturesService, TREE_FEATURES_PROVIDER } from './tree-features.service';\nimport { TreeFocusManagerService } from './tree-focus-manager.service';\nimport { ClrTreeNodeLink } from './tree-node-link';\n\nconst LVIEW_CONTEXT_INDEX = 8;\n\n@Component({\n  selector: 'clr-tree-node',\n  templateUrl: './tree-node.html',\n  providers: [\n    UNIQUE_ID_PROVIDER,\n    TREE_FEATURES_PROVIDER,\n    IfExpandService,\n    { provide: LoadingListener, useExisting: IfExpandService },\n  ],\n  animations: [\n    trigger('toggleChildrenAnim', [\n      transition('collapsed => expanded', [style({ height: 0 }), animate(200, style({ height: '*' }))]),\n      transition('expanded => collapsed', [style({ height: '*' }), animate(200, style({ height: 0 }))]),\n      state('expanded', style({ height: '*', 'overflow-y': 'visible' })),\n      state('collapsed', style({ height: 0 })),\n    ]),\n  ],\n  host: {\n    '[attr.role]': '\"treeitem\"',\n    '[class.clr-tree-node]': 'true',\n  },\n})\nexport class ClrTreeNode<T> implements OnInit, OnDestroy {\n  STATES = ClrSelectedState;\n  private skipEmitChange = false;\n\n  constructor(\n    @Inject(UNIQUE_ID) public nodeId: string,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Optional()\n    @SkipSelf()\n    parent: ClrTreeNode<T>,\n    public featuresService: TreeFeaturesService<T>,\n    public expandService: IfExpandService,\n    public commonStrings: ClrCommonStringsService,\n    private focusManager: TreeFocusManagerService<T>,\n    injector: Injector\n  ) {\n    if (this.featuresService.recursion) {\n      // I'm completely stuck, we have to hack into private properties until either\n      // https://github.com/angular/angular/issues/14935 or https://github.com/angular/angular/issues/15998\n      // are fixed\n      // This is for non-ivy implementations\n      if ((<any>injector).view) {\n        this._model = (<any>injector).view.context.clrModel;\n      } else {\n        // Ivy puts this on a specific index of a _lView property\n        // tslint:disable-next-line\n        this._model = (<any>injector)._lView[LVIEW_CONTEXT_INDEX].clrModel;\n      }\n    } else {\n      // Force cast for now, not sure how to tie the correct type here to featuresService.recursion\n      this._model = new DeclarativeTreeNodeModel(parent ? <DeclarativeTreeNodeModel<T>>parent._model : null);\n    }\n    this._model.nodeId = this.nodeId;\n  }\n\n  _model: TreeNodeModel<T>;\n\n  isExpandable() {\n    if (typeof this.expandable !== 'undefined') {\n      return this.expandable;\n    }\n    return !!this.expandService.expandable || (this._model.children && this._model.children.length > 0);\n  }\n\n  @Input('clrSelected')\n  get selected(): ClrSelectedState | boolean {\n    return this._model.selected.value;\n  }\n  set selected(value: ClrSelectedState | boolean) {\n    this.featuresService.selectable = true;\n    // Gracefully handle falsy states like null or undefined because it's just easier than answering questions.\n    // This shouldn't happen with strict typing on the app's side, but it's not up to us.\n    if (value === null || typeof value === 'undefined') {\n      value = ClrSelectedState.UNSELECTED;\n    }\n    // We match booleans to the corresponding ClrSelectedState\n    if (typeof value === 'boolean') {\n      value = value ? ClrSelectedState.SELECTED : ClrSelectedState.UNSELECTED;\n    }\n    // We propagate only if the tree is in smart mode, and skip emitting the output when we set the input\n    // See https://github.com/vmware/clarity/issues/3073\n    this.skipEmitChange = true;\n    this._model.setSelected(value, this.featuresService.eager, this.featuresService.eager);\n    this.skipEmitChange = false;\n  }\n\n  @Output('clrSelectedChange') selectedChange = new EventEmitter<ClrSelectedState>(false);\n\n  get ariaSelected(): boolean {\n    return this.featuresService.selectable ? this._model.selected.value === ClrSelectedState.SELECTED : null;\n  }\n\n  // Allows the consumer to override our logic deciding if a node is expandable.\n  // Useful for recursive trees that don't want to pre-load one level ahead just to know which nodes are expandable.\n  @Input('clrExpandable') expandable: boolean | undefined;\n\n  // I'm caving on this, for tree nodes I think we can tolerate having a two-way binding on the component\n  // rather than enforce the clrIfExpanded structural directive for dynamic cases. Mostly because for the smart\n  // case, you can't use a structural directive, it would need to go on an ng-container.\n  @Input('clrExpanded')\n  get expanded(): boolean {\n    return this.expandService.expanded;\n  }\n  set expanded(value: boolean) {\n    this.expandService.expanded = value;\n  }\n\n  @Output('clrExpandedChange') expandedChange = new EventEmitter<boolean>();\n\n  private subscriptions: Subscription[] = [];\n\n  contentContainerTabindex = -1;\n  @ViewChild('contentContainer', { read: ElementRef, static: true })\n  private contentContainer: ElementRef;\n\n  ngOnInit() {\n    this._model.expanded = this.expanded;\n    this.subscriptions.push(\n      this._model.selected.pipe(filter(() => !this.skipEmitChange)).subscribe(value => {\n        this.selectedChange.emit(value);\n      })\n    );\n    this.subscriptions.push(\n      this.expandService.expandChange.subscribe(value => {\n        this.expandedChange.emit(value);\n        this._model.expanded = value;\n      })\n    );\n    this.subscriptions.push(\n      this.focusManager.focusRequest.subscribe(nodeId => {\n        if (this.nodeId === nodeId) {\n          this.focusTreeNode();\n        }\n      }),\n      this.focusManager.focusChange.subscribe(nodeId => {\n        this.checkTabIndex(nodeId);\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this._model.destroy();\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  // @ContentChild would have been more succinct\n  // but it doesn't offer a way to query only an immediate child\n  @ContentChildren(ClrTreeNodeLink, { descendants: false })\n  private treeNodeLinkList: QueryList<ClrTreeNodeLink>;\n\n  get treeNodeLink() {\n    return this.treeNodeLinkList && this.treeNodeLinkList.first;\n  }\n\n  private setTabIndex(value: number) {\n    this.contentContainerTabindex = value;\n    this.contentContainer.nativeElement.setAttribute('tabindex', value);\n  }\n\n  private checkTabIndex(nodeId: string): void {\n    if (isPlatformBrowser(this.platformId) && this.nodeId !== nodeId && this.contentContainerTabindex !== -1) {\n      this.setTabIndex(-1);\n    }\n  }\n\n  focusTreeNode(): void {\n    if (isPlatformBrowser(this.platformId) && document.activeElement !== this.contentContainer.nativeElement) {\n      this.setTabIndex(0);\n      this.contentContainer.nativeElement.focus();\n    }\n  }\n\n  broadcastFocusOnContainer() {\n    this.focusManager.broadcastFocusedNode(this.nodeId);\n  }\n\n  onKeyDown(event: KeyboardEvent) {\n    // Two reasons to prevent default behavior:\n    // 1. to prevent scrolling on arrow keys\n    // 2. Assistive Technology focus differs from Keyboard focus behavior.\n    //    By default, pressing arrow key makes AT focus go into the nested content of the item.\n    preventArrowKeyScroll(event);\n\n    // https://www.w3.org/TR/wai-aria-practices-1.1/#keyboard-interaction-22\n    switch (keyValidator(event.key)) {\n      case KeyCodes.ArrowUp:\n        this.focusManager.focusNodeAbove(this._model);\n        break;\n      case KeyCodes.ArrowDown:\n        this.focusManager.focusNodeBelow(this._model);\n        break;\n      case KeyCodes.ArrowRight:\n        this.expandOrFocusFirstChild();\n        break;\n      case KeyCodes.ArrowLeft:\n        this.collapseOrFocusParent();\n        break;\n      case KeyCodes.Home:\n        this.focusManager.focusFirstVisibleNode();\n        break;\n      case KeyCodes.End:\n        this.focusManager.focusLastVisibleNode();\n        break;\n      case KeyCodes.Enter:\n        this.triggerDefaultAction();\n        break;\n      case KeyCodes.Space:\n        // to prevent scrolling on space key in this specific case\n        event.preventDefault();\n        this.triggerDefaultAction();\n        break;\n      default:\n        break;\n    }\n  }\n\n  private expandOrFocusFirstChild() {\n    if (this.expanded) {\n      // if the node is already expanded and has children, focus its very first child\n      if (this._model.children.length > 0) {\n        this.focusManager.focusNodeBelow(this._model);\n      }\n    } else {\n      // we must check if the node is expandable, in order to set .expanded to true from false\n      // because we shouldn't set .expanded to true if it's not expandable node\n      if (this.isExpandable()) {\n        this.expandService.expanded = true;\n      }\n    }\n  }\n\n  private collapseOrFocusParent() {\n    if (this.expanded) {\n      this.expandService.expanded = false;\n    } else {\n      this.focusManager.focusParent(this._model);\n    }\n  }\n\n  private triggerDefaultAction() {\n    if (this.treeNodeLink) {\n      this.treeNodeLink.activate();\n    } else {\n      if (this.featuresService.selectable) {\n        this._model.toggleSelection(this.featuresService.eager);\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  HostListener,\n  Input,\n  OnDestroy,\n  QueryList,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { TreeFocusManagerService } from './tree-focus-manager.service';\nimport { TreeFeaturesService, TREE_FEATURES_PROVIDER } from './tree-features.service';\nimport { ClrTreeNode } from './tree-node';\n\n@Component({\n  selector: 'clr-tree',\n  template: `\n    <ng-content></ng-content>\n    <clr-recursive-children *ngIf=\"featuresService.recursion\"\n                            [children]=\"featuresService.recursion.root\"></clr-recursive-children>\n  `,\n  providers: [TREE_FEATURES_PROVIDER, TreeFocusManagerService],\n  host: {\n    '[attr.tabindex]': 'tabindex',\n    '[attr.role]': '\"tree\"',\n    '[attr.aria-multiselectable]': 'isMultiSelectable',\n  },\n})\nexport class ClrTree<T> implements AfterContentInit, OnDestroy {\n  constructor(\n    public featuresService: TreeFeaturesService<T>,\n    private focusManagerService: TreeFocusManagerService<T>,\n    private el: ElementRef\n  ) {}\n\n  private subscriptions: Subscription[] = [];\n\n  @Input('clrLazy')\n  set lazy(value: boolean) {\n    this.featuresService.eager = !value;\n  }\n\n  tabindex = 0;\n\n  get isMultiSelectable() {\n    return this.featuresService.selectable && this.rootNodes.length > 0;\n  }\n\n  @HostListener('focusin', ['$event'])\n  onFocusIn(event: FocusEvent) {\n    if (event.target === this.el.nativeElement) {\n      // After discussing with the team, I've made it so that when the tree receives focus, the first visible node will be focused.\n      // This will prevent from the page scrolling abruptly to the first selected node if it exist in a deeply nested tree.\n      this.focusManagerService.focusFirstVisibleNode();\n\n      // when the first child gets focus,\n      // tree should no longer have tabindex of 0;\n      delete this.tabindex;\n    }\n  }\n\n  @ContentChildren(ClrTreeNode) private rootNodes: QueryList<ClrTreeNode<T>>;\n\n  ngAfterContentInit() {\n    this.setRootNodes();\n    this.subscriptions.push(\n      this.rootNodes.changes.subscribe(() => {\n        this.setRootNodes();\n      })\n    );\n  }\n\n  private setRootNodes(): void {\n    // if node has no parent, it's a root node\n    // for recursive tree, this.rootNodes registers also nested children\n    // so we have to use filter to extract the ones that are truly root nodes\n    this.focusManagerService.rootNodeModels = this.rootNodes.map(node => node._model).filter(node => !node.parent);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isObservable, Subscription } from 'rxjs';\n\nimport { TreeNodeModel } from './tree-node.model';\nimport { AsyncArray, isPromise } from './async-array';\nimport { TreeFeaturesService } from '../tree-features.service';\n\n/*\n * A recursive model is built received from the app and traversed to create the corresponding components.\n * Recursive = Model dictates the tree node components\n */\nexport class RecursiveTreeNodeModel<T> extends TreeNodeModel<T> {\n  constructor(\n    model: T,\n    parent: RecursiveTreeNodeModel<T> | null,\n    private getChildren: (node: T) => AsyncArray<T> | undefined,\n    private featuresService: TreeFeaturesService<T> | undefined\n  ) {\n    super();\n    this.model = model;\n    this.parent = parent;\n  }\n\n  parent: RecursiveTreeNodeModel<T> | null;\n\n  private childrenFetched = false;\n\n  clearChildren() {\n    this._children.forEach(child => child.destroy());\n    delete this._children;\n    this.childrenFetched = false;\n  }\n\n  fetchChildren() {\n    if (this.childrenFetched) {\n      return;\n    }\n\n    const asyncChildren = this.getChildren(this.model);\n    if (isPromise(asyncChildren)) {\n      this.loading = true;\n      asyncChildren.then(raw => {\n        this._children = this.wrapChildren(raw);\n        this.loading = false;\n      });\n    } else if (isObservable(asyncChildren)) {\n      this.loading = true;\n      this.subscription = asyncChildren.subscribe(raw => {\n        this._children = this.wrapChildren(raw);\n        this.loading = false;\n      });\n    } else if (asyncChildren) {\n      // Synchronous case\n      this._children = this.wrapChildren(asyncChildren);\n    } else {\n      this._children = [];\n    }\n    this.childrenFetched = true;\n    if (this.featuresService) {\n      this.featuresService.childrenFetched.next();\n    }\n  }\n\n  private wrapChildren(rawModels: T[]) {\n    return rawModels.map(m => new RecursiveTreeNodeModel(m, this, this.getChildren, this.featuresService));\n  }\n\n  private _children: RecursiveTreeNodeModel<T>[] = [];\n  get children(): RecursiveTreeNodeModel<T>[] {\n    this.fetchChildren();\n    return this._children;\n  }\n  set children(value: RecursiveTreeNodeModel<T>[]) {\n    this._children = value;\n  }\n\n  private subscription: Subscription;\n\n  destroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    super.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ArrowKeyDirection {\n  UP = 'up',\n  DOWN = 'down',\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// We need to make sure people can give us null or undefined children even if they run strict type checking.\nimport { Observable } from 'rxjs';\n\nexport type AsyncArray<T> =\n  | T[]\n  | null\n  | undefined\n  | Promise<T[] | null | undefined>\n  | Observable<T[] | null | undefined>;\n\nexport function isPromise<T>(o: AsyncArray<T>): o is Promise<T[]> {\n  // Shamelessly copied from every open-source project out there.\n  return o && typeof (<any>o).then === 'function';\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Input, OnChanges, OnDestroy, TemplateRef } from '@angular/core';\nimport { TreeFeaturesService } from './tree-features.service';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { AsyncArray } from './models/async-array';\nimport { Subscription } from 'rxjs';\n\nexport interface ClrRecursiveForOfContext<T> {\n  $implicit: T;\n  clrModel: TreeNodeModel<T>;\n}\n\n@Directive({ selector: '[clrRecursiveFor][clrRecursiveForOf]' })\nexport class ClrRecursiveForOf<T> implements OnChanges, OnDestroy {\n  constructor(\n    private template: TemplateRef<ClrRecursiveForOfContext<T>>,\n    private featuresService: TreeFeaturesService<T>,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  // TODO: accept NgIterable<T>\n  @Input('clrRecursiveForOf') nodes: T | T[];\n\n  // TODO: accept NgIterable<T> return type\n  @Input('clrRecursiveForGetChildren') getChildren: (node: T) => AsyncArray<T>;\n\n  private childrenFetchSubscription: Subscription;\n\n  // I'm using OnChanges instead of OnInit to easily keep up to date with dynamic trees. Maybe optimizable later.\n  ngOnChanges() {\n    let wrapped: RecursiveTreeNodeModel<T>[];\n    if (Array.isArray(this.nodes)) {\n      wrapped = this.nodes.map(node => new RecursiveTreeNodeModel(node, null, this.getChildren, this.featuresService));\n    } else {\n      wrapped = [new RecursiveTreeNodeModel(this.nodes, null, this.getChildren, this.featuresService)];\n    }\n    if (!this.childrenFetchSubscription) {\n      this.childrenFetchSubscription = this.featuresService.childrenFetched.subscribe(() => {\n        this.cdr.detectChanges();\n      });\n    }\n\n    this.featuresService.recursion = {\n      template: this.template,\n      root: wrapped,\n    };\n  }\n\n  ngOnDestroy() {\n    if (this.childrenFetchSubscription) {\n      this.childrenFetchSubscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, Optional } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { TreeFeaturesService } from './tree-features.service';\nimport { TreeNodeModel } from './models/tree-node.model';\nimport { ClrRecursiveForOfContext } from './recursive-for-of';\nimport { RecursiveTreeNodeModel } from './models/recursive-tree-node.model';\n\n@Component({\n  selector: 'clr-recursive-children',\n  template: `\n    <ng-container *ngIf=\"shouldRender()\">\n      <ng-container *ngFor=\"let child of parent?.children || children\">\n        <ng-container *ngTemplateOutlet=\"featuresService.recursion.template; context: getContext(child)\"></ng-container>\n      </ng-container>\n    </ng-container>\n  `,\n  host: {\n    '[attr.role]': '\"group\"', // Safari + VO needs direct relationship between treeitem and group; no element should exist between them\n  },\n})\n/**\n * Internal component, do not export!\n * This is part of the hack to get around https://github.com/angular/angular/issues/15998\n */\nexport class RecursiveChildren<T> {\n  constructor(public featuresService: TreeFeaturesService<T>, @Optional() private expandService: IfExpandService) {\n    if (expandService) {\n      this.subscription = this.expandService.expandChange.subscribe(value => {\n        if (!value && this.parent && !this.featuresService.eager && this.featuresService.recursion) {\n          // In the case of lazy-loading recursive trees, we clear the children on collapse.\n          // This is better in case they change between two user interaction, and that way\n          // the app itself can decide whether to cache them or not.\n          (<RecursiveTreeNodeModel<T>>this.parent).clearChildren();\n        }\n      });\n    }\n  }\n\n  shouldRender() {\n    return (\n      this.featuresService.recursion &&\n      // In the smart case, we eagerly render all the recursive children\n      // to make sure two-way bindings for selection are available.\n      // They will be hidden with CSS by the parent.\n      (this.featuresService.eager || !this.expandService || this.expandService.expanded)\n    );\n  }\n\n  // Offering the option to either give the parent node to recurse potentially lazily,\n  // or directly the list of children to display.\n  @Input('parent') parent: TreeNodeModel<T>;\n  @Input('children') children: TreeNodeModel<T>[];\n\n  getContext(node: TreeNodeModel<T>): ClrRecursiveForOfContext<T> {\n    return {\n      $implicit: node.model,\n      clrModel: node,\n    };\n  }\n\n  subscription: Subscription;\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrLoadingModule } from '../../utils/loading/loading.module';\nimport { ClrTreeNode } from './tree-node';\nimport { ClrTree } from './tree';\nimport { ClrRecursiveForOf } from './recursive-for-of';\nimport { RecursiveChildren } from './recursive-children';\nimport { ClrTreeNodeLink } from './tree-node-link';\n\nexport const CLR_TREE_VIEW_DIRECTIVES: Type<any>[] = [ClrTree, ClrTreeNode, ClrRecursiveForOf, ClrTreeNodeLink];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrLoadingModule],\n  declarations: [CLR_TREE_VIEW_DIRECTIVES, RecursiveChildren],\n  exports: [CLR_TREE_VIEW_DIRECTIVES],\n})\nexport class ClrTreeViewModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { NgModule } from '@angular/core';\nimport { ClrDatagridModule } from './datagrid/datagrid.module';\nimport { ClrStackViewModule } from './stack-view/stack-view.module';\nimport { ClrTreeViewModule } from './tree-view/tree-view.module';\n\n@NgModule({ exports: [ClrDatagridModule, ClrStackViewModule, ClrTreeViewModule] })\nexport class ClrDataModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable } from 'rxjs';\n\nexport abstract class FocusableItem {\n  id: string;\n  disabled?: boolean;\n\n  abstract focus(): void;\n  abstract blur(): void;\n  abstract activate?(): void;\n\n  up?: FocusableItem | Observable<FocusableItem>;\n  down?: FocusableItem | Observable<FocusableItem>;\n  left?: FocusableItem | Observable<FocusableItem>;\n  right?: FocusableItem | Observable<FocusableItem>;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Type } from '@angular/core';\nimport { UNIQUE_ID_PROVIDER } from '../../id-generator/id-generator.service';\nimport { FocusableItem } from './focusable-item';\n\nexport function customFocusableItemProvider<T>(implementation: Type<T>) {\n  return [\n    UNIQUE_ID_PROVIDER,\n    implementation,\n    {\n      provide: FocusableItem,\n      useExisting: implementation,\n    },\n  ];\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, Optional, Renderer2, SkipSelf } from '@angular/core';\nimport { isObservable, of } from 'rxjs';\n\nimport { ArrowKeyDirection } from './arrow-key-direction.enum';\nimport { FocusableItem } from './focusable-item/focusable-item';\n\n@Injectable()\nexport class FocusService {\n  constructor(private renderer: Renderer2) {}\n\n  private _unlistenFuncs = [];\n  private _current: FocusableItem;\n  public get current() {\n    return this._current;\n  }\n\n  reset(first: FocusableItem) {\n    this._current = first;\n  }\n\n  listenToArrowKeys(el: HTMLElement) {\n    // The following listeners return false when there was an action to take for the key pressed,\n    // in order to prevent the default behavior of that key.\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.arrowup', event => !this.move(ArrowKeyDirection.UP)));\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.arrowdown', event => !this.move(ArrowKeyDirection.DOWN))\n    );\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.arrowleft', event => !this.move(ArrowKeyDirection.LEFT))\n    );\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.arrowright', event => !this.move(ArrowKeyDirection.RIGHT))\n    );\n  }\n\n  registerContainer(el: HTMLElement) {\n    this.renderer.setAttribute(el, 'tabindex', '0');\n    this.listenToArrowKeys(el);\n    // The following listeners return false when there was an action to take for the key pressed,\n    // in order to prevent the default behavior of that key.\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.space', () => !this.activateCurrent()));\n    this._unlistenFuncs.push(this.renderer.listen(el, 'keydown.enter', () => !this.activateCurrent()));\n  }\n\n  moveTo(item: FocusableItem) {\n    /**\n     * Make sure that item is not undefined,\n     * This is safety net in the case that someone sometime decide to\n     * call this method without having FocusableItem.\n     */\n    if (item === undefined) {\n      return;\n    }\n\n    if (this.current) {\n      this.current.blur();\n    }\n    item.focus();\n    this._current = item;\n  }\n\n  move(direction: ArrowKeyDirection): boolean {\n    let moved = false;\n    if (this.current) {\n      const next = this.current[direction];\n      if (next) {\n        // Turning the value into an Observable isn't great, but it's the fastest way to avoid code duplication.\n        // If performance ever matters for this, we can refactor using additional private methods.\n        const nextObs = isObservable(next) ? next : of(next);\n        nextObs.subscribe(item => {\n          if (item) {\n            this.moveTo(item);\n            moved = true;\n          }\n        });\n      }\n    }\n    return moved;\n  }\n\n  activateCurrent() {\n    if (this.current && this.current.activate) {\n      this.current.activate();\n      return true;\n    }\n    return false;\n  }\n\n  public detachListeners() {\n    this._unlistenFuncs.forEach((unlisten: () => void) => unlisten());\n  }\n}\n\nexport function clrFocusServiceFactory(existing: FocusService, renderer: Renderer2) {\n  return existing || new FocusService(renderer);\n}\n\nexport const FOCUS_SERVICE_PROVIDER = {\n  provide: FocusService,\n  useFactory: clrFocusServiceFactory,\n  deps: [[new Optional(), new SkipSelf(), FocusService], Renderer2],\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable } from 'rxjs';\nimport { ArrowKeyDirection } from '../arrow-key-direction.enum';\nimport { FocusableItem } from './focusable-item';\n\nexport class Linkers {\n  /**\n   * Links a set of focusable items to a parent along one direction\n   */\n  static linkParent(\n    items: FocusableItem[],\n    parent: FocusableItem | Observable<FocusableItem>,\n    direction: ArrowKeyDirection\n  ) {\n    items.forEach(item => (item[direction] = parent));\n  }\n\n  /**\n   * Double-links a set of focusable items vertically, possibly looping\n   */\n  static linkVertical(items: FocusableItem[], loop = true) {\n    items.forEach((item, index) => {\n      if (index > 0) {\n        item.up = items[index - 1];\n      }\n      if (index < items.length - 1) {\n        item.down = items[index + 1];\n      }\n    });\n    if (loop && items.length > 1) {\n      items[0].up = items[items.length - 1];\n      items[items.length - 1].down = items[0];\n    }\n  }\n}\n\n// Right now I only need the two linkers above, but we can easily add more linkers. A couple examples:\n// export function linkHorizontal(items: FocusableItem[], loop = true);\n// export function linkTable(items: FocusableItem[][]);\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Observable, Observer } from 'rxjs';\n\nexport function wrapObservable<T>(\n  observable: Observable<T>,\n  onSubscribe?: (observer: Observer<T>) => void,\n  onUnsubscribe?: (observer: Observer<T>) => void\n): Observable<T> {\n  return Observable.create((observer: Observer<T>) => {\n    onSubscribe(observer);\n    const subscription = observable.subscribe(observer);\n    return () => {\n      subscription.unsubscribe();\n      if (onUnsubscribe) {\n        onUnsubscribe(observer);\n      }\n    };\n  });\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, Optional, PLATFORM_ID, Renderer2, SkipSelf } from '@angular/core';\nimport { Observable, of, ReplaySubject } from 'rxjs';\nimport { map, take } from 'rxjs/operators';\nimport { ClrPopoverToggleService } from '../../../utils/popover/providers/popover-toggle.service';\nimport { customFocusableItemProvider } from '../../../utils/focus/focusable-item/custom-focusable-item-provider';\nimport { UNIQUE_ID } from '../../../utils/id-generator/id-generator.service';\nimport { ArrowKeyDirection } from '../../../utils/focus/arrow-key-direction.enum';\nimport { FocusService } from '../../../utils/focus/focus.service';\nimport { FocusableItem } from '../../../utils/focus/focusable-item/focusable-item';\nimport { Linkers } from '../../../utils/focus/focusable-item/linkers';\nimport { wrapObservable } from '../../../utils/focus/wrap-observable';\n\n@Injectable()\nexport class DropdownFocusHandler implements FocusableItem {\n  constructor(\n    @Inject(UNIQUE_ID) public id: string,\n    private renderer: Renderer2,\n    @SkipSelf()\n    @Optional()\n    private parent: DropdownFocusHandler,\n    private toggleService: ClrPopoverToggleService,\n    private focusService: FocusService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    this.resetChildren();\n    this.moveToFirstItemWhenOpen();\n    if (!this.parent) {\n      this.handleRootFocus();\n    }\n  }\n\n  private _unlistenFuncs = [];\n\n  /**\n   * If the dropdown was opened by clicking on the trigger, we automatically move to the first item\n   */\n  moveToFirstItemWhenOpen() {\n    this.toggleService.openChange.subscribe(open => {\n      if (open && this.toggleService.originalEvent) {\n        // Even if we properly waited for ngAfterViewInit, the container still wouldn't be attached to the DOM.\n        // So setTimeout is the only way to wait for the container to be ready to move focus to first item.\n        setTimeout(() => {\n          this.focusService.moveTo(this);\n          if (this.parent) {\n            this.focusService.move(ArrowKeyDirection.RIGHT);\n          } else {\n            this.focusService.move(ArrowKeyDirection.DOWN);\n          }\n        });\n      }\n    });\n  }\n\n  private focusBackOnTrigger = false;\n\n  /**\n   * Focus on the menu when it opens, and focus back on the root trigger when the whole dropdown becomes closed\n   */\n  handleRootFocus() {\n    this.toggleService.openChange.subscribe(open => {\n      if (!open) {\n        // We reset the state of the focus service both on initialization and when closing.\n        this.focusService.reset(this);\n        // But we only actively focus the trigger when closing, not on initialization.\n        if (this.focusBackOnTrigger) {\n          this.focus();\n        }\n      }\n      this.focusBackOnTrigger = open;\n    });\n  }\n\n  private _trigger: HTMLElement;\n  get trigger() {\n    return this._trigger;\n  }\n  set trigger(el: HTMLElement) {\n    this._trigger = el;\n\n    if (this.parent) {\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowright', event => this.toggleService.toggleWithEvent(event))\n      );\n    } else {\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowup', event => this.toggleService.toggleWithEvent(event))\n      );\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.arrowdown', event => this.toggleService.toggleWithEvent(event))\n      );\n      this.focusService.listenToArrowKeys(el);\n    }\n  }\n\n  private _container: HTMLElement;\n  get container() {\n    return this._container;\n  }\n  set container(el: HTMLElement) {\n    this._container = el;\n\n    // whether root container or not, tab key should always toggle (i.e. close) the container\n    this._unlistenFuncs.push(\n      this.renderer.listen(el, 'keydown.tab', event => this.toggleService.toggleWithEvent(event))\n    );\n\n    if (this.parent) {\n      // if it's a nested container, pressing esc has the same effect as pressing left key, which closes the current\n      // popup and moves up to its parent. Here, we stop propagation so that the parent container\n      // doesn't receive the esc keydown\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.esc', event => {\n          this.focusService.move(ArrowKeyDirection.LEFT);\n          event.stopPropagation();\n        })\n      );\n    } else {\n      // The root container is the only one we register to the focus service, others do not need focus\n      this.focusService.registerContainer(el);\n\n      // The root container will simply close the container when esc key is pressed\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'keydown.esc', event => this.toggleService.toggleWithEvent(event))\n      );\n\n      // When the user moves focus outside of the menu, we close the dropdown\n      this._unlistenFuncs.push(\n        this.renderer.listen(el, 'blur', event => {\n          // we clear out any existing focus on the items\n          this.children.pipe(take(1)).subscribe(items => items.forEach(item => item.blur()));\n\n          // event.relatedTarget is null in IE11. In that case we use document.activeElement which correctly points\n          // to the element we want to check. Note that other browsers might point document.activeElement to the\n          // wrong element. This is ok, because all the other browsers we support relies on event.relatedTarget.\n          const target = event.relatedTarget || document.activeElement;\n\n          // If the user clicks on an item which triggers the blur, we don't want to close it since it may open a submenu.\n          // In the case of needing to close it (i.e. user selected an item and the dropdown menu is set to close on\n          // selection), dropdown-item.ts handles it.\n          if (target && isPlatformBrowser(this.platformId)) {\n            if (el.contains(target) || target === this.trigger) {\n              return;\n            }\n          }\n          // We let the user move focus to where the want, we don't force the focus back on the trigger\n          this.focusBackOnTrigger = false;\n          this.toggleService.open = false;\n        })\n      );\n    }\n  }\n\n  focus() {\n    if (this.trigger && isPlatformBrowser(this.platformId)) {\n      this.trigger.focus();\n    }\n  }\n  blur() {\n    if (this.trigger && isPlatformBrowser(this.platformId)) {\n      this.trigger.blur();\n    }\n  }\n\n  activate() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.trigger.click();\n    }\n  }\n\n  private children: ReplaySubject<FocusableItem[]>;\n  right?: Observable<FocusableItem>;\n  down?: Observable<FocusableItem>;\n  up?: Observable<FocusableItem>;\n\n  private openAndGetChildren() {\n    return wrapObservable(this.children, () => (this.toggleService.open = true));\n  }\n  private closeAndGetThis() {\n    return wrapObservable(of(this), () => (this.toggleService.open = false));\n  }\n\n  resetChildren() {\n    this.children = new ReplaySubject<FocusableItem[]>(1);\n    if (this.parent) {\n      this.right = this.openAndGetChildren().pipe(map(all => all[0]));\n    } else {\n      this.down = this.openAndGetChildren().pipe(map(all => all[0]));\n      this.up = this.openAndGetChildren().pipe(map(all => all[all.length - 1]));\n    }\n  }\n\n  addChildren(children: FocusableItem[]) {\n    Linkers.linkVertical(children);\n    if (this.parent) {\n      Linkers.linkParent(children, this.closeAndGetThis(), ArrowKeyDirection.LEFT);\n    }\n    this.children.next(children);\n  }\n\n  ngOnDestroy() {\n    this._unlistenFuncs.forEach((unlisten: () => void) => unlisten());\n    this.focusService.detachListeners();\n  }\n}\n\nexport const DROPDOWN_FOCUS_HANDLER_PROVIDER = customFocusableItemProvider(DropdownFocusHandler);\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, Optional, SkipSelf } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class RootDropdownService {\n  private _changes: Subject<boolean> = new Subject<boolean>();\n\n  get changes(): Observable<boolean> {\n    return this._changes.asObservable();\n  }\n\n  closeMenus(): void {\n    this._changes.next(false);\n  }\n}\n\nexport function clrRootDropdownFactory(existing: RootDropdownService) {\n  return existing || new RootDropdownService();\n}\n\nexport const ROOT_DROPDOWN_PROVIDER = {\n  provide: RootDropdownService,\n  useFactory: clrRootDropdownFactory,\n  deps: [[new Optional(), new SkipSelf(), RootDropdownService]],\n};\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n/*\n * Do NOT Angular this up. It assumes we're in the DOM, plays with native elements, ...\n * It could potentially be used as part of @clr/ui as a vanilla Javascript helper.\n */\n\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { PopoverOptions } from './popover-options.interface';\nexport enum Point {\n  RIGHT_CENTER,\n  RIGHT_TOP,\n  RIGHT_BOTTOM,\n  TOP_CENTER,\n  TOP_RIGHT,\n  TOP_LEFT,\n  BOTTOM_CENTER,\n  BOTTOM_RIGHT,\n  BOTTOM_LEFT,\n  LEFT_CENTER,\n  LEFT_TOP,\n  LEFT_BOTTOM,\n}\n\nconst POSITION_RELATIVE = 'relative';\nconst POSITION_ABSOLUTE = 'absolute';\nconst POSITION_FIXED = 'fixed';\n\nconst OVERFLOW_SCROLL = 'scroll';\nconst OVERFLOW_AUTO = 'auto';\n\nexport class Popover {\n  private _scroll: Subject<void>;\n\n  constructor(private element: any) {\n    // Browsers don't agree with what to do if some of these are not specified, so we set them all to be safe.\n    element.style.position = POSITION_ABSOLUTE;\n    element.style.top = 0;\n    element.style.bottom = 'auto';\n    element.style.left = 0;\n    element.style.right = 'auto';\n  }\n\n  // TODO: need a way to account for parameters that change dynamically (positioning).\n  public anchor(\n    anchor: any,\n    anchorAlign: Point,\n    popoverAlign: Point,\n    { offsetX = 0, offsetY = 0, useAnchorParent = false }: PopoverOptions = {}\n  ): Observable<any> {\n    // TODO: we are assuming here that the popover is inside or next to the anchor.\n    // We'd need to go up the popover tree too otherwise\n\n    this.addScrollEventListeners(anchor);\n    if (useAnchorParent) {\n      anchor = anchor.parentNode;\n    }\n    // explicitly override anchor's style to static\n    anchor.style.position = 'static';\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const popoverRect = this.element.getBoundingClientRect();\n\n    // position of left top corner of anchor + the offset\n    let leftDiff: number = anchorRect.left - popoverRect.left + offsetX;\n    let topDiff: number = anchorRect.top - popoverRect.top + offsetY;\n\n    // first, adjust positioning based on anchor's align point\n    switch (anchorAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n        break;\n      case Point.TOP_CENTER:\n        leftDiff += anchorRect.width / 2;\n        break;\n      case Point.TOP_RIGHT:\n        leftDiff += anchorRect.width;\n        break;\n      case Point.RIGHT_TOP:\n        leftDiff += anchorRect.width;\n        break;\n      case Point.LEFT_BOTTOM:\n        topDiff += anchorRect.height;\n        break;\n      case Point.BOTTOM_LEFT:\n        topDiff += anchorRect.height;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width / 2;\n        break;\n      case Point.BOTTOM_RIGHT:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width;\n        break;\n      case Point.RIGHT_BOTTOM:\n        topDiff += anchorRect.height;\n        leftDiff += anchorRect.width;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff += anchorRect.height / 2;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff += anchorRect.height / 2;\n        leftDiff += anchorRect.width;\n        break;\n      default:\n    }\n\n    // second, adjust positioning based on popover's align point\n    switch (popoverAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n        break;\n      case Point.TOP_CENTER:\n        leftDiff -= popoverRect.width / 2;\n        break;\n      case Point.TOP_RIGHT:\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.RIGHT_TOP:\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.LEFT_BOTTOM:\n        topDiff -= popoverRect.height;\n        break;\n      case Point.BOTTOM_LEFT:\n        topDiff -= popoverRect.height;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width / 2;\n        break;\n      case Point.BOTTOM_RIGHT:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.RIGHT_BOTTOM:\n        topDiff -= popoverRect.height;\n        leftDiff -= popoverRect.width;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff -= popoverRect.height / 2;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff -= popoverRect.height / 2;\n        leftDiff -= popoverRect.width;\n        break;\n      default:\n    }\n\n    // Third, adjust with popover's margins based on the two align points.\n    // Here, we make an assumption that popover is primarily positioned outside the\n    // anchor with minor offset. Without this assumption, it's impossible to apply\n    // the popover's margins in a predictable way. For example, assume that a popover\n    // and its anchor are exactly the same size. if a popover is positioned inside the\n    // anchor (which is technically possible), then it becomes impossible to know what to do\n    // if the popover has a non-zero margin value all around (because applying the margin in\n    // all four directions will result in no margin visually, which isn't what we want).\n    // Therefore, our logic makes assumptions about margins of interest given the points,\n    // and only covers the cases where popover is outside the anchor.\n\n    const popoverComputedStyle = getComputedStyle(this.element);\n    const marginLeft = parseInt(popoverComputedStyle.marginLeft, 10);\n    const marginRight = parseInt(popoverComputedStyle.marginRight, 10);\n    const marginTop = parseInt(popoverComputedStyle.marginTop, 10);\n    const marginBottom = parseInt(popoverComputedStyle.marginBottom, 10);\n\n    switch (anchorAlign) {\n      case Point.LEFT_TOP:\n      case Point.TOP_LEFT:\n      case Point.TOP_RIGHT:\n      case Point.RIGHT_TOP:\n        if (popoverAlign === Point.BOTTOM_RIGHT || popoverAlign === Point.RIGHT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff -= marginRight;\n        }\n        if (popoverAlign === Point.BOTTOM_LEFT || popoverAlign === Point.LEFT_BOTTOM) {\n          topDiff -= marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_LEFT || popoverAlign === Point.LEFT_TOP) {\n          topDiff += marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_RIGHT || popoverAlign === Point.RIGHT_TOP) {\n          topDiff += marginTop;\n          leftDiff -= marginRight;\n        }\n        break;\n      case Point.LEFT_BOTTOM:\n      case Point.BOTTOM_LEFT:\n      case Point.BOTTOM_RIGHT:\n      case Point.RIGHT_BOTTOM:\n        if (popoverAlign === Point.BOTTOM_LEFT || popoverAlign === Point.LEFT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.BOTTOM_RIGHT || popoverAlign === Point.RIGHT_BOTTOM) {\n          topDiff -= marginBottom;\n          leftDiff -= marginRight;\n        }\n        if (popoverAlign === Point.TOP_LEFT || popoverAlign === Point.LEFT_TOP) {\n          topDiff += marginTop;\n          leftDiff += marginLeft;\n        }\n        if (popoverAlign === Point.TOP_RIGHT || popoverAlign === Point.RIGHT_TOP) {\n          topDiff += marginTop;\n          leftDiff -= marginRight;\n        }\n        break;\n      case Point.TOP_CENTER:\n        topDiff -= marginBottom;\n        leftDiff += marginLeft;\n        leftDiff -= marginRight;\n        break;\n      case Point.BOTTOM_CENTER:\n        topDiff += marginTop;\n        leftDiff += marginLeft;\n        leftDiff -= marginRight;\n        break;\n      case Point.LEFT_CENTER:\n        topDiff += marginTop;\n        topDiff -= marginBottom;\n        leftDiff -= marginRight;\n        break;\n      case Point.RIGHT_CENTER:\n        topDiff += marginTop;\n        topDiff -= marginBottom;\n        leftDiff += marginLeft;\n        break;\n      default:\n    }\n\n    this.element.style.transform = `translateX(${Math.round(leftDiff)}px) translateY(${Math.round(topDiff)}px)`;\n    return this._scroll.asObservable();\n  }\n\n  public release() {\n    this.element.style.transform = '';\n    this.removeScrollEventListeners();\n  }\n\n  private isPositioned(container: any) {\n    const position = getComputedStyle(container).position;\n    return position === POSITION_RELATIVE || position === POSITION_ABSOLUTE || position === POSITION_FIXED;\n  }\n\n  /*\n   * Containers up to the first positioned one will have an event on scroll\n   */\n\n  private scrollableElements: HTMLElement[] = [];\n\n  private emitScrollEvent() {\n    this._scroll.next();\n  }\n\n  private boundOnScrollListener: any = this.emitScrollEvent.bind(this);\n\n  private addScrollEventListeners(e: any) {\n    this._scroll = new Subject<void>();\n    const anchor: any = e;\n    let current: any = e;\n    while (current && current !== document) {\n      if (this.scrolls(current)) {\n        current.addEventListener('scroll', this.boundOnScrollListener);\n        this.scrollableElements.push(current);\n      }\n      if (current !== anchor && this.isPositioned(current)) {\n        break;\n      }\n      current = current.parentNode;\n    }\n  }\n\n  private removeScrollEventListeners() {\n    for (const elem of this.scrollableElements) {\n      elem.removeEventListener('scroll', this.boundOnScrollListener);\n    }\n    this.scrollableElements.length = 0;\n    if (this._scroll) {\n      this._scroll.complete();\n      delete this._scroll;\n    }\n  }\n\n  private scrolls(container: any): boolean {\n    const computedStyles = getComputedStyle(container);\n    return (\n      computedStyles.overflowX === OVERFLOW_SCROLL ||\n      computedStyles.overflowX === OVERFLOW_AUTO ||\n      computedStyles.overflowY === OVERFLOW_SCROLL ||\n      computedStyles.overflowY === OVERFLOW_AUTO\n    );\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Component, ElementRef, Input, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { DROPDOWN_FOCUS_HANDLER_PROVIDER } from './providers/dropdown-focus-handler.service';\nimport { FOCUS_SERVICE_PROVIDER } from '../../utils/focus/focus.service';\n\nimport { ROOT_DROPDOWN_PROVIDER, RootDropdownService } from './providers/dropdown.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\n@Component({\n  selector: 'clr-dropdown',\n  template: '<ng-content></ng-content>',\n  host: {\n    '[class.dropdown]': 'true',\n    '[class.open]': 'toggleService.open',\n  },\n  providers: [\n    ROOT_DROPDOWN_PROVIDER,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    FOCUS_SERVICE_PROVIDER,\n    ClrPopoverToggleService,\n    DROPDOWN_FOCUS_HANDLER_PROVIDER,\n  ],\n})\nexport class ClrDropdown implements OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    @SkipSelf()\n    @Optional()\n    public parent: ClrDropdown,\n    public toggleService: ClrPopoverToggleService,\n    private cdr: ChangeDetectorRef,\n    dropdownService: RootDropdownService\n  ) {\n    this.subscriptions.push(dropdownService.changes.subscribe(value => (this.toggleService.open = value)));\n    this.subscriptions.push(toggleService.openChange.subscribe(value => this.cdr.markForCheck()));\n  }\n\n  @Input('clrCloseMenuOnItemClick') isMenuClosable: boolean = true;\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { isPlatformBrowser } from '@angular/common';\nimport { ElementRef, Inject, Injectable, PLATFORM_ID, Renderer2 } from '@angular/core';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../id-generator/id-generator.service';\nimport { FocusableItem } from './focusable-item';\n\n@Injectable()\nexport class BasicFocusableItem implements FocusableItem {\n  constructor(\n    @Inject(UNIQUE_ID) public id: string,\n    private el: ElementRef<HTMLElement>,\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {\n    renderer.setAttribute(el.nativeElement, 'id', id);\n    renderer.setAttribute(el.nativeElement, 'tabindex', '-1');\n  }\n\n  disabled = false;\n\n  focus() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '0');\n      this.el.nativeElement.focus();\n    }\n  }\n  blur() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.renderer.setAttribute(this.el.nativeElement, 'tabindex', '-1');\n      this.el.nativeElement.blur();\n    }\n  }\n\n  activate() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.el.nativeElement.click();\n    }\n  }\n}\n\nexport const BASIC_FOCUSABLE_ITEM_PROVIDER = [\n  UNIQUE_ID_PROVIDER,\n  {\n    provide: FocusableItem,\n    useClass: BasicFocusableItem,\n  },\n];\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { AfterViewInit, Directive, ElementRef, Input, Renderer2 } from '@angular/core';\n\nimport { ClrDropdown } from './dropdown';\nimport { BASIC_FOCUSABLE_ITEM_PROVIDER } from '../../utils/focus/focusable-item/basic-focusable-item.service';\nimport { FocusableItem } from '../../utils/focus/focusable-item/focusable-item';\nimport { RootDropdownService } from './providers/dropdown.service';\n\n@Directive({\n  selector: '[clrDropdownItem]',\n  host: {\n    '[class.disabled]': 'disabled',\n    '[class.dropdown-item]': 'true',\n    '[attr.role]': '\"menuitem\"',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.disabled]': \"(disabled && setByDeprecatedDisabled)? '' : null\",\n    '[attr.id]': 'dropdownItemId',\n  },\n  providers: [BASIC_FOCUSABLE_ITEM_PROVIDER],\n})\nexport class ClrDropdownItem implements AfterViewInit {\n  constructor(\n    private dropdown: ClrDropdown,\n    private el: ElementRef<HTMLElement>,\n    private _dropdownService: RootDropdownService,\n    private renderer: Renderer2,\n    private focusableItem: FocusableItem\n  ) {}\n\n  private unlisten;\n  public setByDeprecatedDisabled: boolean = false;\n\n  @Input('clrDisabled')\n  set disabled(value: boolean | string) {\n    // Empty string attribute evaluates to false but should disable the item, so we need to add a special case for it.\n    this.focusableItem.disabled = !!value || value === '';\n  }\n\n  get disabled() {\n    return this.focusableItem.disabled;\n  }\n\n  /*\n   * @deprecated since 3.0, remove in 4.0. the presence of this attribute makes it not-focusable in IE11. Use [clrDisabled] input instead.\n   */\n  @Input('disabled')\n  set disabledDeprecated(value: boolean | string) {\n    // Empty string attribute evaluates to false but should disable the item, so we need to add a special case for it.\n    this.focusableItem.disabled = !!value || value === '';\n    this.setByDeprecatedDisabled = true;\n  }\n\n  get disabledDeprecated() {\n    return this.focusableItem.disabled;\n  }\n\n  /**\n   * Let you overwrite the focusable auto increment id.\n   */\n  @Input('id')\n  set dropdownItemId(value: string) {\n    this.focusableItem.id = value;\n  }\n  get dropdownItemId() {\n    return this.focusableItem.id;\n  }\n\n  ngAfterViewInit() {\n    this.unlisten = this.renderer.listen(this.el.nativeElement, 'click', () => this.onDropdownItemClick());\n  }\n\n  onDropdownItemClick(): void {\n    if (this.dropdown.isMenuClosable && !this.el.nativeElement.classList.contains('disabled')) {\n      this._dropdownService.closeMenus();\n    }\n  }\n\n  ngOnDestroy() {\n    this.unlisten();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum TabsLayout {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterViewChecked,\n  ElementRef,\n  HostBinding,\n  Injectable,\n  Injector,\n  OnDestroy,\n  Renderer2,\n  SkipSelf,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { Point, Popover } from './popover';\nimport { PopoverOptions } from './popover-options.interface';\n\n// Literally any annotation would work here, but writing our own @HoneyBadger annotation feels overkill.\n@Injectable()\nexport abstract class AbstractPopover implements AfterViewChecked, OnDestroy {\n  constructor(injector: Injector, @SkipSelf() protected parentHost: ElementRef) {\n    this.el = injector.get(ElementRef);\n    this.toggleService = injector.get(ClrPopoverToggleService);\n    this.renderer = injector.get(Renderer2);\n    // Default anchor is the parent host\n    this.anchorElem = parentHost.nativeElement;\n\n    this.popoverInstance = new Popover(this.el.nativeElement);\n    this.subscription = this.toggleService.openChange.subscribe(change => {\n      if (change) {\n        this.anchor();\n        this.attachESCListener();\n      } else {\n        this.release();\n        this.detachESCListener();\n      }\n    });\n    if (this.toggleService.open) {\n      this.anchor();\n      this.attachESCListener();\n    }\n  }\n\n  protected el: ElementRef;\n  protected toggleService: ClrPopoverToggleService;\n  protected renderer: Renderer2;\n\n  private popoverInstance: Popover;\n  private subscription: Subscription;\n\n  private updateAnchor = false;\n\n  protected anchorElem: any;\n  protected anchorPoint: Point;\n  protected popoverPoint: Point;\n  protected popoverOptions: PopoverOptions = {};\n\n  protected ignoredElement: any;\n\n  protected anchor() {\n    this.updateAnchor = true;\n    // Ugh\n    this.ignore = this.toggleService.originalEvent;\n  }\n\n  protected release() {\n    this.detachOutsideClickListener();\n    this.popoverInstance.release();\n  }\n\n  ngAfterViewChecked() {\n    if (this.updateAnchor) {\n      this.updateAnchor = false;\n      this.popoverInstance\n        .anchor(this.anchorElem, this.anchorPoint, this.popoverPoint, this.popoverOptions)\n        .subscribe(() => {\n          // if a scroll event is detected, close the popover\n          this.toggleService.open = false;\n        });\n      this.attachOutsideClickListener();\n    }\n  }\n\n  ngOnDestroy() {\n    this.release();\n    this.detachESCListener();\n    this.subscription.unsubscribe();\n  }\n\n  /*\n     * Fallback to hide when *clrIfOpen is not being used\n     */\n\n  @HostBinding('class.is-off-screen')\n  get isOffScreen() {\n    return this.toggleService.open ? false : true;\n  }\n\n  /*\n     * Until https://github.com/angular/angular/issues/8785 is supported, we don't have any way to instantiate\n     * a separate directive on the host. So let's do dirty but performant for now.\n     */\n  public closeOnOutsideClick = false;\n  private hostClickListener: () => void;\n  private documentClickListener: () => void;\n  private documentESCListener: () => void;\n  private ignoredElementClickListener: () => void;\n  private ignore: any;\n\n  private attachESCListener(): void {\n    if (!this.popoverOptions.ignoreGlobalESCListener) {\n      this.documentESCListener = this.renderer.listen('document', 'keydown', event => {\n        if (event && event.key) {\n          if (event.key === 'Escape' || event.key === 'Esc') {\n            this.toggleService.open = false;\n          }\n        }\n      });\n    }\n  }\n\n  private detachESCListener(): void {\n    if (this.documentESCListener) {\n      this.documentESCListener();\n      delete this.documentESCListener;\n    }\n  }\n\n  private attachOutsideClickListener() {\n    if (this.closeOnOutsideClick) {\n      this.hostClickListener = this.renderer.listen(this.el.nativeElement, 'click', event => (this.ignore = event));\n      if (this.ignoredElement) {\n        this.ignoredElementClickListener = this.renderer.listen(\n          this.ignoredElement,\n          'click',\n          event => (this.ignore = event)\n        );\n      }\n      this.documentClickListener = this.renderer.listen('document', 'click', event => {\n        if (event === this.ignore) {\n          delete this.ignore;\n        } else {\n          this.toggleService.open = false;\n        }\n      });\n    }\n  }\n\n  private detachOutsideClickListener() {\n    if (this.closeOnOutsideClick) {\n      if (this.hostClickListener) {\n        this.hostClickListener();\n        delete this.hostClickListener;\n      }\n      if (this.ignoredElementClickListener) {\n        this.ignoredElementClickListener();\n        delete this.ignoredElementClickListener;\n      }\n      if (this.documentClickListener) {\n        this.documentClickListener();\n        delete this.documentClickListener;\n      }\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  Injector,\n  Input,\n  OnDestroy,\n  Optional,\n  QueryList,\n  SkipSelf,\n} from '@angular/core';\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { Point } from '../common/popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { DropdownFocusHandler } from './providers/dropdown-focus-handler.service';\nimport { FocusableItem } from '../../utils/focus/focusable-item/focusable-item';\n\n@Component({\n  selector: 'clr-dropdown-menu',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.dropdown-menu]': 'true',\n    '[attr.role]': '\"menu\"',\n  },\n})\nexport class ClrDropdownMenu extends AbstractPopover implements AfterContentInit, OnDestroy {\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef<HTMLElement>,\n    @Optional()\n    @SkipSelf()\n    nested: ClrDropdownMenu,\n    focusHandler: DropdownFocusHandler\n  ) {\n    if (!parentHost) {\n      throw new Error('clr-dropdown-menu should only be used inside of a clr-dropdown');\n    }\n    super(injector, parentHost);\n    if (!nested) {\n      // Default positioning for normal dropdown is bottom-left\n      this.anchorPoint = Point.BOTTOM_LEFT;\n      this.popoverPoint = Point.LEFT_TOP;\n    } else {\n      // Default positioning for nested dropdown is right-top\n      this.anchorPoint = Point.RIGHT_TOP;\n      this.popoverPoint = Point.LEFT_TOP;\n    }\n    this.popoverOptions.allowMultipleOpen = true;\n    this.popoverOptions.ignoreGlobalESCListener = true;\n    this.closeOnOutsideClick = true;\n    this.focusHandler = focusHandler;\n  }\n\n  @Input('clrPosition')\n  set position(position: string) {\n    // set the popover values based on menu position\n    switch (position) {\n      case 'top-right':\n        this.anchorPoint = Point.TOP_RIGHT;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      case 'top-left':\n        this.anchorPoint = Point.TOP_LEFT;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'bottom-right':\n        this.anchorPoint = Point.BOTTOM_RIGHT;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'bottom-left':\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-top':\n        this.anchorPoint = Point.RIGHT_TOP;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'right-bottom':\n        this.anchorPoint = Point.RIGHT_BOTTOM;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'left-top':\n        this.anchorPoint = Point.LEFT_TOP;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'left-bottom':\n        this.anchorPoint = Point.LEFT_BOTTOM;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      default:\n        this.anchorPoint = Point.BOTTOM_LEFT;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n    }\n  }\n\n  private focusHandler: DropdownFocusHandler;\n  @ContentChildren(FocusableItem) items: QueryList<FocusableItem>;\n\n  ngAfterContentInit() {\n    this.focusHandler.container = this.el.nativeElement;\n    this.items.changes.subscribe(() => this.focusHandler.addChildren(this.items.toArray()));\n    // I saw this on GitHub as a solution to avoid code duplication because of missed QueryList changes\n    this.items.notifyOnChanges();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.focusHandler.resetChildren();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostListener } from '@angular/core';\n\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\n\nimport { ClrDropdown } from './dropdown';\nimport { DropdownFocusHandler } from './providers/dropdown-focus-handler.service';\n\n@Directive({\n  // We support both selectors for legacy reasons\n  selector: '[clrDropdownTrigger],[clrDropdownToggle]',\n  host: {\n    '[class.dropdown-toggle]': 'isRootLevelToggle',\n    '[class.dropdown-item]': '!isRootLevelToggle',\n    '[class.expandable]': '!isRootLevelToggle',\n    '[class.active]': 'active',\n    '[attr.aria-haspopup]': '\"menu\"',\n    '[attr.aria-expanded]': 'active',\n  },\n})\nexport class ClrDropdownTrigger {\n  public isRootLevelToggle: boolean = true;\n\n  constructor(\n    dropdown: ClrDropdown,\n    private toggleService: ClrPopoverToggleService,\n    el: ElementRef<HTMLElement>,\n    focusHandler: DropdownFocusHandler\n  ) {\n    // if the containing dropdown has a parent, then this is not the root level one\n    if (dropdown.parent) {\n      this.isRootLevelToggle = false;\n    }\n    focusHandler.trigger = el.nativeElement;\n  }\n\n  get active(): boolean {\n    return this.toggleService.open;\n  }\n\n  @HostListener('click', ['$event'])\n  onDropdownTriggerClick(event: any): void {\n    this.toggleService.toggleWithEvent(event);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { ClrDropdown } from './dropdown';\nimport { ClrDropdownItem } from './dropdown-item';\nimport { ClrDropdownMenu } from './dropdown-menu';\nimport { ClrDropdownTrigger } from './dropdown-trigger';\n\nexport const CLR_DROPDOWN_DIRECTIVES: Type<any>[] = [ClrDropdown, ClrDropdownMenu, ClrDropdownTrigger, ClrDropdownItem];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_DROPDOWN_DIRECTIVES],\n  exports: [CLR_DROPDOWN_DIRECTIVES, ClrConditionalModule, ClrIconModule],\n})\nexport class ClrDropdownModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\n// @TODO Make this an enum\nexport const ALERT_TYPES: string[] = ['info', 'warning', 'danger', 'success'];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { AlertInfoObject } from '../utils/alert-info-object';\nimport { ALERT_TYPES } from '../utils/alert-types';\nimport { ClrCommonStringsService } from '../../../utils/i18n/common-strings.service';\n\n@Injectable()\nexport class AlertIconAndTypesService {\n  constructor(private commonStrings: ClrCommonStringsService) {}\n\n  private defaultIconShape = 'info-circle';\n  private _alertIconShape = '';\n  private _alertType = 'info';\n\n  get alertType(): string {\n    return this._alertType;\n  }\n  set alertType(val: string) {\n    if (ALERT_TYPES.indexOf(val) > -1) {\n      this._alertType = val;\n    }\n  }\n\n  get alertIconShape(): string {\n    if ('' === this._alertIconShape) {\n      return this.iconInfoFromType(this._alertType).shape;\n    }\n    return this._alertIconShape;\n  }\n  set alertIconShape(val: string) {\n    if (!val) {\n      this._alertIconShape = '';\n    } else if (val !== this._alertIconShape) {\n      this._alertIconShape = val;\n    }\n  }\n\n  get alertIconTitle(): string {\n    return this.iconInfoFromType(this._alertType).title;\n  }\n\n  public iconInfoFromType(type: string): AlertInfoObject {\n    const returnObj = { shape: '', cssClass: '', title: '' };\n\n    switch (type) {\n      case 'warning':\n        returnObj.shape = 'exclamation-triangle';\n        returnObj.cssClass = 'alert-warning';\n        returnObj.title = this.commonStrings.keys.warning;\n        break;\n      case 'danger':\n        returnObj.shape = 'exclamation-circle';\n        returnObj.cssClass = 'alert-danger';\n        returnObj.title = this.commonStrings.keys.danger;\n        break;\n      case 'success':\n        returnObj.shape = 'check-circle';\n        returnObj.cssClass = 'alert-success';\n        returnObj.title = this.commonStrings.keys.success;\n        break;\n      default:\n        returnObj.shape = this.defaultIconShape;\n        returnObj.cssClass = 'alert-info';\n        returnObj.title = this.commonStrings.keys.info;\n        break;\n    }\n\n    return returnObj;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, QueryList } from '@angular/core';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { ClrAlert } from '../alert';\n\n@Injectable()\nexport class MultiAlertService {\n  private subscription: Subscription;\n\n  private allAlerts: QueryList<ClrAlert>;\n\n  /**\n   * The Observable that lets other classes subscribe to changes\n   */\n  private _change = new Subject<number>();\n  public get changes(): Observable<number> {\n    return this._change.asObservable();\n  }\n\n  private _current: number;\n\n  get current() {\n    return this._current;\n  }\n  set current(index: number) {\n    if (index !== this._current) {\n      this._current = index;\n      this._change.next(index);\n    }\n  }\n\n  get activeAlerts() {\n    return this.allAlerts && this.allAlerts.filter(alert => !alert._closed);\n  }\n\n  get currentAlert() {\n    return this.activeAlerts && this.activeAlerts[this.current];\n  }\n\n  set currentAlert(alert: ClrAlert) {\n    this.current = this.activeAlerts.indexOf(alert);\n  }\n\n  get count() {\n    return (this.activeAlerts && this.activeAlerts.length) || 0;\n  }\n\n  manage(alerts: QueryList<ClrAlert>) {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.allAlerts = alerts;\n    // After receiving alerts' QueryList,\n    // we are picking index 0 as current by default if a user hasn't any index\n    this.current = typeof this._current === 'number' ? this._current : 0;\n    // we have to also broadcast that initial index\n    this._change.next(this.current);\n\n    this.subscription = this.allAlerts.changes.subscribe(() => {\n      if (this.current >= this.allAlerts.length) {\n        this.current = Math.max(0, this.allAlerts.length - 1);\n      }\n    });\n  }\n\n  next() {\n    this.current = this.current === this.activeAlerts.length - 1 ? 0 : this.current + 1;\n  }\n\n  previous() {\n    if (this.activeAlerts.length === 0) {\n      return;\n    }\n    this.current = this.current === 0 ? this.activeAlerts.length - 1 : this.current - 1;\n  }\n\n  close() {\n    this.previous();\n  }\n\n  destroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\n/**\n * @remark\n * This directive is used only of selectin alert text.\n */\n@Directive({\n  selector: '.alert-text',\n})\nexport class ClrAlertText {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  ChangeDetectorRef,\n  ElementRef,\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  AfterViewInit,\n  ContentChildren,\n  QueryList,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\n\n// providers\nimport { AlertIconAndTypesService } from './providers/icon-and-types.service';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrAriaLiveService, ClrAriaLivePoliteness } from '../../utils/a11y/aria-live.service';\nimport { ClrAlertText } from './alert-text';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'clr-alert',\n  providers: [AlertIconAndTypesService, ClrAriaLiveService],\n  templateUrl: './alert.html',\n  styles: [':host { display: block; }'],\n})\nexport class ClrAlert implements OnInit, OnDestroy, AfterViewInit {\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    private iconService: AlertIconAndTypesService,\n    private cdr: ChangeDetectorRef,\n    @Optional() private multiAlertService: MultiAlertService,\n    private commonStrings: ClrCommonStringsService,\n    private ariaLiveService: ClrAriaLiveService\n  ) {}\n\n  ngOnInit() {\n    if (this.multiAlertService) {\n      this.subscriptions.push(\n        this.multiAlertService.changes.subscribe(() => {\n          this.hidden = this.multiAlertService.currentAlert !== this;\n        })\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n  }\n\n  ngAfterViewInit() {\n    // Announce the first time the alert is render if it is not hidden\n    this.announceAriaLiveMessage();\n  }\n\n  @Input('clrAlertSizeSmall') isSmall: boolean = false;\n  @Input('clrAlertClosable') closable: boolean = true;\n  @Input('clrAlertAppLevel') isAppLevel: boolean = false;\n\n  // Aria\n  @Input() clrCloseButtonAriaLabel: string = this.commonStrings.keys.alertCloseButtonAriaLabel;\n\n  @Input('clrAlertClosed') _closed: boolean = false;\n  @Output('clrAlertClosedChange') _closedChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  @Input('clrAlertType')\n  set alertType(val: string) {\n    this.iconService.alertType = val;\n  }\n\n  get alertType(): string {\n    return this.iconService.alertType;\n  }\n\n  /**\n   * clrPolite is not used in the code. Is here just to provide\n   * code complition and also mark component what type AriaLive\n   * will be used.\n   */\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrPolite') polite: boolean = true;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrAssertive') assertive: boolean;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrOff') off: boolean;\n  /**\n   * There is an order on how the attributes will take effect.\n   * Assertive, Off, Polite.\n   *\n   * Polite is default if non is passed.\n   *\n   * In the case of setting all of them to true. Assertive will be used.\n   *\n   */\n  get ariaLive(): ClrAriaLivePoliteness {\n    if (isBooleanAttributeSet(this.assertive)) {\n      return ClrAriaLivePoliteness.assertive;\n    }\n    if (isBooleanAttributeSet(this.off)) {\n      return ClrAriaLivePoliteness.off;\n    }\n    return ClrAriaLivePoliteness.polite;\n  }\n\n  @Input('clrAlertIcon')\n  set alertIconShape(value: string) {\n    this.iconService.alertIconShape = value;\n  }\n\n  get alertClass(): string {\n    return this.iconService.iconInfoFromType(this.iconService.alertType).cssClass;\n  }\n\n  @ContentChildren(ClrAlertText, { descendants: true, read: ElementRef })\n  alertTexts: QueryList<ElementRef>;\n  /**\n   * This handle the find what content to be annonced withing the aria-live container\n   * alerts that are hidden will be ignored.\n   *\n   * @remark\n   * We depend on the ClrAlertText Directive to find and parse the alert messages.\n   * Also this require the HTML markup for the alert to be\n   * ```html\n   * <div class=\"alert\" role=\"alert\">\n   *    <div class=\"alert-items\">\n   *        <div class=\"alert-item static\">\n   *            <span class=\"alert-text\">\n   *                 ...\n   *            </span>\n   *        </div>\n   *    </div>\n   * </div>\n   * ```\n   */\n  private announceAriaLiveMessage(): void {\n    if (!this.hidden && this.alertTexts.length) {\n      const message = this.alertTexts.map(alertText => alertText.nativeElement.textContent).join(' ');\n      // Don't call announce when there is nothing to say\n      if (message) {\n        this.ariaLiveService.announce(message, this.ariaLive);\n      }\n    }\n  }\n\n  private _hidden: boolean;\n\n  set hidden(value: boolean) {\n    if (value !== this._hidden) {\n      this._hidden = value;\n      this.cdr.detectChanges();\n    }\n  }\n\n  get hidden() {\n    return this._hidden;\n  }\n\n  close(): void {\n    if (!this.closable) {\n      return;\n    }\n    this._closed = true;\n    if (this.multiAlertService) {\n      this.multiAlertService.close();\n    }\n    this._closedChanged.emit(true);\n  }\n\n  open(): void {\n    this._closed = false;\n    this._closedChanged.emit(false);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\nimport { AlertIconAndTypesService } from './providers/icon-and-types.service';\n\n@Component({\n  selector: 'clr-alert-item',\n  template: `\n        <div class=\"alert-icon-wrapper\">\n            <clr-icon class=\"alert-icon\" \n              [attr.shape]=\"iconService.alertIconShape\" \n              [attr.title]=\"iconService.alertIconTitle\"></clr-icon>\n        </div>\n        <ng-content></ng-content>\n    `,\n  host: { class: 'alert-item' },\n})\nexport class ClrAlertItem {\n  constructor(public iconService: AlertIconAndTypesService) {}\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  QueryList,\n} from '@angular/core';\nimport { ClrAlert } from './alert';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'clr-alerts',\n  templateUrl: './alerts.html',\n  providers: [MultiAlertService],\n  host: {\n    '[class.alerts]': 'true',\n    '[class.alert-danger]': \"this.currentAlertType == 'danger'\",\n    '[class.alert-info]': \"this.currentAlertType == 'info'\",\n    '[class.alert-success]': \"this.currentAlertType == 'success'\",\n    '[class.alert-warning]': \"this.currentAlertType == 'warning'\",\n  },\n  styles: [':host { display: block }'],\n})\nexport class ClrAlerts implements AfterContentInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  @ContentChildren(ClrAlert)\n  set allAlerts(value: QueryList<ClrAlert>) {\n    this.multiAlertService.manage(value); // provide alerts\n  }\n\n  /**\n   * Input/Output to support two way binding on current alert index\n   */\n  @Input('clrCurrentAlertIndex')\n  public set _inputCurrentIndex(index: number) {\n    if (Number.isInteger(index) && index >= 0) {\n      this.multiAlertService.current = index;\n    }\n  }\n\n  @Output('clrCurrentAlertIndexChange') public currentAlertIndexChange = new EventEmitter<number>(false);\n\n  set currentAlertIndex(index: number) {\n    this.multiAlertService.current = index;\n  }\n  get currentAlertIndex() {\n    return this.multiAlertService.current;\n  }\n\n  /**\n   * Input/Output to support two way binding on current alert instance\n   */\n  @Input('clrCurrentAlert')\n  set currentAlert(alert: ClrAlert) {\n    if (alert) {\n      this.multiAlertService.currentAlert = alert;\n    }\n  }\n  get currentAlert() {\n    return this.multiAlertService.currentAlert;\n  }\n  @Output('clrCurrentAlertChange') public currentAlertChange = new EventEmitter<ClrAlert>(false);\n\n  /**\n   * Ensure we are only dealing with alerts that have not been closed yet\n   */\n  get alerts() {\n    return this.allAlerts.filter(alert => {\n      return alert.hidden === false;\n    });\n  }\n\n  get currentAlertType(): string {\n    if (this.multiAlertService.currentAlert) {\n      return this.multiAlertService.currentAlert.alertType;\n    }\n    return '';\n  }\n\n  constructor(public multiAlertService: MultiAlertService) {}\n\n  ngAfterContentInit() {\n    this.subscriptions.push(\n      this.multiAlertService.changes.subscribe(index => {\n        this.currentAlertIndexChange.next(index);\n        this.currentAlertChange.next(this.multiAlertService.currentAlert);\n      })\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.multiAlertService.destroy();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ClrAlert } from './alert';\nimport { MultiAlertService } from './providers/multi-alert.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-alerts-pager',\n  templateUrl: './alerts-pager.html',\n  host: { '[class.alerts-pager]': 'true' },\n})\nexport class ClrAlertsPager implements OnInit, OnDestroy {\n  private multiAlertServiceChanges: Subscription;\n\n  /**\n   * Input/Output to support two way binding on current alert instance\n   */\n  @Input('clrCurrentAlert')\n  set currentAlert(alert: ClrAlert) {\n    if (alert) {\n      this.multiAlertService.currentAlert = alert;\n    }\n  }\n  get currentAlert() {\n    return this.multiAlertService.currentAlert;\n  }\n\n  @Output('clrCurrentAlertChange') currentAlertChange = new EventEmitter<ClrAlert>(false);\n\n  /**\n   * Input/Output to support two way binding on current alert index\n   */\n  @Input('clrCurrentAlertIndex')\n  set currentAlertIndex(index: number) {\n    this.multiAlertService.current = index;\n  }\n  get currentAlertIndex() {\n    return this.multiAlertService.current;\n  }\n\n  @Output('clrCurrentAlertIndexChange') currentAlertIndexChange = new EventEmitter<number>();\n\n  constructor(public multiAlertService: MultiAlertService, public commonStrings: ClrCommonStringsService) {}\n\n  ngOnInit() {\n    this.multiAlertServiceChanges = this.multiAlertService.changes.subscribe(index => {\n      this.currentAlertIndexChange.emit(index);\n      this.currentAlertChange.emit(this.multiAlertService.activeAlerts[index]);\n    });\n  }\n\n  pageUp() {\n    this.multiAlertService.next();\n  }\n\n  pageDown() {\n    this.multiAlertService.previous();\n  }\n\n  ngOnDestroy() {\n    this.multiAlertServiceChanges.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDropdownModule } from '../../popover/dropdown/dropdown.module';\n\nimport { ClrAlert } from './alert';\nimport { ClrAlertItem } from './alert-item';\nimport { ClrAlerts } from './alerts';\nimport { ClrAlertsPager } from './alerts-pager';\nimport { ClrAlertText } from './alert-text';\n\nexport const CLR_ALERT_DIRECTIVES: Type<any>[] = [ClrAlert, ClrAlertItem, ClrAlerts, ClrAlertsPager, ClrAlertText];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrDropdownModule],\n  declarations: [CLR_ALERT_DIRECTIVES],\n  exports: [CLR_ALERT_DIRECTIVES],\n})\nexport class ClrAlertModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\nimport { ClrAlertModule } from './alert/alert.module';\n\n@NgModule({ exports: [ClrAlertModule] })\nexport class ClrEmphasisModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class ResponsiveNavCodes {\n  public static NAV_LEVEL_1: number = 1;\n  public static NAV_LEVEL_2: number = 2;\n  public static NAV_CLOSE_ALL: string = 'NAV_CLOSE_ALL';\n  public static NAV_OPEN: string = 'NAV_OPEN';\n  public static NAV_CLOSE: string = 'NAV_CLOSE';\n  public static NAV_TOGGLE: string = 'NAV_TOGGLE';\n  public static NAV_CLASS_HAMBURGER_MENU: string = 'open-hamburger-menu';\n  public static NAV_CLASS_OVERFLOW_MENU: string = 'open-overflow-menu';\n  public static NAV_CLASS_TRIGGER_1: string = 'header-hamburger-trigger';\n  public static NAV_CLASS_TRIGGER_2: string = 'header-overflow-trigger';\n  public static NAV_CLASS_LEVEL_1: string = 'clr-nav-level-1';\n  public static NAV_CLASS_LEVEL_2: string = 'clr-nav-level-2';\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport class ResponsiveNavControlMessage {\n  constructor(private _controlCode: string, private _navLevel: number) {}\n\n  get controlCode(): string {\n    return this._controlCode;\n  }\n\n  get navLevel(): number {\n    return this._navLevel;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { ReplaySubject, Subject } from 'rxjs';\n\nimport { ResponsiveNavCodes } from '../responsive-nav-codes';\nimport { ResponsiveNavControlMessage } from '../responsive-nav-control-message';\n\n@Injectable({ providedIn: 'root' })\nexport class ResponsiveNavigationService {\n  public responsiveNavList: number[] = [];\n  private registerNavSubject = new ReplaySubject<number[]>();\n  private controlNavSubject = new Subject<ResponsiveNavControlMessage>();\n\n  get registeredNavs(): Observable<number[]> {\n    return this.registerNavSubject.asObservable();\n  }\n\n  get navControl(): Observable<ResponsiveNavControlMessage> {\n    return this.controlNavSubject.asObservable();\n  }\n\n  constructor() {\n    this.closeAllNavs(); // We start with all navs closed\n  }\n\n  registerNav(navLevel: number): void {\n    if (!navLevel || this.isNavRegistered(navLevel)) {\n      return;\n    }\n    this.responsiveNavList.push(navLevel);\n    this.registerNavSubject.next(this.responsiveNavList);\n  }\n\n  isNavRegistered(navLevel: number): boolean {\n    if (this.responsiveNavList.indexOf(navLevel) > -1) {\n      console.error('Multiple clr-nav-level ' + navLevel + ' attributes found. Please make sure that only one exists');\n      return true;\n    }\n    return false;\n  }\n\n  unregisterNav(navLevel: number) {\n    const index = this.responsiveNavList.indexOf(navLevel);\n    if (index > -1) {\n      this.responsiveNavList.splice(index, 1);\n      this.registerNavSubject.next(this.responsiveNavList);\n    }\n  }\n\n  sendControlMessage(controlCode: string, navLevel: number) {\n    const message: ResponsiveNavControlMessage = new ResponsiveNavControlMessage(controlCode, navLevel);\n    this.controlNavSubject.next(message);\n  }\n\n  closeAllNavs() {\n    const message: ResponsiveNavControlMessage = new ResponsiveNavControlMessage(\n      ResponsiveNavCodes.NAV_CLOSE_ALL,\n      -999\n    );\n    this.controlNavSubject.next(message);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, OnDestroy, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ResponsiveNavigationService } from '../nav/providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from '../nav/responsive-nav-codes';\nimport { ResponsiveNavControlMessage } from '../nav/responsive-nav-control-message';\n\n@Directive({ selector: 'clr-main-container', host: { '[class.main-container]': 'true' } })\nexport class ClrMainContainer implements OnDestroy, OnInit {\n  private _subscription: Subscription;\n  private _classList: DOMTokenList;\n\n  constructor(private elRef: ElementRef, private responsiveNavService: ResponsiveNavigationService) {}\n\n  ngOnInit() {\n    this._classList = this.elRef.nativeElement.classList;\n    this._subscription = this.responsiveNavService.navControl.subscribe({\n      next: (message: ResponsiveNavControlMessage) => {\n        this.processMessage(message);\n      },\n    });\n  }\n\n  processMessage(message: ResponsiveNavControlMessage): void {\n    let navClass: string = ResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU;\n    if (message.controlCode === ResponsiveNavCodes.NAV_CLOSE_ALL) {\n      this._classList.remove(ResponsiveNavCodes.NAV_CLASS_HAMBURGER_MENU);\n      this._classList.remove(ResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU);\n    } else if (message.navLevel === ResponsiveNavCodes.NAV_LEVEL_1) {\n      this.controlNav(message.controlCode, navClass);\n    } else if (message.navLevel === ResponsiveNavCodes.NAV_LEVEL_2) {\n      navClass = ResponsiveNavCodes.NAV_CLASS_OVERFLOW_MENU;\n      this.controlNav(message.controlCode, navClass);\n    }\n  }\n\n  controlNav(controlCode: string, navClass: string): void {\n    if (controlCode === ResponsiveNavCodes.NAV_OPEN) {\n      this._classList.add(navClass);\n    } else if (controlCode === ResponsiveNavCodes.NAV_CLOSE) {\n      this._classList.remove(navClass);\n    } else if (controlCode === ResponsiveNavCodes.NAV_TOGGLE) {\n      this._classList.toggle(navClass);\n    }\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrMainContainer } from './main-container';\n\nexport const CLR_LAYOUT_DIRECTIVES: Type<any>[] = [ClrMainContainer];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [CLR_LAYOUT_DIRECTIVES],\n  exports: [CLR_LAYOUT_DIRECTIVES],\n})\nexport class ClrMainContainerModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-main-container' })\nexport class MainContainerWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { ResponsiveNavigationService } from '../providers/responsive-navigation.service';\nimport { MainContainerWillyWonka } from './main-container-willy-wonka';\n\n@Directive({ selector: 'clr-header' })\nexport class NavDetectionOompaLoompa extends OompaLoompa {\n  private responsiveNavService: ResponsiveNavigationService;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: MainContainerWillyWonka,\n    responsiveNavService: ResponsiveNavigationService\n  ) {\n    if (!willyWonka) {\n      throw new Error('clr-header should only be used inside of a clr-main-container');\n    }\n    super(cdr, willyWonka);\n    this.responsiveNavService = responsiveNavService;\n  }\n\n  // NavDetectionOompaLoompa is the addition of the nav levels\n  // Since we support 2 levels, the possibilities are 0, 1 or 3 (1 + 2)\n  get flavor() {\n    return this.responsiveNavService.responsiveNavList.reduce((sum, navLevel) => sum + navLevel, 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { ResponsiveNavigationService } from './providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from './responsive-nav-codes';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-header',\n  template: `\n        <button\n            type=\"button\"\n            *ngIf=\"isNavLevel1OnPage\"\n            class=\"header-hamburger-trigger\"\n            [attr.aria-label]=\"(openNavLevel !== responsiveNavCodes.NAV_LEVEL_1) ? commonStrings.keys.open : commonStrings.keys.close\"\n            (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_1)\">\n            <span></span>\n        </button>\n        <ng-content></ng-content>\n        <button\n            type=\"button\"\n            *ngIf=\"isNavLevel2OnPage\"\n            class=\"header-overflow-trigger\"\n            [attr.aria-label]=\"(openNavLevel !== responsiveNavCodes.NAV_LEVEL_2) ? commonStrings.keys.open : commonStrings.keys.close\"\n            (click)=\"toggleNav(responsiveNavCodes.NAV_LEVEL_2)\">\n            <span></span>\n        </button>\n        <div class=\"header-backdrop\" (click)=\"closeOpenNav()\"></div>\n    `,\n  host: { '[class.header]': 'true' },\n})\nexport class ClrHeader implements OnDestroy {\n  isNavLevel1OnPage = false;\n  isNavLevel2OnPage = false;\n  openNavLevel: number = null;\n  responsiveNavCodes = ResponsiveNavCodes;\n  private _subscription: Subscription;\n\n  constructor(\n    private responsiveNavService: ResponsiveNavigationService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._subscription = this.responsiveNavService.registeredNavs.subscribe({\n      next: (navLevelList: number[]) => {\n        this.initializeNavTriggers(navLevelList);\n      },\n    });\n  }\n\n  // reset triggers. handles cases when an application has different nav levels on different pages.\n  resetNavTriggers() {\n    this.isNavLevel1OnPage = false;\n    this.isNavLevel2OnPage = false;\n  }\n\n  // decides which triggers to show on the header\n  initializeNavTriggers(navList: number[]): void {\n    this.resetNavTriggers();\n    if (navList.length > 2) {\n      console.error('More than 2 Nav Levels detected.');\n      return;\n    }\n    navList.forEach(navLevel => {\n      if (navLevel === ResponsiveNavCodes.NAV_LEVEL_1) {\n        this.isNavLevel1OnPage = true;\n      } else if (navLevel === ResponsiveNavCodes.NAV_LEVEL_2) {\n        this.isNavLevel2OnPage = true;\n      }\n    });\n  }\n\n  // closes the nav that is open\n  closeOpenNav() {\n    this.responsiveNavService.closeAllNavs();\n  }\n\n  // toggles the nav that is open\n  toggleNav(navLevel: number) {\n    this.openNavLevel = this.openNavLevel === navLevel ? null : navLevel;\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_TOGGLE, navLevel);\n  }\n\n  ngOnDestroy() {\n    this._subscription.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, ElementRef, HostListener, Input, OnInit } from '@angular/core';\n\nimport { ResponsiveNavigationService } from './providers/responsive-navigation.service';\nimport { ResponsiveNavCodes } from './responsive-nav-codes';\n\n@Directive({ selector: '[clr-nav-level]' })\nexport class ClrNavLevel implements OnInit {\n  @Input('clr-nav-level') _level: number;\n\n  constructor(private responsiveNavService: ResponsiveNavigationService, private elementRef: ElementRef) {}\n\n  ngOnInit() {\n    if (this.level !== ResponsiveNavCodes.NAV_LEVEL_1 && this.level !== ResponsiveNavCodes.NAV_LEVEL_2) {\n      console.error('Nav Level can only be 1 or 2');\n      return;\n    }\n    this.responsiveNavService.registerNav(this.level);\n    this.addNavClass(this.level);\n  }\n\n  addNavClass(level: number) {\n    const navHostClassList = this.elementRef.nativeElement.classList;\n    if (level === ResponsiveNavCodes.NAV_LEVEL_1) {\n      navHostClassList.add(ResponsiveNavCodes.NAV_CLASS_LEVEL_1);\n    } else if (level === ResponsiveNavCodes.NAV_LEVEL_2) {\n      navHostClassList.add(ResponsiveNavCodes.NAV_CLASS_LEVEL_2);\n    }\n  }\n\n  get level(): number {\n    return this._level;\n  }\n\n  // getter to access the responsive navigation codes from the template\n  get responsiveNavCodes(): ResponsiveNavCodes {\n    return ResponsiveNavCodes;\n  }\n\n  open(): void {\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_OPEN, this.level);\n  }\n\n  close(): void {\n    this.responsiveNavService.sendControlMessage(ResponsiveNavCodes.NAV_CLOSE, this.level);\n  }\n\n  // TODO: Figure out whats the best way to do this. Possible methods\n  // 1. HostListener (current solution)\n  // 2. Directives on the .nav-link class. We discussed on moving away from class selectors but I forget the reason\n  // why\n  @HostListener('click', ['$event.target'])\n  onMouseClick(target: any) {\n    let current: any = target; // Get the element in the DOM on which the mouse was clicked\n    const navHost: any = this.elementRef.nativeElement; // Get the current nav native HTML element\n\n    // Start checking if current and navHost are equal.\n    // If not traverse to the parentNode and check again.\n    while (current) {\n      if (current === navHost) {\n        return;\n      } else if (current.classList.contains('nav-link')) {\n        this.close();\n        return;\n      }\n      current = current.parentNode;\n    }\n  }\n\n  ngOnDestroy() {\n    this.responsiveNavService.unregisterNav(this.level);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrDropdownModule } from '../../popover/dropdown/dropdown.module';\n\nimport { MainContainerWillyWonka } from './chocolate/main-container-willy-wonka';\nimport { NavDetectionOompaLoompa } from './chocolate/nav-detection-oompa-loompa';\nimport { ClrHeader } from './header';\nimport { ClrNavLevel } from './nav-level';\n\nexport const CLR_NAVIGATION_DIRECTIVES: Type<any>[] = [\n  ClrHeader,\n  ClrNavLevel,\n  NavDetectionOompaLoompa,\n  MainContainerWillyWonka,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrDropdownModule],\n  declarations: [CLR_NAVIGATION_DIRECTIVES],\n  exports: [CLR_NAVIGATION_DIRECTIVES],\n})\nexport class ClrNavigationModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, TemplateRef, ViewChild } from '@angular/core';\n\n@Component({\n  template: `\n      <ng-template>\n        <ng-content></ng-content>\n      </ng-template>\n    `,\n})\nexport class TemplateRefContainer {\n  @ViewChild(TemplateRef) template: TemplateRef<any>;\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Type } from '@angular/core';\nimport { TemplateRefContainer } from './template-ref-container';\n\nexport * from './template-ref-container';\n\nexport const TEMPLATE_REF_DIRECTIVES: Type<any>[] = [TemplateRefContainer];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { TEMPLATE_REF_DIRECTIVES } from './index';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TEMPLATE_REF_DIRECTIVES],\n  entryComponents: [TEMPLATE_REF_DIRECTIVES],\n  exports: [TEMPLATE_REF_DIRECTIVES],\n})\nexport class ClrTemplateRefModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive } from '@angular/core';\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-tabs' })\nexport class TabsWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { ChangeDetectorRef, Directive, Inject, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { IF_ACTIVE_ID, IfActiveService } from '../../../utils/conditional/if-active.service';\n\nimport { TabsWillyWonka } from './tabs-willy-wonka';\n\n@Directive({ selector: '[clrTabLink], clr-tab-content' })\nexport class ActiveOompaLoompa extends OompaLoompa {\n  private ifActive: IfActiveService;\n  private id: number;\n\n  constructor(\n    cdr: ChangeDetectorRef,\n    @Optional() willyWonka: TabsWillyWonka,\n    @Inject(IF_ACTIVE_ID) id: number,\n    ifActive: IfActiveService\n  ) {\n    if (!willyWonka) {\n      throw new Error('clrTabLink and clr-tab-content should only be used inside of a clr-tabs');\n    }\n    super(cdr, willyWonka);\n    this.ifActive = ifActive;\n    this.id = id;\n  }\n\n  get flavor() {\n    return this.ifActive.current === this.id;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable } from '@angular/core';\n\n// TODO: if we find more components that could use this, consider moving this to utils\n@Injectable()\nexport class AriaService {\n  public ariaLabelledBy: string;\n  public ariaControls: string;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Injectable, ViewContainerRef } from '@angular/core';\nimport { ClrTab } from '../tab';\nimport { TabsLayout } from '../enums/tabs-layout.enum';\n\n@Injectable()\nexport class TabsService {\n  private _children: ClrTab[] = [];\n\n  layout: TabsLayout = TabsLayout.HORIZONTAL;\n\n  register(tab: ClrTab) {\n    this._children.push(tab);\n  }\n\n  get children() {\n    return this._children;\n  }\n\n  get activeTab() {\n    return this.children.find((tab: ClrTab) => {\n      return tab.active;\n    });\n  }\n\n  get overflowTabs() {\n    if (this.layout === TabsLayout.VERTICAL) {\n      return [];\n    } else {\n      return this.children.filter((tab: ClrTab) => tab.tabLink.inOverflow === true);\n    }\n  }\n\n  unregister(tab: ClrTab) {\n    const index = this.children.indexOf(tab);\n    if (index > -1) {\n      this.children.splice(index, 1);\n    }\n  }\n\n  tabContentViewContainer: ViewContainerRef;\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, EmbeddedViewRef, Inject, Input, OnDestroy, TemplateRef, ViewChild } from '@angular/core';\nimport { IF_ACTIVE_ID, IfActiveService } from '../../utils/conditional/if-active.service';\nimport { AriaService } from './providers/aria.service';\nimport { TabsService } from './providers/tabs.service';\n\nlet nbTabContentComponents: number = 0;\n\n@Component({\n  selector: 'clr-tab-content',\n  template: `\n    <ng-template #tabContentProjectedRef>\n      <section [id]=\"tabContentId\" role=\"tabpanel\" class=\"tab-content\" [class.active]=\"active\"\n               [hidden]=\"!active\"\n               [attr.aria-labelledby]=\"ariaLabelledBy\"\n               [attr.aria-expanded]=\"active\"\n               [attr.aria-hidden]=\"!active\">\n        <ng-content></ng-content>\n      </section>\n    </ng-template>\n    `,\n})\nexport class ClrTabContent implements OnDestroy {\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) public id: number,\n    private ariaService: AriaService,\n    private tabsService: TabsService\n  ) {\n    if (!this.tabContentId) {\n      this.tabContentId = 'clr-tab-content-' + nbTabContentComponents++;\n    }\n  }\n\n  private viewRef: EmbeddedViewRef<ClrTabContent>;\n\n  // The template must be applied on the top-down phase of view-child initialization to prevent\n  // components in the content from initializing before a content container exists.\n  // Some child components need their container for sizing calculations.\n  /* tslint:disable:no-unused-variable */\n  @ViewChild('tabContentProjectedRef', { static: true })\n  private set templateRef(value: TemplateRef<ClrTabContent>) {\n    this.viewRef = this.tabsService.tabContentViewContainer.createEmbeddedView(value);\n  }\n  /* tslint:enable:no-unused-variable */\n\n  get ariaLabelledBy(): string {\n    return this.ariaService.ariaLabelledBy;\n  }\n\n  get tabContentId(): string {\n    return this.ariaService.ariaControls;\n  }\n\n  @Input('id')\n  set tabContentId(id: string) {\n    this.ariaService.ariaControls = id;\n  }\n\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  ngOnDestroy(): void {\n    const index = this.tabsService.tabContentViewContainer.indexOf(this.viewRef);\n    if (index > -1) {\n      this.tabsService.tabContentViewContainer.remove(index);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { InjectionToken } from '@angular/core';\n\nlet nbTabsComponent = 0;\n\nexport const TABS_ID = new InjectionToken<number>('TABS_ID');\n\nexport function tokenFactory() {\n  return 'clr-tabs-' + nbTabsComponent++;\n}\n\nexport const TABS_ID_PROVIDER = {\n  provide: TABS_ID,\n  useFactory: tokenFactory,\n};\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ClrFocusDirection {\n  VERTICAL = 'vertical',\n  HORIZONTAL = 'horizontal',\n  BOTH = 'both',\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  ComponentFactoryResolver,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport { IF_ACTIVE_ID, IfActiveService } from '../../utils/conditional/if-active.service';\nimport { TemplateRefContainer } from '../../utils/template-ref/template-ref-container';\nimport { TabsService } from './providers/tabs.service';\n\nimport { AriaService } from './providers/aria.service';\nimport { TABS_ID } from './tabs-id.provider';\nimport { TabsLayout } from './enums/tabs-layout.enum';\n\nlet nbTabLinkComponents: number = 0;\n\n@Directive({\n  selector: '[clrTabLink]',\n  host: {\n    '[attr.aria-hidden]': 'false',\n    '[class.btn]': 'true',\n    role: 'tab',\n    type: 'button',\n  },\n})\nexport class ClrTabLink {\n  private _inOverflow: boolean;\n\n  @Input('clrTabLinkInOverflow')\n  set inOverflow(inOverflow) {\n    this._inOverflow = inOverflow;\n  }\n\n  get inOverflow(): boolean {\n    return this._inOverflow && this.tabsService.layout !== TabsLayout.VERTICAL;\n  }\n\n  @HostBinding('class.btn-link')\n  @HostBinding('class.nav-link')\n  get addLinkClasses() {\n    return !this.inOverflow;\n  }\n\n  templateRefContainer: TemplateRefContainer;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) private id: number,\n    private ariaService: AriaService,\n    public el: ElementRef,\n    private cfr: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private tabsService: TabsService,\n    @Inject(TABS_ID) public tabsId: number\n  ) {\n    if (!this.tabLinkId) {\n      this.tabLinkId = 'clr-tab-link-' + nbTabLinkComponents++;\n    }\n\n    // Tab links can be rendered in one of two places: in the main area or inside the overflow dropdown menu.\n    // Here, we create a container so that its template can be used to create embeddedView on the fly.\n    // See TabsService's renderView() method and how it's used in Tabs class for an example.\n    const factory = this.cfr.resolveComponentFactory(TemplateRefContainer);\n    this.templateRefContainer = this.viewContainerRef.createComponent(factory, undefined, undefined, [\n      [this.el.nativeElement],\n    ]).instance;\n  }\n\n  @HostBinding('attr.aria-controls')\n  get ariaControls(): string {\n    return this.ariaService.ariaControls;\n  }\n\n  get tabLinkId(): string {\n    return this.ariaService.ariaLabelledBy;\n  }\n\n  @HostBinding('id')\n  @Input('id')\n  set tabLinkId(id: string) {\n    this.ariaService.ariaLabelledBy = id;\n  }\n\n  @HostListener('click')\n  activate() {\n    this.ifActiveService.current = this.id;\n  }\n\n  @HostBinding('class.active')\n  @HostBinding('attr.aria-selected')\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n\n  @HostBinding('attr.tabindex')\n  get tabindex() {\n    return this.active ? 0 : -1;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ContentChild, Inject } from '@angular/core';\n\nimport { IF_ACTIVE_ID, IF_ACTIVE_ID_PROVIDER, IfActiveService } from '../../utils/conditional/if-active.service';\n\nimport { AriaService } from './providers/aria.service';\nimport { TabsService } from './providers/tabs.service';\nimport { ClrTabContent } from './tab-content';\nimport { ClrTabLink } from './tab-link.directive';\n\n@Component({\n  selector: 'clr-tab',\n  template: `\n        <ng-content></ng-content>\n    `,\n  providers: [IF_ACTIVE_ID_PROVIDER, AriaService],\n})\nexport class ClrTab {\n  @ContentChild(ClrTabLink, { static: true })\n  tabLink: ClrTabLink;\n  @ContentChild(ClrTabContent, { static: true })\n  tabContent: ClrTabContent;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    @Inject(IF_ACTIVE_ID) public id: number,\n    private tabsService: TabsService\n  ) {\n    tabsService.register(this);\n  }\n\n  ngOnDestroy() {\n    this.tabsService.unregister(this);\n  }\n\n  get active() {\n    return this.ifActiveService.current === this.id;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-tab-overflow-content',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.dropdown-menu]': 'true',\n  },\n})\nexport class ClrTabOverflowContent {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum AccordionStrategy {\n  Default = 'default', // only one panel at a time\n  Multi = 'multi', // can have multiple panels open at a time\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum AccordionStatus {\n  Inactive = 'inactive',\n  Error = 'error',\n  Complete = 'complete',\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, ElementRef, Inject, PLATFORM_ID, HostBinding } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Directive({\n  selector: '[clrKeyFocusItem]',\n})\nexport class ClrKeyFocusItem {\n  @HostBinding('attr.tabindex') tabIndex: number;\n\n  get nativeElement() {\n    return this.elementRef.nativeElement;\n  }\n\n  constructor(private elementRef: ElementRef, @Inject(PLATFORM_ID) private platformId: Object) {}\n\n  focus() {\n    if (isPlatformBrowser(this.platformId)) {\n      this.elementRef.nativeElement.focus();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  QueryList,\n  ElementRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { ClrFocusDirection } from './enums/focus-direction.enum';\nimport { FocusableItem } from './interfaces';\n\nimport { KeyCodes } from './../../enums/key-codes.enum';\nimport { ClrKeyFocusItem } from './key-focus-item';\nimport { getKeyCodes, preventArrowKeyScroll } from './util';\n\n@Component({\n  selector: '[clrKeyFocus]',\n  template: '<ng-content></ng-content>',\n})\nexport class ClrKeyFocus {\n  constructor(private elementRef: ElementRef) {}\n  @Input('clrDirection') direction = ClrFocusDirection.VERTICAL;\n  @Input('clrFocusOnLoad') focusOnLoad = false;\n  @Output('clrFocusChange') private focusChange: EventEmitter<number> = new EventEmitter<number>();\n  @ContentChildren(ClrKeyFocusItem, { descendants: true })\n  private clrKeyFocusItems: QueryList<ClrKeyFocusItem>;\n\n  private _focusableItems: Array<FocusableItem>;\n  @Input('clrKeyFocus')\n  set focusableItems(elements: Array<FocusableItem>) {\n    // We accept a list of focusable elements (HTMLElements or existing Directives) or auto query for clrKeyFocusItem\n    // We accept a list reference in the cases where we cannot use ContentChildren to query\n    // ContentChildren can be unavailable if content is projected outside the scope of the component (see tabs).\n    if (elements && elements.length) {\n      this._focusableItems = elements;\n      this.initializeFocus();\n    }\n  }\n\n  get nativeElement(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  get focusableItems() {\n    if (this._focusableItems) {\n      return this._focusableItems;\n    } else {\n      return this.clrKeyFocusItems.toArray();\n    }\n  }\n\n  private _current: number = 0;\n\n  get current() {\n    return this._current;\n  }\n\n  set current(value: number) {\n    if (this._current !== value) {\n      this._current = value;\n    }\n  }\n\n  get currentItem() {\n    return this.focusableItems[this._current];\n  }\n\n  get currentItemElement(): HTMLElement {\n    return this.currentItem.nativeElement ? this.currentItem.nativeElement : <HTMLElement>this.currentItem;\n  }\n\n  focusCurrent() {\n    this.currentItem.focus();\n    this.focusChange.next(this._current);\n  }\n\n  moveTo(position: number) {\n    if (this.positionInRange(position)) {\n      this.current = position;\n      this.focusCurrent();\n    }\n  }\n\n  private subscriptions: Subscription[] = [];\n\n  ngAfterContentInit() {\n    this.subscriptions.push(this.listenForItemUpdates());\n    this.initializeFocus();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  @HostListener('keydown', ['$event'])\n  handleKeyboardEvent(event: KeyboardEvent) {\n    // Make sure event was originated on the current item's element\n    if (this.currentItemElement !== event.target) {\n      const position = this.getItemPosition(<HTMLElement>event.target);\n      if (this.positionInRange(position)) {\n        this.current = position;\n      }\n    }\n\n    if (this.prevKeyPressed(event) && this.currentFocusIsNotFirstItem()) {\n      this.moveTo(this.current - 1);\n    } else if (this.nextKeyPressed(event) && this.currentFocusIsNotLastItem()) {\n      this.moveTo(this.current + 1);\n    } else if (event.code === KeyCodes.Home) {\n      this.moveTo(0);\n    } else if (event.code === KeyCodes.End) {\n      this.moveTo(this.focusableItems.length - 1);\n    }\n\n    preventArrowKeyScroll(event);\n  }\n\n  @HostListener('click', ['$event'])\n  setClickedItemCurrent(event: any) {\n    const position = this.getItemPosition(event.target);\n\n    if (position > -1) {\n      this.moveTo(position);\n    }\n  }\n\n  private getItemPosition(item: HTMLElement) {\n    if (this._focusableItems) {\n      return this.focusableItems.indexOf(item);\n    } else {\n      return this.focusableItems.map(_item => _item.nativeElement).indexOf(item);\n    }\n  }\n\n  private positionInRange(position: number) {\n    return position >= 0 && position < this.focusableItems.length;\n  }\n\n  private currentFocusIsNotFirstItem() {\n    return this._current - 1 >= 0;\n  }\n\n  private currentFocusIsNotLastItem() {\n    return this._current + 1 < this.focusableItems.length;\n  }\n\n  private initializeFocus() {\n    if (this.focusableItems && this.focusableItems.length) {\n      // It is possible that the focus was on an element, whose index is no longer available.\n      // This can happen when some of the focusable elements are being removed.\n      // In such cases, the new focus is initialized on the last focusable element.\n      if (this._current >= this.focusableItems.length) {\n        this._current = this.focusableItems.length - 1;\n      }\n\n      if (this.focusOnLoad) {\n        this.currentItem.focus();\n        this.focusChange.next();\n      }\n    }\n  }\n\n  private listenForItemUpdates() {\n    return this.clrKeyFocusItems.changes.subscribe(() => {\n      this.initializeFocus();\n    });\n  }\n\n  private nextKeyPressed(event: KeyboardEvent) {\n    const keyCodes = getKeyCodes(event);\n\n    switch (this.direction) {\n      case ClrFocusDirection.VERTICAL:\n        return event.key === keyCodes.ArrowDown;\n      case ClrFocusDirection.HORIZONTAL:\n        return event.key === keyCodes.ArrowRight;\n      case ClrFocusDirection.BOTH:\n        return event.key === keyCodes.ArrowDown || event.key === keyCodes.ArrowRight;\n      default:\n        return false;\n    }\n  }\n\n  private prevKeyPressed(event: KeyboardEvent) {\n    const keyCodes = getKeyCodes(event);\n\n    switch (this.direction) {\n      case ClrFocusDirection.VERTICAL:\n        return event.key === keyCodes.ArrowUp;\n      case ClrFocusDirection.HORIZONTAL:\n        return event.key === keyCodes.ArrowLeft;\n      case ClrFocusDirection.BOTH:\n        return event.key === keyCodes.ArrowUp || event.key === keyCodes.ArrowLeft;\n      default:\n        return false;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  Inject,\n  Input,\n  OnDestroy,\n  QueryList,\n  ViewChild,\n  ViewContainerRef,\n  HostBinding,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { IfActiveService } from '../../utils/conditional/if-active.service';\nimport { ClrKeyFocus } from '../../utils/focus/key-focus/key-focus';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { TabsLayout } from './enums/tabs-layout.enum';\nimport { TabsService } from './providers/tabs.service';\nimport { ClrTab } from './tab';\nimport { ClrTabLink } from './tab-link.directive';\nimport { TABS_ID, TABS_ID_PROVIDER } from './tabs-id.provider';\nimport { ClrTabOverflowContent } from './tab-overflow-content';\n\n@Component({\n  selector: 'clr-tabs',\n  template: `\n        <ul class=\"nav\" role=\"tablist\" [attr.aria-owns]=\"tabIds\" [clrKeyFocus]=\"tabLinkElements\" clrDirection=\"both\" (clrFocusChange)=\"toggleOverflowOnPosition($event)\" (focusout)=\"resetKeyFocusCurrentToActive($event)\">\n            <!--tab links-->\n            <ng-container *ngFor=\"let link of tabLinkDirectives\">\n                <ng-container *ngIf=\"link.tabsId === tabsId && !link.inOverflow\">\n                    <li role=\"presentation\" class=\"nav-item\">\n                        <ng-container [ngTemplateOutlet]=\"link.templateRefContainer.template\"></ng-container>\n                    </li>\n                </ng-container>\n            </ng-container>\n            <ng-container *ngIf=\"tabsService.overflowTabs.length > 0\">\n                <div class=\"tabs-overflow bottom-right\" role=\"presentation\" \n                  [class.open]=\"toggleService.open\">\n                    <li role=\"application\" class=\"nav-item\">\n                        <button #tabOverflowTrigger class=\"btn btn-link nav-link dropdown-toggle\" type=\"button\" aria-hidden=\"true\" \n                        [attr.tabindex]=\"activeTabInOverflow && !toggleService.open? 0: -1\"\n                        [class.active]=\"activeTabInOverflow\"\n                        [class.open]=\"toggleService.open\"\n                        (mousedown)=\"_mousedown = true\"\n                        (focus)=\"openOverflowOnFocus()\"\n                        (click)=\"toggleOverflowOnClick()\">\n                            <clr-icon shape=\"ellipsis-horizontal\"\n                              [class.is-info]=\"toggleService.open\"\n                              [attr.title]=\"commonStrings.keys.more\"></clr-icon>\n                        </button>\n                    </li>\n                    <!--tab links in overflow menu-->\n                    <clr-tab-overflow-content *ngIf=\"toggleService.open\"  \n                      (document:keydown.esc)=\"closeOnEscapeKey()\" \n                      (document:click)=\"closeOnOutsideClick($event, tabOverflowTrigger)\"\n                      (focusout)=\"closeOnFocusOut($event)\">\n                        <ng-container *ngFor=\"let link of tabLinkDirectives\">\n                            <ng-container *ngIf=\"link.tabsId === tabsId && link.inOverflow\"\n                                          [ngTemplateOutlet]=\"link.templateRefContainer.template\">\n                            </ng-container>\n                        </ng-container>\n                    </clr-tab-overflow-content>\n                </div>\n            </ng-container>\n        </ul>\n        <ng-container #tabContentViewContainer></ng-container>\n    `,\n  providers: [IfActiveService, ClrPopoverToggleService, TabsService, TABS_ID_PROVIDER],\n})\nexport class ClrTabs implements AfterContentInit, OnDestroy {\n  private subscriptions: Subscription[] = [];\n\n  private get overflowPosition() {\n    return this._tabLinkDirectives.filter(link => !link.inOverflow).length;\n  }\n\n  /* tslint:disable:no-unused-variable */\n  @ViewChild('tabContentViewContainer', { static: true, read: ViewContainerRef })\n  private set tabContentViewContainer(value: ViewContainerRef) {\n    this.tabsService.tabContentViewContainer = value;\n  }\n  /* tslint:enable:no-unused-variable */\n\n  @Input('clrLayout')\n  set layout(layout: TabsLayout) {\n    if (\n      Object.keys(TabsLayout)\n        .map(key => {\n          return TabsLayout[key];\n        })\n        .indexOf(layout) >= 0\n    ) {\n      this.tabsService.layout = layout;\n    }\n  }\n  get layout(): TabsLayout {\n    return this.tabsService.layout;\n  }\n\n  @ContentChildren(ClrTab) private tabs: QueryList<ClrTab>;\n\n  private _tabLinkDirectives: ClrTabLink[] = [];\n  get tabLinkDirectives(): ClrTabLink[] {\n    return this._tabLinkDirectives;\n  }\n\n  tabLinkElements: HTMLElement[] = [];\n\n  @ViewChild(ClrKeyFocus, { static: true })\n  keyFocus: ClrKeyFocus;\n\n  constructor(\n    public ifActiveService: IfActiveService,\n    public toggleService: ClrPopoverToggleService,\n    public tabsService: TabsService,\n    @Inject(TABS_ID) public tabsId: number,\n    public commonStrings: ClrCommonStringsService\n  ) {}\n\n  get activeTabInOverflow() {\n    return this.tabsService.overflowTabs.indexOf(this.tabsService.activeTab) > -1;\n  }\n\n  get activeTabPosition() {\n    return this._tabLinkDirectives.findIndex(link => link.active);\n  }\n\n  get tabIds() {\n    return this.tabsService.children.map(tab => tab.tabLink.tabLinkId).join(' ');\n  }\n\n  get isCurrentInOverflow() {\n    return this.keyFocus.current >= this.overflowPosition;\n  }\n\n  @HostBinding('class.tabs-vertical')\n  get isVertical() {\n    return this.layout === TabsLayout.VERTICAL;\n  }\n\n  toggleOverflowOnPosition(position: number) {\n    // we need to check current position to determine\n    // whether we need to open the tab overflow or not\n    this.toggleService.open = position >= this.overflowPosition;\n  }\n\n  private _tabOverflowEl: HTMLElement;\n\n  @ViewChild(ClrTabOverflowContent, { read: ElementRef })\n  set tabOverflowEl(value: ElementRef) {\n    this._tabOverflowEl = value && value.nativeElement;\n    if (this.toggleService.open && value) {\n      // only when tab overflow view element is registered,\n      // we need to move the focus to the first item\n      this.keyFocus.focusCurrent();\n    }\n  }\n\n  resetKeyFocusCurrentToActive(event: FocusEvent) {\n    const keyFocusContainsFocus = this.keyFocus.nativeElement.contains(<HTMLElement>event.relatedTarget);\n    if (!keyFocusContainsFocus && this.keyFocus.current !== this.activeTabPosition) {\n      this.keyFocus.current = this.activeTabPosition;\n    }\n  }\n\n  toggleOverflowOnClick() {\n    if (this.isCurrentInOverflow && this.toggleService.open) {\n      this.keyFocus.moveTo(this.overflowPosition - 1);\n    } else {\n      this.keyFocus.moveTo(this.overflowPosition);\n    }\n\n    // once click handler completes running,\n    // reset the _mousedown flag\n    this._mousedown = false;\n  }\n\n  // in order to check focus is triggered by click\n  // we are using this _mousedown flag\n  _mousedown = false;\n\n  openOverflowOnFocus() {\n    // This method should be called only on keyboard generated focus\n    // when the active tab is in the overflow\n    if (!this._mousedown && !this.toggleService.open) {\n      this.keyFocus.moveTo(this.activeTabPosition);\n    }\n  }\n\n  closeOnFocusOut(event: FocusEvent) {\n    if (\n      !this._tabOverflowEl.contains(<HTMLElement>event.relatedTarget) &&\n      this.toggleService.open &&\n      !this._mousedown\n    ) {\n      this.toggleService.open = false;\n\n      // if the focus is out of overflow and lands on the active tab link\n      // which is currently visible, set the key focus current to activeTabPosition\n      if (this.tabLinkElements[this.activeTabPosition] === event.relatedTarget) {\n        this.keyFocus.current = this.activeTabPosition;\n      }\n    }\n  }\n\n  closeOnEscapeKey() {\n    // Move current to the last visible focusable item\n    this.keyFocus.moveTo(this.overflowPosition - 1);\n  }\n\n  closeOnOutsideClick(event: Event, tabOverflowTrigger: HTMLElement) {\n    // Exit early if the event target is the trigger element itself or element that's inside the trigger element.\n    // This is because we have another handler on the tabOverflowTrigger element itself.\n    // As this handler method is on the document level so the event bubbles up to it and conflicts\n    // with the tabOverflowTrigger handler resulting in opening the tab overflow and closing it right away consecutively.\n    if (event.target === tabOverflowTrigger || tabOverflowTrigger.contains(<HTMLElement>event.target)) {\n      return;\n    }\n\n    // Move current to the last visible focusable item\n    if (!this._tabOverflowEl.contains(<HTMLElement>event.target) && this.isCurrentInOverflow) {\n      this.keyFocus.moveTo(this.overflowPosition - 1);\n    }\n  }\n\n  private listenForTabLinkChanges() {\n    return this.tabs.changes.pipe(startWith(this.tabs.map(tab => tab.tabLink))).subscribe(() => {\n      this._tabLinkDirectives = this.tabs.map(tab => tab.tabLink);\n      this.tabLinkElements = this._tabLinkDirectives.map(tab => tab.el.nativeElement);\n    });\n  }\n\n  ngAfterContentInit() {\n    this.subscriptions.push(this.listenForTabLinkChanges());\n\n    if (typeof this.ifActiveService.current === 'undefined' && this.tabLinkDirectives[0]) {\n      this.tabLinkDirectives[0].activate();\n    }\n\n    // set initial current position\n    this.keyFocus.current = this.activeTabPosition;\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(sub => {\n      sub.unsubscribe();\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrKeyFocus } from './key-focus';\nimport { ClrKeyFocusItem } from './key-focus-item';\n\nconst KEY_FOCUS_DIRECTIVES: Type<any>[] = [ClrKeyFocus, ClrKeyFocusItem];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [KEY_FOCUS_DIRECTIVES],\n  exports: [KEY_FOCUS_DIRECTIVES],\n})\nexport class ClrKeyFocusModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrTemplateRefModule } from '../../utils/template-ref/template-ref.module';\n\nimport { ActiveOompaLoompa } from './chocolate/active-oompa-loompa';\nimport { TabsWillyWonka } from './chocolate/tabs-willy-wonka';\nimport { ClrTab } from './tab';\nimport { ClrTabContent } from './tab-content';\nimport { ClrTabLink } from './tab-link.directive';\nimport { ClrTabOverflowContent } from './tab-overflow-content';\nimport { ClrTabs } from './tabs';\nimport { ClrKeyFocusModule } from '../../utils/focus/key-focus/key-focus.module';\n\nexport const CLR_TABS_DIRECTIVES: Type<any>[] = [\n  ClrTabContent,\n  ClrTab,\n  ClrTabs,\n  ClrTabOverflowContent,\n  ClrTabLink,\n  TabsWillyWonka,\n  ActiveOompaLoompa,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrConditionalModule, ClrIconModule, ClrTemplateRefModule, ClrKeyFocusModule],\n  declarations: [CLR_TABS_DIRECTIVES],\n  exports: [CLR_TABS_DIRECTIVES, ClrConditionalModule],\n})\nexport class ClrTabsModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VerticalNavGroupRegistrationService {\n  public navGroupCount: number = 0;\n\n  registerNavGroup() {\n    this.navGroupCount++;\n  }\n\n  unregisterNavGroup(): void {\n    this.navGroupCount--;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class VerticalNavIconService {\n  private _icons: number = 0;\n\n  get hasIcons(): boolean {\n    return this._icons > 0;\n  }\n\n  registerIcon(): void {\n    this._icons++;\n  }\n\n  unregisterIcon(): void {\n    this._icons--;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class VerticalNavService {\n  private _animateOnCollapsed: Subject<boolean> = new Subject<boolean>();\n\n  get animateOnCollapsed(): Observable<boolean> {\n    return this._animateOnCollapsed.asObservable();\n  }\n\n  private _collapsedChanged: Subject<boolean> = new Subject<boolean>();\n\n  get collapsedChanged(): Observable<boolean> {\n    return this._collapsedChanged.asObservable();\n  }\n\n  private _collapsed: boolean = false;\n\n  get collapsed(): boolean {\n    return this._collapsed;\n  }\n\n  set collapsed(value: boolean) {\n    value = !!value;\n    if (this.collapsible && this._collapsed !== value) {\n      this.updateCollapseBehavior(value);\n    }\n  }\n\n  private _collapsible: boolean = false;\n\n  get collapsible(): boolean {\n    return this._collapsible;\n  }\n\n  set collapsible(value: boolean) {\n    value = !!value;\n    if (this._collapsible !== value) {\n      if (!value && this.collapsed) {\n        this.updateCollapseBehavior(false);\n      }\n      this._collapsible = value;\n    }\n  }\n\n  private updateCollapseBehavior(value: boolean): void {\n    this._animateOnCollapsed.next(value);\n    this._collapsed = value;\n    this._collapsedChanged.next(value);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { VerticalNavGroupRegistrationService } from './providers/vertical-nav-group-registration.service';\nimport { VerticalNavIconService } from './providers/vertical-nav-icon.service';\nimport { VerticalNavService } from './providers/vertical-nav.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\n@Component({\n  selector: 'clr-vertical-nav',\n  templateUrl: './vertical-nav.html',\n  providers: [VerticalNavService, VerticalNavIconService, VerticalNavGroupRegistrationService],\n  host: {\n    class: 'clr-vertical-nav',\n    '[class.is-collapsed]': 'collapsed',\n    '[class.has-nav-groups]': 'hasNavGroups',\n    '[class.has-icons]': 'hasIcons',\n  },\n})\nexport class ClrVerticalNav implements OnDestroy {\n  get collapsible(): boolean {\n    return this._navService.collapsible;\n  }\n\n  @Input('clrVerticalNavCollapsible')\n  set collapsible(value: boolean) {\n    this._navService.collapsible = value;\n  }\n\n  get collapsed(): boolean {\n    return this._navService.collapsed;\n  }\n\n  @Input('clrVerticalNavCollapsed')\n  set collapsed(value: boolean) {\n    this._navService.collapsed = value;\n  }\n\n  @Output('clrVerticalNavCollapsedChange')\n  private _collapsedChanged: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  get hasNavGroups(): boolean {\n    return this._navGroupRegistrationService.navGroupCount > 0;\n  }\n\n  get hasIcons(): boolean {\n    return this._navIconService.hasIcons;\n  }\n\n  get ariaExpanded(): string {\n    if (!this.collapsible) {\n      return null;\n    }\n    return !this.collapsed ? 'true' : 'false';\n  }\n\n  private _sub: Subscription;\n\n  constructor(\n    private _navService: VerticalNavService,\n    private _navIconService: VerticalNavIconService,\n    private _navGroupRegistrationService: VerticalNavGroupRegistrationService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._sub = this._navService.collapsedChanged.subscribe(value => {\n      this._collapsedChanged.emit(value);\n    });\n  }\n\n  toggleByButton() {\n    this.collapsed = !this.collapsed;\n  }\n\n  ngOnDestroy() {\n    this._sub.unsubscribe();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class VerticalNavGroupService {\n  private _expandChange: Subject<boolean> = new Subject<boolean>();\n\n  get expandChange(): Observable<boolean> {\n    return this._expandChange.asObservable();\n  }\n\n  expand(): void {\n    this._expandChange.next(true);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, AnimationEvent, state, style, transition, trigger } from '@angular/animations';\nimport { AfterContentInit, Component, EventEmitter, HostBinding, Input, OnDestroy, Output } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\n\nimport { VerticalNavGroupRegistrationService } from './providers/vertical-nav-group-registration.service';\nimport { VerticalNavGroupService } from './providers/vertical-nav-group.service';\nimport { VerticalNavService } from './providers/vertical-nav.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\n\nconst EXPANDED_STATE: string = 'expanded';\nconst COLLAPSED_STATE: string = 'collapsed';\n\n@Component({\n  selector: 'clr-vertical-nav-group',\n  templateUrl: './vertical-nav-group.html',\n  providers: [IfExpandService, VerticalNavGroupService],\n  animations: [\n    trigger('clrExpand', [\n      state(EXPANDED_STATE, style({ height: '*' })),\n      state(COLLAPSED_STATE, style({ height: 0, 'overflow-y': 'hidden', visibility: 'hidden' })),\n      transition(`${EXPANDED_STATE} <=> ${COLLAPSED_STATE}`, animate('0.2s ease-in-out')),\n    ]),\n  ],\n  host: { class: 'nav-group' },\n})\nexport class ClrVerticalNavGroup implements AfterContentInit, OnDestroy {\n  constructor(\n    private _itemExpand: IfExpandService,\n    private _navGroupRegistrationService: VerticalNavGroupRegistrationService,\n    private _navGroupService: VerticalNavGroupService,\n    private _navService: VerticalNavService,\n    public commonStrings: ClrCommonStringsService\n  ) {\n    this._navGroupRegistrationService.registerNavGroup();\n\n    // FIXME: This subscription handles a corner case\n    // Vertical Nav collapse requires the animation to run first and then\n    // remove the nodes from the DOM. If the user directly sets the input\n    // on the clrIfExpanded directive, we have no chance to run the animation\n    // and wait for it to complete. This subscription makes sure that the\n    // animation states are correct for that edge case.\n    this._subscriptions.push(\n      this._itemExpand.expandChange.subscribe(value => {\n        if (value && this.expandAnimationState === COLLAPSED_STATE) {\n          if (this._navService.collapsed) {\n            this._navService.collapsed = false;\n          }\n          this.expandAnimationState = EXPANDED_STATE;\n        } else if (!value && this.expandAnimationState === EXPANDED_STATE) {\n          this.expandAnimationState = COLLAPSED_STATE;\n        }\n      })\n    );\n\n    // 1. If the nav is collapsing, close the open nav group + save its state\n    // 2. If the nav is expanding, expand the nav group if the previous state was expanded\n    this._subscriptions.push(\n      this._navService.animateOnCollapsed.subscribe((goingToCollapse: boolean) => {\n        if (goingToCollapse && this.expanded) {\n          this.wasExpanded = true;\n          this.expandAnimationState = COLLAPSED_STATE;\n        } else if (!goingToCollapse && this.wasExpanded) {\n          this.expandGroup();\n          this.wasExpanded = false;\n        }\n      })\n    );\n\n    // If a link is clicked, expand the nav group\n    this._subscriptions.push(\n      this._navGroupService.expandChange.subscribe((expand: boolean) => {\n        if (expand && !this.expanded) {\n          this.expandGroup();\n        }\n      })\n    );\n  }\n\n  private wasExpanded: boolean = false;\n\n  @HostBinding('class.is-expanded')\n  get expanded(): boolean {\n    return this._itemExpand.expanded;\n  }\n\n  set expanded(value: boolean) {\n    if (this._itemExpand.expanded !== value) {\n      this._itemExpand.expanded = value;\n      this.expandedChange.emit(value);\n    }\n  }\n\n  @Input('clrVerticalNavGroupExpanded')\n  set userExpandedInput(value: boolean) {\n    value = !!value;\n    if (this.expanded !== value) {\n      // We have to call toggleExpand because some cases require animations to occur first\n      // Directly setting the Expand service value skips the animation and can result in\n      // nodes in the DOM but the nav group still being collapsed\n      this.toggleExpand();\n    }\n  }\n\n  @Output('clrVerticalNavGroupExpandedChange') expandedChange: EventEmitter<boolean> = new EventEmitter<boolean>(true);\n\n  private _subscriptions: Subscription[] = [];\n\n  private _expandAnimationState: string = COLLAPSED_STATE;\n\n  expandGroup(): void {\n    this.expanded = true;\n    // Expanded animation occurs after Expand.expand is set to true\n    this.expandAnimationState = EXPANDED_STATE;\n  }\n\n  collapseGroup(): void {\n    // If a Vertical Nav Group toggle button is clicked while the Vertical Nav is in Collapsed state,\n    // the Vertical Nav should be expanded first.\n    this.expandAnimationState = COLLAPSED_STATE;\n  }\n\n  // closes a group after the collapse animation\n  expandAnimationDone($event: AnimationEvent) {\n    if ($event.toState === COLLAPSED_STATE) {\n      this.expanded = false;\n    }\n  }\n\n  get expandAnimationState(): string {\n    return this._expandAnimationState;\n  }\n\n  set expandAnimationState(value: string) {\n    if (value !== this._expandAnimationState) {\n      this._expandAnimationState = value;\n    }\n  }\n\n  toggleExpand(): void {\n    if (this.expanded) {\n      this.collapseGroup();\n    } else {\n      // If nav is collasped, first open the nav\n      if (this._navService.collapsed) {\n        this._navService.collapsed = false;\n      }\n      // then expand the nav group\n      this.expandGroup();\n    }\n  }\n\n  ngAfterContentInit() {\n    // This makes sure that if someone marks a nav group expanded in a collapsed nav\n    // the expanded property is switched back to collapsed state.\n    if (this._navService.collapsed && this.expanded) {\n      this.wasExpanded = true;\n      this.expandAnimationState = COLLAPSED_STATE;\n    }\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\n    this._navGroupRegistrationService.unregisterNavGroup();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-vertical-nav-group-children',\n  template: `\n        <ng-content></ng-content>\n    `,\n})\nexport class ClrVerticalNavGroupChildren {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Directive, OnDestroy } from '@angular/core';\nimport { VerticalNavIconService } from './providers/vertical-nav-icon.service';\n\n@Directive({ selector: '[clrVerticalNavIcon]', host: { class: 'nav-icon' } })\nexport class ClrVerticalNavIcon implements OnDestroy {\n  constructor(private _verticalNavIconService: VerticalNavIconService) {\n    this._verticalNavIconService.registerIcon();\n  }\n\n  ngOnDestroy() {\n    this._verticalNavIconService.unregisterIcon();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, HostListener, Optional } from '@angular/core';\nimport { VerticalNavGroupService } from './providers/vertical-nav-group.service';\n\n@Component({\n  selector: '[clrVerticalNavLink]',\n  template: `\n        <ng-content select=\"[clrVerticalNavIcon]\"></ng-content>\n        <span class=\"nav-text\">\n            <ng-content></ng-content>    \n        </span>\n    `,\n  host: { class: 'nav-link' },\n})\nexport class ClrVerticalNavLink {\n  constructor(@Optional() private _navGroupService: VerticalNavGroupService) {}\n\n  @HostListener('click')\n  public expandParentNavGroup(): void {\n    if (this._navGroupService) {\n      this._navGroupService.expand();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nimport { ClrVerticalNav } from './vertical-nav';\nimport { ClrVerticalNavGroup } from './vertical-nav-group';\nimport { ClrVerticalNavGroupChildren } from './vertical-nav-group-children';\nimport { ClrVerticalNavIcon } from './vertical-nav-icon';\nimport { ClrVerticalNavLink } from './vertical-nav-link';\n\nexport const CLR_VERTICAL_NAV_DIRECTIVES: Type<any>[] = [\n  ClrVerticalNav,\n  ClrVerticalNavLink,\n  ClrVerticalNavGroup,\n  ClrVerticalNavGroupChildren,\n  ClrVerticalNavIcon,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrConditionalModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_VERTICAL_NAV_DIRECTIVES],\n  exports: [CLR_VERTICAL_NAV_DIRECTIVES, ClrConditionalModule, ClrIconModule, ClrFocusOnViewInitModule],\n})\nexport class ClrVerticalNavModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrMainContainerModule } from './main-container/main-container.module';\nimport { ClrNavigationModule } from './nav/navigation.module';\nimport { ClrTabsModule } from './tabs/tabs.module';\nimport { ClrVerticalNavModule } from './vertical-nav/vertical-nav.module';\n\n@NgModule({ exports: [ClrMainContainerModule, ClrNavigationModule, ClrTabsModule, ClrVerticalNavModule] })\nexport class ClrLayoutModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\n\n@Injectable()\nexport class ScrollingService {\n  constructor(@Inject(DOCUMENT) private _document: any) {}\n\n  stopScrolling(): void {\n    this._document.body.classList.add('no-scrolling');\n  }\n\n  resumeScrolling(): void {\n    if (this._document.body.classList.contains('no-scrolling')) {\n      this._document.body.classList.remove('no-scrolling');\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationEvent, style, transition, trigger } from '@angular/animations';\nimport {\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChange,\n  ViewChild,\n} from '@angular/core';\nimport { FocusTrapDirective } from '../utils/focus-trap/focus-trap.directive';\nimport { ClrCommonStringsService } from '../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../utils/id-generator/id-generator.service';\nimport { ScrollingService } from '../utils/scrolling/scrolling-service';\n\n@Component({\n  selector: 'clr-modal',\n  viewProviders: [ScrollingService],\n  templateUrl: './modal.html',\n  styles: [\n    `\n        :host { display: none; }\n        :host.open { display: inline; }\n    `,\n  ],\n  animations: [\n    trigger('fadeDown', [\n      transition('* => false', [style({ opacity: 0, transform: 'translate(0, -25%)' }), animate('0.2s ease-in-out')]),\n      transition('false => *', [animate('0.2s ease-in-out', style({ opacity: 0, transform: 'translate(0, -25%)' }))]),\n    ]),\n    trigger('fade', [\n      transition('void => *', [style({ opacity: 0 }), animate('0.2s ease-in-out', style({ opacity: 0.85 }))]),\n      transition('* => void', [animate('0.2s ease-in-out', style({ opacity: 0 }))]),\n    ]),\n  ],\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrModal implements OnChanges, OnDestroy {\n  @ViewChild(FocusTrapDirective) focusTrap: FocusTrapDirective;\n\n  @HostBinding('class.open')\n  @Input('clrModalOpen')\n  _open: boolean = false;\n  @Output('clrModalOpenChange') _openChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  @Input('clrModalClosable') closable: boolean = true;\n  @Input('clrModalSize') size: string;\n  @Input('clrModalStaticBackdrop') staticBackdrop: boolean = true;\n  @Input('clrModalSkipAnimation') skipAnimation: string = 'false';\n\n  // presently this is only used by wizards\n  @Input('clrModalOverrideScrollService') bypassScrollService: boolean = false;\n  @Input('clrModalPreventClose') stopClose: boolean = false;\n  @Output('clrModalAlternateClose') altClose: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  constructor(\n    private _scrollingService: ScrollingService,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(UNIQUE_ID) public modalId: string\n  ) {}\n\n  // Detect when _open is set to true and set no-scrolling to true\n  ngOnChanges(changes: { [propName: string]: SimpleChange }): void {\n    if (!this.bypassScrollService && changes && changes.hasOwnProperty('_open')) {\n      if (changes._open.currentValue) {\n        this._scrollingService.stopScrolling();\n      } else {\n        this._scrollingService.resumeScrolling();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._scrollingService.resumeScrolling();\n  }\n\n  open(): void {\n    if (this._open) {\n      return;\n    }\n    this._open = true;\n    this._openChanged.emit(true);\n  }\n\n  @HostListener('body:keyup.escape')\n  close(): void {\n    if (this.stopClose) {\n      this.altClose.emit(false);\n      return;\n    }\n    if (!this.closable || !this._open) {\n      return;\n    }\n    this._open = false;\n    // SPECME\n    this.focusTrap.setPreviousFocus(); // Handles moving focus back to the element that had it before.\n  }\n\n  fadeDone(e: AnimationEvent) {\n    if (e.toState === 'void') {\n      // TODO: Investigate if we can decouple from animation events\n      this._openChanged.emit(false);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener } from '@angular/core';\n\n/**\n * Allows modal overflow area to be scrollable via keyboard.\n * The modal body will focus with keyboard navigation only.\n * This allows inner focusable items to be focused without\n * the overflow scroll being focused.\n */\n@Directive({\n  selector: '.modal-body',\n  host: {\n    '[attr.tabindex]': 'tabindex',\n  },\n})\nexport class ClrModalBody {\n  tabindex = 0;\n\n  @HostListener('mousedown')\n  mouseDown() {\n    // tabindex = 0 binding should be removed\n    // so it won't be focused when click starts with mousedown\n    delete this.tabindex;\n  }\n\n  @HostListener('mouseup')\n  mouseUp() {\n    // set the tabindex binding back when click is completed with mouseup\n    this.tabindex = 0;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrFocusTrapModule } from '../utils/focus-trap/focus-trap.module';\nimport { ClrModal } from './modal';\nimport { ClrModalBody } from './modal-body';\nimport { ClrFocusOnViewInitModule } from '../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nexport const CLR_MODAL_DIRECTIVES: Type<any>[] = [ClrModal, ClrModalBody];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrFocusTrapModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_MODAL_DIRECTIVES],\n  exports: [CLR_MODAL_DIRECTIVES, ClrIconModule, ClrFocusOnViewInitModule],\n})\nexport class ClrModalModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Point } from '../common/popover';\n\nexport interface Position {\n  anchorPoint: Point;\n  popoverPoint: Point;\n  offsetY: number;\n  offsetX: number;\n}\n\nexport const SIGNPOST_POSITIONS: { [input: string]: Position } = {\n  'top-left': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_RIGHT, offsetY: -10, offsetX: 0 },\n  'top-middle': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_CENTER, offsetY: -10, offsetX: 0 },\n  'top-right': { anchorPoint: Point.TOP_CENTER, popoverPoint: Point.BOTTOM_LEFT, offsetY: -10, offsetX: 0 },\n  'right-top': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_BOTTOM, offsetY: 2, offsetX: 14 },\n  'right-middle': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_CENTER, offsetY: 6, offsetX: 14 },\n  'right-bottom': { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_TOP, offsetY: -1, offsetX: 14 },\n  'bottom-right': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_LEFT, offsetY: 9, offsetX: -1 },\n  'bottom-middle': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_CENTER, offsetY: 9, offsetX: 12 },\n  'bottom-left': { anchorPoint: Point.BOTTOM_CENTER, popoverPoint: Point.TOP_RIGHT, offsetY: 9, offsetX: 0 },\n  'left-bottom': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_TOP, offsetY: 0, offsetX: -14 },\n  'left-middle': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_CENTER, offsetY: 4, offsetX: -14 },\n  'left-top': { anchorPoint: Point.LEFT_CENTER, popoverPoint: Point.RIGHT_BOTTOM, offsetY: 0, offsetX: -14 },\n  default: { anchorPoint: Point.RIGHT_CENTER, popoverPoint: Point.LEFT_CENTER, offsetY: 6, offsetX: 14 },\n};\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, Inject, Injector, Input, Optional, OnDestroy, PLATFORM_ID } from '@angular/core';\n\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\n\nimport { SIGNPOST_POSITIONS } from './signpost-positions';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { UNIQUE_ID, UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { SignpostIdService } from './providers/signpost-id.service';\nimport { SignpostFocusManager } from './providers/signpost-focus-manager.service';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\n\n// aka where the arrow / pointer is at in relation to the anchor\nconst POSITIONS: string[] = [\n  'top-left',\n  'top-middle',\n  'top-right',\n  'right-top',\n  'right-middle', // default\n  'right-bottom',\n  'bottom-right',\n  'bottom-middle',\n  'bottom-left',\n  'left-bottom',\n  'left-middle',\n  'left-top',\n];\n\n@Component({\n  selector: 'clr-signpost-content',\n  template: `\n      <div class=\"signpost-wrap\">\n          <div class=\"popover-pointer\"></div>\n          <div class=\"signpost-content-body\">\n              <ng-content></ng-content>\n          </div>\n          <div class=\"signpost-content-header\">\n              <button type=\"button\" [attr.aria-label]=\"commonStrings.keys.signpostClose\" class=\"signpost-action close\"\n                      (click)=\"close()\" [attr.aria-controls]=\"signpostContentId\">\n                  <clr-icon shape=\"close\" [attr.title]=\"commonStrings.keys.close\"></clr-icon>\n              </button>\n          </div>\n      </div>\n  `,\n  host: { '[class.signpost-content]': 'true', '[id]': 'signpostContentId' },\n  providers: [UNIQUE_ID_PROVIDER],\n})\nexport class ClrSignpostContent extends AbstractPopover implements OnDestroy {\n  private document: Document;\n\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef,\n    public commonStrings: ClrCommonStringsService,\n    @Inject(UNIQUE_ID) public signpostContentId: string,\n    private signpostIdService: SignpostIdService,\n    private signpostFocusManager: SignpostFocusManager,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    @Inject(DOCUMENT) document: any\n  ) {\n    super(injector, parentHost);\n    if (!parentHost) {\n      throw new Error('clr-signpost-content should only be used inside of a clr-signpost');\n    }\n    // Defaults\n    this.position = 'right-middle';\n    this.closeOnOutsideClick = true;\n    this.signpostIdService.setId(signpostContentId);\n\n    this.document = document;\n  }\n\n  /**********\n   *\n   * @description\n   * Close function that uses the signpost instance to toggle the state of the content popover.\n   *\n   */\n  close() {\n    this.toggleService.open = false;\n  }\n\n  private _position: string;\n\n  get position() {\n    return this._position;\n  }\n\n  /*********\n   *\n   * @description\n   * A setter for the position of the ClrSignpostContent popover. This is a combination of the following:\n   * - anchorPoint - where on the trigger to anchor the ClrSignpostContent\n   * - popoverPoint - where on the ClrSignpostContent container to align with the anchorPoint\n   * - offsetY - where on the Y axis to align the ClrSignpostContent so it meets specs\n   * - offsetX - where on the X axis to align the ClrSignpostContent so it meets specs\n   * There are 12 possible positions to place a ClrSignpostContent container:\n   * - top-left\n   * - top-middle\n   * - top-right\n   * - right-top\n   * - right-middle\n   * - right-bottom\n   * - bottom-right\n   * - bottom-middle\n   * - bottom-left\n   * - left-bottom\n   * - left-middle\n   * - left-top\n   *\n   * I think of it as follows for 'top-left' -> CONTAINER_SIDE-SIDE_POSITION. In this case CONTAINER_SIDE is 'top'\n   * meaning the top of the trigger icon (above the icon that hides/shows) the ClrSignpostContent. And, SIDE_POSITION\n   * is 'left' meaning two things: 1) the ClrSignpostContent container extends to the left and 2) the 'arrow/pointer'\n   * linking the SingpostContent to the trigger points down at the horizontal center of the trigger icon.\n   *\n   * @param newPosition\n   */\n  @Input('clrPosition')\n  set position(position: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, this.position);\n    if (position && POSITIONS.indexOf(position) > -1) {\n      this._position = position;\n    } else {\n      this._position = 'right-middle';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, this.position);\n\n    const setPosition = SIGNPOST_POSITIONS[this.position];\n    this.anchorPoint = setPosition.anchorPoint;\n    this.popoverPoint = setPosition.popoverPoint;\n    this.popoverOptions.offsetY = setPosition.offsetY;\n    this.popoverOptions.offsetX = setPosition.offsetX;\n  }\n\n  ngOnDestroy() {\n    if (isPlatformBrowser(this.platformId) && this.el.nativeElement.contains(this.document.activeElement)) {\n      this.signpostFocusManager.focusTrigger();\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from '../../utils/focus/focus-on-view-init/focus-on-view-init.module';\n\nimport { ClrSignpost } from './signpost';\nimport { ClrSignpostContent } from './signpost-content';\nimport { ClrSignpostTrigger } from './signpost-trigger';\n\nexport const CLR_SIGNPOST_DIRECTIVES: Type<any>[] = [ClrSignpost, ClrSignpostContent, ClrSignpostTrigger];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrFocusOnViewInitModule],\n  declarations: [CLR_SIGNPOST_DIRECTIVES],\n  exports: [CLR_SIGNPOST_DIRECTIVES, ClrConditionalModule],\n})\nexport class ClrSignpostModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class TooltipIdService {\n  private _id: Subject<string> = new Subject<string>();\n\n  updateId(id: string) {\n    this._id.next(id);\n  }\n\n  get id(): Observable<string> {\n    return this._id.asObservable();\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef } from '@angular/core';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { UNIQUE_ID_PROVIDER } from '../../utils/id-generator/id-generator.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\n\n@Component({\n  selector: 'clr-tooltip',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.tooltip]': 'true',\n  },\n  providers: [\n    ClrPopoverToggleService,\n    { provide: POPOVER_HOST_ANCHOR, useExisting: ElementRef },\n    // TODO: consider centralizing the unique id string on a service that provides ariaAttributes that need it\n    // AriaService in layout/tabs/providers might be a good starting point.\n    UNIQUE_ID_PROVIDER,\n    TooltipIdService,\n  ],\n})\nexport class ClrTooltip {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, ElementRef, Inject, Injector, Input, Optional } from '@angular/core';\nimport { AbstractPopover } from '../common/abstract-popover';\nimport { Point } from '../common/popover';\nimport { POPOVER_HOST_ANCHOR } from '../common/popover-host-anchor.token';\nimport { UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\n\nconst POSITIONS: string[] = ['bottom-left', 'bottom-right', 'top-left', 'top-right', 'right', 'left'];\n\nconst SIZES: string[] = ['xs', 'sm', 'md', 'lg'];\n\n@Component({\n  selector: 'clr-tooltip-content',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: {\n    '[class.tooltip-content]': 'true',\n    '[style.opacity]': '1',\n    '[attr.role]': '\"tooltip\"',\n    '[id]': 'id',\n  },\n})\nexport class ClrTooltipContent extends AbstractPopover {\n  constructor(\n    injector: Injector,\n    @Optional()\n    @Inject(POPOVER_HOST_ANCHOR)\n    parentHost: ElementRef,\n    @Inject(UNIQUE_ID) public uniqueId: string,\n    private tooltipIdService: TooltipIdService\n  ) {\n    super(injector, parentHost);\n\n    if (!parentHost) {\n      throw new Error('clr-tooltip-content should only be used inside of a clr-tooltip');\n    }\n\n    // Defaults\n    this.position = 'right';\n    this.size = 'sm';\n\n    // Set the default id in case consumer does not supply a custom id.\n    this.updateId(uniqueId);\n  }\n\n  private _position: string;\n\n  get position() {\n    return this._position;\n  }\n\n  get id(): string {\n    return this._id;\n  }\n\n  @Input()\n  set id(value: string) {\n    value ? this.updateId(value) : this.updateId('');\n  }\n  private _id;\n\n  private updateId(id: string) {\n    this._id = id;\n    this.tooltipIdService.updateId(id);\n  }\n\n  @Input('clrPosition')\n  set position(position: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, 'tooltip-' + this.position);\n    if (position && POSITIONS.indexOf(position) > -1) {\n      this._position = position;\n    } else {\n      this._position = 'right';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, 'tooltip-' + this.position);\n\n    // set the popover values based on direction\n    switch (position) {\n      case 'top-right':\n        this.anchorPoint = Point.TOP_CENTER;\n        this.popoverPoint = Point.LEFT_BOTTOM;\n        break;\n      case 'top-left':\n        this.anchorPoint = Point.TOP_CENTER;\n        this.popoverPoint = Point.RIGHT_BOTTOM;\n        break;\n      case 'bottom-right':\n        this.anchorPoint = Point.BOTTOM_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'bottom-left':\n        this.anchorPoint = Point.BOTTOM_CENTER;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      case 'right':\n        this.anchorPoint = Point.RIGHT_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n      case 'left':\n        this.anchorPoint = Point.LEFT_CENTER;\n        this.popoverPoint = Point.RIGHT_TOP;\n        break;\n      default:\n        this.anchorPoint = Point.RIGHT_CENTER;\n        this.popoverPoint = Point.LEFT_TOP;\n        break;\n    }\n  }\n\n  private _size: string;\n\n  get size() {\n    return this._size;\n  }\n\n  @Input('clrSize')\n  set size(size: string) {\n    // Ugh\n    this.renderer.removeClass(this.el.nativeElement, 'tooltip-' + this.size);\n    if (size && SIZES.indexOf(size) > -1) {\n      this._size = size;\n    } else {\n      this._size = 'sm';\n    }\n    // Ugh\n    this.renderer.addClass(this.el.nativeElement, 'tooltip-' + this.size);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener } from '@angular/core';\nimport { ClrPopoverToggleService } from '../../utils/popover/providers/popover-toggle.service';\nimport { TooltipIdService } from './providers/tooltip-id.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[clrTooltipTrigger]',\n  host: {\n    tabindex: '0',\n    '[class.tooltip-trigger]': 'true',\n    '[attr.aria-describedby]': 'ariaDescribedBy',\n    '[attr.role]': '\"button\"',\n  },\n})\nexport class ClrTooltipTrigger {\n  public ariaDescribedBy;\n  private subs: Subscription[] = [];\n  constructor(private toggleService: ClrPopoverToggleService, private tooltipIdService: TooltipIdService) {\n    // The aria-described by comes from the id of content. It\n    this.subs.push(this.tooltipIdService.id.subscribe(tooltipId => (this.ariaDescribedBy = tooltipId)));\n  }\n\n  @HostListener('mouseenter')\n  @HostListener('focus')\n  showTooltip(): void {\n    this.toggleService.open = true;\n  }\n\n  @HostListener('mouseleave')\n  @HostListener('blur')\n  hideTooltip(): void {\n    this.toggleService.open = false;\n  }\n\n  ngOnDestroy() {\n    this.subs.forEach(sub => sub.unsubscribe());\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrConditionalModule } from '../../utils/conditional/conditional.module';\n\nimport { ClrTooltip } from './tooltip';\nimport { ClrTooltipContent } from './tooltip-content';\nimport { ClrTooltipTrigger } from './tooltip-trigger';\n\nexport const CLR_TOOLTIP_DIRECTIVES: Type<any>[] = [ClrTooltip, ClrTooltipTrigger, ClrTooltipContent];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_TOOLTIP_DIRECTIVES],\n  exports: [CLR_TOOLTIP_DIRECTIVES, ClrConditionalModule, ClrIconModule],\n})\nexport class ClrTooltipModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrDropdownModule } from './dropdown/dropdown.module';\nimport { ClrSignpostModule } from './signpost/signpost.module';\nimport { ClrTooltipModule } from './tooltip/tooltip.module';\n\n@NgModule({ exports: [ClrDropdownModule, ClrSignpostModule, ClrTooltipModule] })\nexport class ClrPopoverModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n@Injectable()\nexport class ButtonHubService {\n  public buttonsReady: boolean = false;\n\n  private _previousBtnClicked = new Subject<any>();\n  public get previousBtnClicked(): Observable<any> {\n    return this._previousBtnClicked.asObservable();\n  }\n\n  private _nextBtnClicked = new Subject<any>();\n  public get nextBtnClicked(): Observable<any> {\n    return this._nextBtnClicked.asObservable();\n  }\n\n  private _dangerBtnClicked = new Subject<any>();\n  public get dangerBtnClicked(): Observable<any> {\n    return this._dangerBtnClicked.asObservable();\n  }\n\n  private _cancelBtnClicked = new Subject<any>();\n  public get cancelBtnClicked(): Observable<any> {\n    return this._cancelBtnClicked.asObservable();\n  }\n\n  private _finishBtnClicked = new Subject<any>();\n  public get finishBtnClicked(): Observable<any> {\n    return this._finishBtnClicked.asObservable();\n  }\n\n  private _customBtnClicked = new Subject<any>();\n  public get customBtnClicked(): Observable<any> {\n    return this._customBtnClicked.asObservable();\n  }\n\n  public buttonClicked(buttonType: string): void {\n    if ('previous' === buttonType) {\n      this._previousBtnClicked.next();\n    } else if ('next' === buttonType) {\n      this._nextBtnClicked.next();\n    } else if ('finish' === buttonType) {\n      this._finishBtnClicked.next();\n    } else if ('danger' === buttonType) {\n      this._dangerBtnClicked.next();\n    } else if ('cancel' === buttonType) {\n      this._cancelBtnClicked.next();\n    } else {\n      this._customBtnClicked.next(buttonType);\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, QueryList } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { ClrWizardPage } from '../wizard-page';\n\n/**\n * PageCollectionService manages the collection of pages assigned to the wizard and offers\n * a number of functions useful across the wizards providers and subcomponents -- all related\n * to essentially lookups on the collection of pages.\n *\n * The easiest way to access PageCollectionService is via the wizard. The\n * following example would allow you to access your instance of the wizard from your host\n * component and thereby access the page collection via YourHostComponent.wizard.pageCollection.\n *\n * @example\n * <clr-wizard #wizard ...>\n *\n * @example\n * export class YourHostComponent {\n *   @ViewChild(\"wizard\") wizard: Wizard;\n *   ...\n * }\n *\n * The heart of the page collection is the query list of pages, which it is assigned as a\n * reference to the Wizard.pages QueryList when the wizard is created.\n *\n */\n@Injectable()\nexport class PageCollectionService {\n  /**\n   * A reference to the Wizard.pages QueryList.\n   *\n   * Populated when the wizard is created.\n   *\n   * @memberof PageCollectionService\n   */\n  public pages: QueryList<ClrWizardPage>;\n\n  /**\n   * Converts the PageCollectionService.pages QueryList to an array and returns it.\n   *\n   * Useful for many instances when you would prefer a QueryList to act like an array.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesAsArray(): ClrWizardPage[] {\n    return this.pages ? this.pages.toArray() : [];\n  }\n\n  /**\n   * Returns the length of the pages query list.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesCount(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /**\n   * Returns the next-to-last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get penultimatePage(): ClrWizardPage {\n    const pageCount = this.pagesCount;\n\n    if (pageCount < 2) {\n      return;\n    }\n\n    return this.pagesAsArray[pageCount - 2];\n  }\n\n  /**\n   * Returns the last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get lastPage(): ClrWizardPage {\n    const pageCount = this.pagesCount;\n\n    if (pageCount < 1) {\n      return;\n    }\n\n    return this.pagesAsArray[pageCount - 1];\n  }\n\n  /**\n   * Returns the first page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public get firstPage(): ClrWizardPage {\n    if (!this.pagesCount) {\n      return;\n    }\n\n    return this.pagesAsArray[0];\n  }\n\n  /**\n   * Used mostly internally, but accepts a string ID and returns a ClrWizardPage\n   * object that matches the ID passed. Note that IDs here should include the prefix\n   * \"clr-wizard-page-\".\n   *\n   * Returns the next-to-last page in the query list of pages. Operates as a getter\n   * so that it isn't working with stale data.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageById(id: string): ClrWizardPage {\n    const foundPages: ClrWizardPage[] = this.pages.filter((page: ClrWizardPage) => id === page.id);\n    return this.checkResults(foundPages, id);\n  }\n\n  /**\n   * Accepts s number as a parameter and treats that number as the index of the page\n   * you're looking for in the collection of pages. Returns a  wizard page object.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageByIndex(index: number): ClrWizardPage {\n    const pageCount = this.pagesCount;\n    const pagesLastIndex: number = pageCount > 1 ? pageCount - 1 : 0;\n\n    if (index < 0) {\n      throw new Error('Cannot retrieve page with index of ' + index);\n    }\n\n    if (index > pagesLastIndex) {\n      throw new Error('Page index is greater than length of pages array.');\n    }\n\n    return this.pagesAsArray[index];\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns its index in the\n   * collection of pages.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageIndex(page: ClrWizardPage): number {\n    const index = this.pagesAsArray.indexOf(page);\n\n    if (index < 0) {\n      throw new Error('Requested page cannot be found in collection of pages.');\n    }\n\n    return index;\n  }\n\n  /**\n   * Consolidates guard logic that prevents a couple of unfortunate edge cases with\n   * look ups on the collection of pages.\n   *\n   * @memberof PageCollectionService\n   */\n  private checkResults(results: ClrWizardPage[], requestedPageId: string) {\n    const foundPagesCount: number = results.length || 0;\n\n    if (foundPagesCount > 1) {\n      throw new Error('More than one page has the requested id ' + requestedPageId + '.');\n    } else if (foundPagesCount < 1) {\n      throw new Error('No page can be found with the id ' + requestedPageId + '.');\n    } else {\n      return results[0];\n    }\n  }\n\n  /**\n   * Accepts two numeric indexes and returns an array of wizard page objects that include\n   * all wizard pages in the page collection from the first index to the second.\n   *\n   * @memberof PageCollectionService\n   */\n  public pageRange(start: number, end: number): ClrWizardPage[] {\n    let pages: ClrWizardPage[] = [];\n\n    if (start < 0 || end < 0) {\n      return [];\n    }\n\n    if (start === null || typeof start === 'undefined' || isNaN(start)) {\n      return [];\n    }\n\n    if (end === null || typeof end === 'undefined' || isNaN(end)) {\n      return [];\n    }\n\n    if (end > this.pagesCount) {\n      end = this.pagesCount;\n    }\n\n    pages = this.pagesAsArray;\n\n    if (end - start === 0) {\n      // just return the one page they want\n      return [this.getPageByIndex(start)];\n    }\n\n    // slice end does not include item referenced by end index, which is weird for users\n    // incrementing end index here to correct that so users and other methods\n    // don't have to think about it\n    end = end + 1;\n\n    // slice does not return the last one in the range but it does include the first one\n    // does not modify original array\n    return pages.slice(start, end);\n  }\n\n  /**\n   * Accepts two wizard page objects and returns those page objects with all other page\n   * objects between them in the page collection. It doesn't care which page is ahead of the\n   * other in the parameters. It will be smart enough to figure that out  on its own.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPageRangeFromPages(page: ClrWizardPage, otherPage: ClrWizardPage): ClrWizardPage[] {\n    const pageIndex = this.getPageIndex(page);\n    const otherPageIndex = this.getPageIndex(otherPage);\n    let startIndex: number;\n    let endIndex: number;\n\n    if (pageIndex <= otherPageIndex) {\n      startIndex = pageIndex;\n      endIndex = otherPageIndex;\n    } else {\n      startIndex = otherPageIndex;\n      endIndex = pageIndex;\n    }\n    return this.pageRange(startIndex, endIndex);\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns the wizard page object of\n   * the page immediately before it in the page collection. Returns null if there is\n   * no page before the page it is passed.\n   *\n   * @memberof PageCollectionService\n   */\n  public getPreviousPage(page: ClrWizardPage) {\n    const myPageIndex = this.getPageIndex(page);\n    const previousPageIndex = myPageIndex - 1;\n    if (previousPageIndex < 0) {\n      return null;\n    }\n    return this.getPageByIndex(previousPageIndex);\n  }\n\n  /**\n   * Accepts a wizard page object as a parameter and returns a Boolean that says if\n   * the page you sent it is complete.\n   *\n   * @memberof PageCollectionService\n   */\n  public previousPageIsCompleted(page: ClrWizardPage) {\n    let previousPage: ClrWizardPage;\n\n    if (!page) {\n      return false;\n    }\n\n    previousPage = this.getPreviousPage(page);\n\n    if (null === previousPage) {\n      // page is the first page. no previous page.\n      return true;\n    }\n\n    return previousPage.completed;\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and returns the wizard page object of\n   * the page immediately after it in the page collection. Returns null if there is\n   * no page after the page it is passed.\n   *\n   * @memberof PageCollectionService\n   */\n  public getNextPage(page: ClrWizardPage) {\n    const myPageIndex = this.getPageIndex(page);\n    const nextPageIndex = myPageIndex + 1;\n\n    if (nextPageIndex >= this.pagesAsArray.length) {\n      return null;\n    }\n    return this.getPageByIndex(nextPageIndex);\n  }\n\n  /**\n   * Takes a wizard page object as a parameter and generates a step item id from the\n   * page ID. Returns the generated step item ID as a string.\n   *\n   * @memberof PageCollectionService\n   */\n  public getStepItemIdForPage(page: ClrWizardPage) {\n    const pageId = page.id;\n    const pageIdParts = pageId.split('-').reverse();\n\n    pageIdParts[1] = 'step';\n    return pageIdParts.reverse().join('-');\n  }\n\n  /**\n   * Generally only used internally to mark that a specific page has been \"committed\".\n   * This involves marking the page complete and firing the ClrWizardPage.onCommit\n   * (clrWizardPageOnCommit) output. Takes the wizard page object that you intend to\n   * mark completed as a parameter.\n   *\n   * @memberof PageCollectionService\n   */\n  public commitPage(page: ClrWizardPage) {\n    const pageHasOverrides = page.stopNext || page.preventDefault;\n    page.completed = true;\n\n    if (!pageHasOverrides) {\n      // prevent loop of event emission; alternate flows work off\n      // of event emitters this is how they break that cycle.\n      page.onCommit.emit(page.id);\n    }\n  }\n\n  // used by the navService to navigate back to first possible step after\n  // pages are reset\n\n  /**\n   *\n   * @memberof PageCollectionService\n   */\n  private _pagesReset = new Subject<boolean>();\n\n  /**\n   * An observable that the navigation service listens to in order to know when\n   * the page collection completed states have been reset to false so that way it\n   * can also reset the navigation to make the first page in the page collection\n   * current/active.\n   *\n   * @memberof PageCollectionService\n   */\n  public get pagesReset(): Observable<boolean> {\n    return this._pagesReset.asObservable();\n  }\n\n  /**\n   * Sets all completed states of the pages in the page collection to false and\n   * notifies the navigation service to likewise reset the navigation.\n   *\n   * @memberof PageCollectionService\n   */\n  public reset() {\n    this.pagesAsArray.forEach((page: ClrWizardPage) => {\n      page.completed = false;\n    });\n    this._pagesReset.next(true);\n  }\n\n  /**\n   * Rolls through all the pages in the page collection to make sure there are no\n   * incomplete pages sandwiched between completed pages in the workflow. Identifies\n   * the first incomplete page index and sets all pages behind it to a completed\n   * state of false.\n   *\n   * @memberof PageCollectionService\n   */\n  public updateCompletedStates(): void {\n    const firstIncompleteIndex = this.findFirstIncompletePageIndex();\n\n    if (firstIncompleteIndex === this.pagesAsArray.length - 1) {\n      // all complete no need to do anything\n      return;\n    }\n\n    this.pagesAsArray.forEach((page: ClrWizardPage, index: number) => {\n      if (index > firstIncompleteIndex) {\n        page.completed = false;\n      }\n    });\n  }\n\n  /**\n   * Retrieves the index of the first incomplete page in the page collection.\n   *\n   * @memberof PageCollectionService\n   */\n  public findFirstIncompletePageIndex(): number {\n    let returnIndex: number = null;\n    this.pagesAsArray.forEach((page: ClrWizardPage, index: number) => {\n      if (null === returnIndex && false === page.completed) {\n        returnIndex = index;\n      }\n    });\n\n    // fallthrough, all completed, return last page\n    if (null === returnIndex) {\n      returnIndex = this.pagesCount - 1;\n    }\n\n    return returnIndex;\n  }\n\n  public findFirstIncompletePage(): ClrWizardPage {\n    const myIncompleteIndex = this.findFirstIncompletePageIndex();\n    return this.pagesAsArray[myIncompleteIndex];\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, OnDestroy, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\nimport { Subscription } from 'rxjs';\n\nimport { ClrWizardPage } from '../wizard-page';\n\nimport { ButtonHubService } from './button-hub.service';\nimport { PageCollectionService } from './page-collection.service';\n\n/**\n * Performs navigation functions for a wizard and manages the current page. Presented as a\n * separate service to encapsulate the behavior of navigating and completing the wizard so\n * that it can be shared across the wizard and its sub-components.\n *\n * The easiest way to access the navigation service is there a reference on your wizard. The\n * Following example would allow you to access your instance of the wizard from your host\n * component and thereby access the navigation service via YourHostComponent.wizard.navService.\n *\n * @example\n * <clr-wizard #wizard ...>\n *\n * @example\n * export class YourHostComponent {\n *   @ViewChild(\"wizard\") wizard: Wizard;\n *   ...\n * }\n *\n */\n@Injectable()\nexport class WizardNavigationService implements OnDestroy {\n  /**\n   * Is notified when a previous button is clicked in the wizard. Performs checks\n   * before alerting the current page of the button click. Enacts navigation to\n   * the previous page if not overridden at the page level.\n   *\n   * @memberof WizardNavigationService\n   */\n  public previousButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Next button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public nextButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a danger button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public dangerButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a  finish button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public finishButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Custom button is clicked in the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public customButtonSubscription: Subscription;\n\n  /**\n   * Is notified when a Cancel button is clicked in the wizard. Notifies the wizard,\n   * which handles all cancel functionality, if cancel is not overridden at the page\n   * level.\n   *\n   * @memberof WizardNavigationService\n   */\n  public cancelButtonSubscription: Subscription;\n\n  /**\n   * Resets navigation to make the first page current when the page collection service\n   * emits an event notifying WizardNavigationService that it has reset all pages\n   * to their pristine, incomplete state.\n   *\n   * @memberof WizardNavigationService\n   */\n  public pagesResetSubscription: Subscription;\n\n  /**\n   * Creates an instance of WizardNavigationService. Also sets up subscriptions\n   * that listen to the button service to determine when a button has been clicked\n   * in the wizard. Is also responsible for taking action when the page collection\n   * requests that navigation be reset to its pristine state.\n   *\n   * @memberof WizardNavigationService\n   */\n  constructor(public pageCollection: PageCollectionService, public buttonService: ButtonHubService) {\n    this.previousButtonSubscription = this.buttonService.previousBtnClicked.subscribe(() => {\n      const currentPage = this.currentPage;\n      if (this.currentPageIsFirst || currentPage.previousStepDisabled) {\n        return;\n      }\n      currentPage.previousButtonClicked.emit(currentPage);\n      if (!currentPage.preventDefault) {\n        this.previous();\n      }\n    });\n\n    this.nextButtonSubscription = this.buttonService.nextBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('next');\n    });\n\n    this.dangerButtonSubscription = this.buttonService.dangerBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('danger');\n    });\n\n    this.finishButtonSubscription = this.buttonService.finishBtnClicked.subscribe(() => {\n      this.checkAndCommitCurrentPage('finish');\n    });\n\n    this.customButtonSubscription = this.buttonService.customBtnClicked.subscribe((type: string) => {\n      if (!this.wizardStopNavigation) {\n        this.currentPage.customButtonClicked.emit(type);\n      }\n    });\n\n    this.cancelButtonSubscription = this.buttonService.cancelBtnClicked.subscribe(() => {\n      if (this.wizardStopNavigation) {\n        return;\n      }\n\n      if (this.currentPage.preventDefault) {\n        this.currentPage.pageOnCancel.emit(this.currentPage);\n      } else {\n        this.cancel();\n      }\n    });\n\n    this.pagesResetSubscription = this.pageCollection.pagesReset.subscribe(() => {\n      this.setFirstPageCurrent();\n    });\n  }\n\n  /**\n   *\n   * @memberof WizardNavigationService\n   */\n  ngOnDestroy(): void {\n    this.previousButtonSubscription.unsubscribe();\n    this.nextButtonSubscription.unsubscribe();\n    this.dangerButtonSubscription.unsubscribe();\n    this.finishButtonSubscription.unsubscribe();\n    this.customButtonSubscription.unsubscribe();\n    this.cancelButtonSubscription.unsubscribe();\n    this.pagesResetSubscription.unsubscribe();\n  }\n\n  /**\n   *\n   * @memberof WizardNavigationService\n   */\n  private _currentChanged = new Subject<ClrWizardPage>();\n\n  /**\n   * An Observable that is predominantly used amongst the subcomponents and services\n   * of the wizard. It is recommended that users listen to the ClrWizardPage.onLoad\n   * (clrWizardPageOnLoad) output instead of this Observable.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageChanged(): Observable<ClrWizardPage> {\n    // TODO: MAKE SURE EXTERNAL OUTPUTS SAY 'CHANGE' NOT 'CHANGED'\n    // A BREAKING CHANGE SO AWAITING MINOR RELEASE\n    return this._currentChanged.asObservable();\n  }\n\n  /**\n   * A Boolean flag used by the ClrWizardPage to avoid a race condition when pages are\n   * loading and there is no current page defined.\n   *\n   * @memberof WizardNavigationService\n   */\n  public navServiceLoaded = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.forceForward (clrWizardForceForwardNavigation) input. When true,\n   * navigating backwards in the stepnav menu will reset any skipped pages' completed\n   * state to false.\n   *\n   * This is useful when a wizard executes validation on a page-by-page basis when\n   * the next button is clicked.\n   *\n   * @memberof WizardNavigationService\n   */\n  public forceForwardNavigation = false;\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  public get currentPageTitle(): TemplateRef<any> {\n    // when the querylist of pages is empty. this is the first place it fails...\n    if (!this.currentPage) {\n      return null;\n    }\n    return this.currentPage.title;\n  }\n\n  /**\n   * Returns a Boolean that tells you whether or not the current page is the first\n   * page in the Wizard.\n   *\n   * This is helpful for determining whether a page is navigable.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageIsFirst(): boolean {\n    return this.pageCollection.firstPage === this.currentPage;\n  }\n\n  /**\n   * Returns a Boolean that tells you whether or not the current page is the\n   * last page in the Wizard.\n   *\n   * This is used to determine which buttons should display in the wizard footer.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get currentPageIsLast(): boolean {\n    return this.pageCollection.lastPage === this.currentPage;\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _currentPage: ClrWizardPage;\n\n  /**\n   * Returns the ClrWizardPage object of the current page or null.\n   *\n   * @memberof WizardNavigationService\n   */\n  get currentPage(): ClrWizardPage {\n    if (!this._currentPage) {\n      return null;\n    }\n    return this._currentPage;\n  }\n\n  /**\n   * Accepts a ClrWizardPage object, since that object to be the current/active\n   * page in the wizard, and emits the ClrWizardPage.onLoad (clrWizardPageOnLoad)\n   * event for that page.\n   *\n   * Note that all of this work is bypassed if the ClrWizardPage object is already\n   * the current page.\n   *\n   * @memberof WizardNavigationService\n   */\n  set currentPage(page: ClrWizardPage) {\n    if (this._currentPage !== page && !this.wizardStopNavigation) {\n      this._currentPage = page;\n      page.onLoad.emit(page.id);\n      this._currentChanged.next(page);\n    }\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _movedToNextPage = new Subject<boolean>();\n\n  /**\n   * An observable used internally to alert the wizard that forward navigation\n   * has occurred. It is recommended that you use the Wizard.onMoveNext\n   * (clrWizardOnNext) output instead of this one.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get movedToNextPage(): Observable<boolean> {\n    return this._movedToNextPage.asObservable();\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _wizardFinished = new Subject<boolean>();\n\n  /**\n   * An observable used internally to alert the wizard that the nav service\n   * has approved completion of the wizard.\n   *\n   * It is recommended that you use the Wizard.wizardFinished (clrWizardOnFinish)\n   * output instead of this one.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get wizardFinished(): Observable<boolean> {\n    return this._wizardFinished.asObservable();\n  }\n\n  /**\n   * This is a public function that can be used to programmatically advance\n   * the user to the next page.\n   *\n   * When invoked, this method will move the wizard to the next page after\n   * successful validation. Note that this method goes through all checks\n   * and event emissions as if Wizard.next(false) had been called.\n   *\n   * In most cases, it makes more sense to use Wizard.next(false).\n   *\n   * @memberof WizardNavigationService\n   */\n  public next(): void {\n    if (this.currentPageIsLast) {\n      this.checkAndCommitCurrentPage('finish');\n    } else {\n      this.checkAndCommitCurrentPage('next');\n    }\n  }\n\n  /**\n   * Bypasses checks and most event emissions to force a page to navigate forward.\n   *\n   * Comparable to calling Wizard.next() or Wizard.forceNext().\n   *\n   * @memberof WizardNavigationService\n   */\n  public forceNext(): void {\n    const currentPage: ClrWizardPage = this.currentPage;\n    const nextPage: ClrWizardPage = this.pageCollection.getNextPage(currentPage);\n\n    // catch errant null or undefineds that creep in\n    if (!nextPage) {\n      throw new Error('The wizard has no next page to go to.');\n    }\n\n    if (this.wizardStopNavigation) {\n      return;\n    }\n\n    if (!currentPage.completed) {\n      // this is a state that alt next flows can get themselves in...\n      this.pageCollection.commitPage(currentPage);\n    }\n    this.currentPage = nextPage;\n  }\n\n  /**\n   * Accepts a button/action type as a parameter. Encapsulates all logic for\n   * event emissions, state of the current page, and wizard and page level overrides.\n   *\n   * Avoid calling this function directly unless you really know what you're doing.\n   *\n   * @memberof WizardNavigationService\n   */\n  public checkAndCommitCurrentPage(buttonType: string): void {\n    const currentPage: ClrWizardPage = this.currentPage;\n    let iAmTheLastPage: boolean;\n\n    let isNext: boolean;\n    let isDanger: boolean;\n    let isDangerNext: boolean;\n    let isDangerFinish: boolean;\n    let isFinish: boolean;\n\n    if (!currentPage.readyToComplete || this.wizardStopNavigation) {\n      return;\n    }\n\n    iAmTheLastPage = this.currentPageIsLast;\n\n    isNext = buttonType === 'next';\n    isDanger = buttonType === 'danger';\n    isDangerNext = isDanger && !iAmTheLastPage;\n    isDangerFinish = isDanger && iAmTheLastPage;\n    isFinish = buttonType === 'finish' || isDangerFinish;\n\n    if (isFinish && !iAmTheLastPage) {\n      return;\n    }\n\n    currentPage.primaryButtonClicked.emit(buttonType);\n\n    if (isFinish) {\n      currentPage.finishButtonClicked.emit(currentPage);\n    } else if (isDanger) {\n      currentPage.dangerButtonClicked.emit();\n    } else if (isNext) {\n      currentPage.nextButtonClicked.emit();\n    }\n\n    if (currentPage.stopNext || currentPage.preventDefault) {\n      currentPage.onCommit.emit(currentPage.id);\n      return;\n    }\n\n    // order is very important with these emitters!\n    if (isFinish) {\n      // mark page as complete\n      if (!this.wizardHasAltNext) {\n        this.pageCollection.commitPage(currentPage);\n      }\n      this._wizardFinished.next();\n    }\n\n    if (this.wizardHasAltNext) {\n      this.pageCollection.commitPage(currentPage);\n\n      if (isNext || isDangerNext) {\n        this._movedToNextPage.next(true);\n      }\n      // jump out here, no matter what type we're looking at\n      return;\n    }\n\n    if (isNext || isDangerNext) {\n      this.forceNext();\n    }\n\n    if (!this.wizardHasAltNext && !this.wizardStopNavigation) {\n      this._movedToNextPage.next(true);\n    }\n  }\n\n  /**\n   * This is a public function that can be used to programmatically conclude\n   * the wizard.\n   *\n   * When invoked, this method will  initiate the work involved with finalizing\n   * and finishing the wizard workflow. Note that this method goes through all\n   * checks and event emissions as if Wizard.finish(false) had been called.\n   *\n   * In most cases, it makes more sense to use Wizard.finish(false).\n   *\n   * @memberof WizardNavigationService\n   */\n  public finish(): void {\n    this.checkAndCommitCurrentPage('finish');\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _movedToPreviousPage = new Subject<boolean>();\n\n  /**\n   * Notifies the wizard when backwards navigation has occurred via the\n   * previous button.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get movedToPreviousPage(): Observable<boolean> {\n    return this._movedToPreviousPage.asObservable();\n  }\n\n  /**\n   * Programmatically moves the wizard to the page before the current page.\n   *\n   * In most instances, it makes more sense to call Wizard.previous()\n   * which does the same thing.\n   *\n   * @memberof WizardNavigationService\n   */\n  public previous(): void {\n    let previousPage: ClrWizardPage;\n\n    if (this.currentPageIsFirst || this.wizardStopNavigation) {\n      return;\n    }\n\n    previousPage = this.pageCollection.getPreviousPage(this.currentPage);\n\n    if (!previousPage) {\n      return;\n    }\n\n    this._movedToPreviousPage.next(true);\n\n    if (this.forceForwardNavigation) {\n      this.currentPage.completed = false;\n    }\n\n    this.currentPage = previousPage;\n  }\n\n  /**\n   * @memberof WizardNavigationService\n   */\n  private _cancelWizard = new Subject<any>();\n\n  /**\n   * Notifies the wizard that a user is trying to cancel it.\n   *\n   * @memberof WizardNavigationService\n   */\n  public get notifyWizardCancel(): Observable<any> {\n    return this._cancelWizard.asObservable();\n  }\n\n  /**\n   * Allows a hook into the cancel workflow of the wizard from the nav service. Note that\n   * this route goes through all checks and event emissions as if a cancel button had\n   * been clicked.\n   *\n   * In most cases, users looking for a hook into the cancel routine are actually looking\n   * for a way to close the wizard from their host component because they have prevented\n   * the default cancel action.\n   *\n   * In this instance, it is recommended that you use Wizard.close() to avoid any event\n   * emission loop resulting from an event handler calling back into routine that will\n   * again evoke the events it handles.\n   *\n   * @memberof WizardNavigationService\n   */\n  public cancel(): void {\n    this._cancelWizard.next();\n  }\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopCancel (clrWizardPreventDefaultCancel) input. When true, the cancel\n   * routine is subverted and must be reinstated in the host component calling Wizard.close()\n   * at some point.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardHasAltCancel: boolean = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopNext (clrWizardPreventDefaultNext) input. When true, the next and finish\n   * routines are subverted and must be reinstated in the host component calling Wizard.next(),\n   * Wizard.forceNext(), Wizard.finish(), or Wizard.forceFinish().\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardHasAltNext: boolean = false;\n\n  /**\n   * A boolean flag shared across the Wizard subcomponents that follows the value\n   * of the Wizard.stopNavigation (clrWizardPreventNavigation) input. When true, all\n   * navigational elements in the wizard are disabled.\n   *\n   * This is intended to freeze the wizard in place. Events are not fired so this is\n   * not a way to implement alternate functionality for navigation.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardStopNavigation: boolean = false;\n\n  /**\n   * A boolean flag shared with the stepnav items that prevents user clicks on\n   * stepnav items from navigating the wizard.\n   *\n   * @memberof WizardNavigationService\n   */\n  public wizardDisableStepnav: boolean = false;\n\n  /**\n   * Performs all required checks to determine if a user can navigate to a page. Checking at each\n   * point if a page is navigable -- completed where the page immediately after the last completed\n   * page.\n   *\n   * Takes two parameters. The first one must be either the ClrWizardPage object or the ID of the\n   * ClrWizardPage object that you want to make the current page.\n   *\n   * The second parameter is optional and is a Boolean flag for \"lazy completion\". What this means\n   * is the Wizard will mark all pages between the current page and the page you want to navigate\n   * to as completed. This is useful for informational wizards that do not require user action,\n   * allowing an easy means for users to jump ahead.\n   *\n   * To avoid checks on navigation, use ClrWizardPage.makeCurrent() instead.\n   *\n   * @memberof WizardNavigationService\n   */\n  public goTo(pageToGoToOrId: any, lazyComplete: boolean = false) {\n    let pageToGoTo: ClrWizardPage;\n    let currentPage: ClrWizardPage;\n    let myPages: PageCollectionService;\n    let pagesToCheck: ClrWizardPage[];\n    let okayToMove: boolean;\n    let goingForward: boolean;\n    let currentPageIndex: number;\n    let goToPageIndex: number;\n\n    myPages = this.pageCollection;\n    pageToGoTo = typeof pageToGoToOrId === 'string' ? myPages.getPageById(pageToGoToOrId) : pageToGoToOrId;\n    currentPage = this.currentPage;\n\n    // no point in going to the current page. you're there already!\n    // also hard block on any navigation when stopNavigation is true\n    if (pageToGoTo === currentPage || this.wizardStopNavigation) {\n      return;\n    }\n\n    currentPageIndex = myPages.getPageIndex(currentPage);\n    goToPageIndex = myPages.getPageIndex(pageToGoTo);\n    goingForward = goToPageIndex > currentPageIndex;\n    pagesToCheck = myPages.getPageRangeFromPages(this.currentPage, pageToGoTo);\n\n    okayToMove = lazyComplete || this.canGoTo(pagesToCheck);\n\n    if (!okayToMove) {\n      return;\n    }\n\n    if (goingForward && lazyComplete) {\n      pagesToCheck.forEach((page: ClrWizardPage) => {\n        if (page !== pageToGoTo) {\n          page.completed = true;\n        }\n      });\n    } else if (!goingForward && this.forceForwardNavigation) {\n      pagesToCheck.forEach((page: ClrWizardPage) => {\n        page.completed = false;\n      });\n    }\n\n    this.currentPage = pageToGoTo;\n  }\n\n  /**\n   * Accepts a range of ClrWizardPage objects as a parameter. Performs the work of checking\n   * those objects to determine if navigation can be accomplished.\n   *\n   * @memberof WizardNavigationService\n   */\n  public canGoTo(pagesToCheck: ClrWizardPage[]): boolean {\n    let okayToMove = true;\n    const myPages = this.pageCollection;\n\n    // previous page can be important when moving because if it's completed it\n    // allows us to move to the page even if it's incomplete...\n    let previousPagePasses: boolean;\n\n    if (!pagesToCheck || pagesToCheck.length < 1) {\n      return false;\n    }\n\n    pagesToCheck.forEach((page: ClrWizardPage) => {\n      let previousPage: ClrWizardPage;\n\n      if (!okayToMove) {\n        return;\n      }\n\n      if (page.completed) {\n        // default is true. just jump out instead of complicating it.\n        return;\n      }\n\n      // so we know our page is not completed...\n      previousPage = myPages.getPageIndex(page) > 0 ? myPages.getPreviousPage(page) : null;\n      previousPagePasses = previousPage === null || previousPage.completed === true;\n\n      // we are false if not the current page AND previous page is not completed\n      // (but must have a previous page)\n      if (!page.current && !previousPagePasses) {\n        okayToMove = false;\n      }\n      // falls through to true as default\n    });\n\n    return okayToMove;\n  }\n\n  /**\n   * Looks through the collection of pages to find the first one that is incomplete\n   * and makes that page the current/active page.\n   *\n   * @memberof WizardNavigationService\n   */\n  public setLastEnabledPageCurrent(): void {\n    const allPages: ClrWizardPage[] = this.pageCollection.pagesAsArray;\n    let lastCompletedPageIndex: number = null;\n\n    allPages.forEach((page: ClrWizardPage, index: number) => {\n      if (page.completed) {\n        lastCompletedPageIndex = index;\n      }\n    });\n\n    if (lastCompletedPageIndex === null) {\n      // always is at least the first item...\n      lastCompletedPageIndex = 0;\n    } else if (lastCompletedPageIndex + 1 < allPages.length) {\n      lastCompletedPageIndex = lastCompletedPageIndex + 1;\n    }\n\n    this.currentPage = allPages[lastCompletedPageIndex];\n  }\n\n  /**\n   * Finds the first page in the collection of pages and makes that page the\n   * current/active page.\n   *\n   * @memberof WizardNavigationService\n   */\n  public setFirstPageCurrent(): void {\n    this.currentPage = this.pageCollection.pagesAsArray[0];\n  }\n\n  /**\n   * Updates the stepnav on the left side of the wizard when pages are dynamically\n   * added or removed from the collection of pages.\n   *\n   * @memberof WizardNavigationService\n   */\n  public updateNavigation(): void {\n    let toSetCurrent: ClrWizardPage;\n    let currentPageRemoved: boolean;\n\n    this.pageCollection.updateCompletedStates();\n\n    currentPageRemoved = this.pageCollection.pagesAsArray.indexOf(this.currentPage) < 0;\n    if (currentPageRemoved) {\n      toSetCurrent = this.pageCollection.findFirstIncompletePage();\n      this.currentPage = toSetCurrent;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable, QueryList } from '@angular/core';\nimport { ClrWizardHeaderAction } from '../wizard-header-action';\nimport { WizardNavigationService } from './wizard-navigation.service';\n\n@Injectable()\nexport class HeaderActionService {\n  // this service communicates information about the presence/display of header actions\n  // across the wizard\n\n  constructor(public navService: WizardNavigationService) {}\n\n  public wizardHeaderActions: QueryList<ClrWizardHeaderAction>;\n\n  public get wizardHasHeaderActions(): boolean {\n    const wizardHdrActions = this.wizardHeaderActions;\n    if (!wizardHdrActions) {\n      return false;\n    }\n    return wizardHdrActions.toArray().length > 0;\n  }\n\n  public get currentPageHasHeaderActions(): boolean {\n    return this.navService.currentPage ? this.navService.currentPage.hasHeaderActions : false;\n  }\n\n  public get showWizardHeaderActions(): boolean {\n    return !this.currentPageHasHeaderActions && this.wizardHasHeaderActions;\n  }\n\n  public get displayHeaderActionsWrapper(): boolean {\n    return this.currentPageHasHeaderActions || this.wizardHasHeaderActions;\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nlet wizardHeaderActionIndex = 0;\n\n@Component({\n  selector: 'clr-wizard-header-action',\n  template: `\n        <button \n            type=\"button\"\n            class=\"btn clr-wizard-header-action btn-link\"\n            [id]=\"id\"\n            [class.disabled]=\"disabled\"\n            (click)=\"click()\"\n            [title]=\"title\">\n            <ng-content></ng-content>\n        </button>\n    `,\n  host: { class: 'clr-wizard-header-action-wrapper' },\n})\nexport class ClrWizardHeaderAction {\n  // title is explanatory text added to the header action\n  @Input('title') title: string = '';\n\n  // If our host has an ID attribute, we use this instead of our index.\n  @Input('id') _id: string = (wizardHeaderActionIndex++).toString();\n\n  public get id(): string {\n    return `clr-wizard-header-action-${this._id}`;\n  }\n\n  @Input('clrWizardHeaderActionDisabled') public disabled: boolean = false;\n\n  @Output('actionClicked') headerActionClicked: EventEmitter<string> = new EventEmitter(false);\n\n  click(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    // passing the header action id allows users to have one method that\n    // routes to many different actions based on the type of header action\n    // clicked. this is further aided by users being able to specify ids\n    // for their header actions.\n    this.headerActionClicked.emit(this._id);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageButtons]' })\nexport class ClrWizardPageButtons {\n  constructor(public pageButtonsTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageHeaderActions]' })\nexport class ClrWizardPageHeaderActions {\n  constructor(public pageHeaderActionsTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageNavTitle]' })\nexport class ClrWizardPageNavTitle {\n  constructor(public pageNavTitleTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, TemplateRef } from '@angular/core';\n\n@Directive({ selector: '[clrPageTitle]' })\nexport class ClrWizardPageTitle {\n  constructor(public pageTitleTemplateRef: TemplateRef<any>) {}\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, EventEmitter, Input, OnInit, Output, TemplateRef } from '@angular/core';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardPageButtons } from './wizard-page-buttons';\nimport { ClrWizardPageHeaderActions } from './wizard-page-header-actions';\nimport { ClrWizardPageNavTitle } from './wizard-page-navtitle';\nimport { ClrWizardPageTitle } from './wizard-page-title';\n\nlet wizardPageIndex = 0;\n\n/**\n * The ClrWizardPage component is responsible for displaying the content of each step\n * in the wizard workflow.\n *\n * ClrWizardPage component has hooks into the navigation service (ClrWizardPage.navService),\n * page collection (ClrWizardPage.pageCollection), and button service\n * (ClrWizardPage.buttonService). These three providers are shared across the components\n * within each instance of a Wizard.\n *\n */\n@Component({\n  selector: 'clr-wizard-page',\n  template: '<ng-content></ng-content>',\n  host: {\n    '[id]': 'id',\n    '[attr.aria-hidden]': '!current',\n    '[attr.aria-labelledby]': 'stepItemId',\n    '[class.active]': 'current',\n    '[class.clr-wizard-page]': 'true',\n  },\n})\nexport class ClrWizardPage implements OnInit {\n  /**\n   * Creates an instance of ClrWizardPage.\n   *\n   * @memberof WizardPage\n   */\n  constructor(\n    private navService: WizardNavigationService,\n    public pageCollection: PageCollectionService,\n    public buttonService: ButtonHubService\n  ) {}\n\n  /**\n   * Contains a reference to the page title which is used for a number\n   * of different tasks for display in the wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageTitle, { static: true })\n  public pageTitle: ClrWizardPageTitle;\n\n  /**\n   * Contains a reference to the desired title for the page's step in the\n   * navigation on the left side of the wizard. Can be projected to change the\n   * navigation link's text.\n   *\n   * If not defined, then ClrWizardPage.pageTitle will be displayed in the stepnav.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageNavTitle, { static: true })\n  public pageNavTitle: ClrWizardPageNavTitle;\n\n  /**\n   * Contains a reference to the buttons defined within the page. If not defined,\n   * the wizard defaults to the set of buttons defined as a direct child of the\n   * wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageButtons, { static: true })\n  public _buttons: ClrWizardPageButtons;\n\n  /**\n   * Contains a reference to the header actions defined within the page. If not defined,\n   * the wizard defaults to the set of header actions defined as a direct child of the\n   * wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @ContentChild(ClrWizardPageHeaderActions, { static: true })\n  public _headerActions: ClrWizardPageHeaderActions;\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _nextStepDisabled = false;\n\n  /**\n   * A getter that tells whether or not the wizard should be allowed\n   * to move to the next page.\n   *\n   * Useful for in-page validation because it prevents forward navigation\n   * and visibly disables the next button.\n   *\n   * Does not require that you re-implement navigation routines like you\n   * would if you were using ClrWizardPage.preventDefault or\n   * Wizard.preventDefault.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get nextStepDisabled(): boolean {\n    return this._nextStepDisabled;\n  }\n\n  /**\n   * Sets whether the page should allow forward navigation.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPageNextDisabled')\n  public set nextStepDisabled(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._nextStepDisabled) {\n      this._nextStepDisabled = valBool;\n      this.nextStepDisabledChange.emit(valBool);\n    }\n  }\n\n  /**\n   * Emits when the value of ClrWizardPage.nextStepDisabled changes.\n   * Should emit the new value of nextStepDisabled.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageNextDisabledChange') nextStepDisabledChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _previousStepDisabled = false;\n\n  /**\n   * A getter that tells whether or not the wizard should be allowed\n   * to move to the previous page.\n   *\n   * Useful for in-page validation because it prevents backward navigation\n   * and visibly disables the previous button.\n   *\n   * Does not require that you re-implement navigation routines like you\n   * would if you were using ClrWizardPage.preventDefault or\n   * Wizard.preventDefault.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get previousStepDisabled(): boolean {\n    return this._previousStepDisabled;\n  }\n\n  /**\n   * Sets whether the page should allow backward navigation.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPagePreviousDisabled')\n  public set previousStepDisabled(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._previousStepDisabled) {\n      this._previousStepDisabled = valBool;\n      this.previousStepDisabledChange.emit(valBool);\n    }\n  }\n\n  /**\n   * Emits when the value of ClrWizardPage.previousStepDisabled changes.\n   * Should emit the new value of previousStepDisabled.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePreviousDisabledChange')\n  public previousStepDisabledChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _hasError = false;\n\n  /**\n   * A getter that tells whether or not the page has an error.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasError() {\n    return this._hasError;\n  }\n\n  /**\n   * Sets whether the page has an error and also resolve the \"falsy\" value. The\n   * current logic treat a \"0\" or an empty string as false and likewise will treat any\n   * \"truthy\" value as true.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPageHasError')\n  public set hasError(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._hasError) {\n      this._hasError = valBool;\n    }\n  }\n\n  /**\n   * Overrides all actions from the page level, so you can use an alternate function for\n   * validation or data-munging with a ClrWizardPage.onCommit (clrWizardPageOnCommit output),\n   * ClrWizardPage.onCancel (clrWizardPageOnCancel output), or one\n   * of the granular page-level button click event emitters.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('clrWizardPagePreventDefault') public preventDefault: boolean = false;\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _stopCancel = false;\n\n  /**\n   * A getter that retrieves whether the page is preventing the cancel action.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stopCancel(): boolean {\n    return this._stopCancel;\n  }\n\n  /**\n   * Overrides the cancel action from the page level. Allows you to use an\n   * alternate function for validation or data-munging before cancelling the\n   * wizard when combined with the ClrWizardPage.onCancel\n   * (the clrWizardPageOnCancel output).\n   *\n   * Requires that you manually close the wizard from your host component,\n   * usually with a call to Wizard.forceNext() or wizard.next();\n   *\n   * @memberof ClrWizardPage\n   */\n  @Input('clrWizardPagePreventDefaultCancel')\n  public set stopCancel(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._stopCancel) {\n      this._stopCancel = valBool;\n      this.stopCancelChange.emit(valBool);\n    }\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePreventDefaultCancelChange') stopCancelChange: EventEmitter<boolean> = new EventEmitter();\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _stopNext = false;\n\n  /**\n   * A getter that tells you whether the page is preventing the next action.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stopNext(): boolean {\n    return this._stopNext;\n  }\n\n  /**\n   * Overrides forward navigation from the page level. Allows you to use an\n   * alternate function for validation or data-munging before moving the\n   * wizard to the next pagewhen combined with the ClrWizardPage.onCommit\n   * (clrWizardPageOnCommit) or ClrWizardPage.nextButtonClicked\n   * (clrWizardPageNext) outputs.\n   *\n   * Requires that you manually tell the wizard to navigate forward from\n   * the hostComponent, usually with a call to Wizard.forceNext() or\n   * wizard.next();\n   *\n   * @memberof ClrWizardPage\n   */\n  @Input('clrWizardPagePreventDefaultNext')\n  public set stopNext(val: boolean) {\n    const valBool = !!val;\n    if (valBool !== this._stopNext) {\n      this._stopNext = valBool;\n    }\n  }\n\n  /**\n   * An event emitter carried over from a legacy version of ClrWizardPage.\n   * Fires an event on ClrWizardPage whenever the next or finish buttons\n   * are clicked and the page is the current page of the Wizard.\n   *\n   * Note that this does not automatically emit an event when a custom\n   * button is used in place of a next or finish button.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnCommit') onCommit: EventEmitter<string> = new EventEmitter<string>(false);\n\n  /**\n   * Emits an event when ClrWizardPage becomes the current page of the\n   * Wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnLoad') onLoad: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * Emits an event when the ClrWizardPage invokes the cancel routine for the wizard.\n   *\n   * Can be used in conjunction with the ClrWizardPage.stopCancel\n   * (clrWizardPagePreventDefaultCancel) or ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) inputs to implement custom cancel\n   * functionality at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before cancelling the wizard.\n   *\n   * Note that this requires you to call Wizard.close() from the host component.\n   * This constitues a full replacement of the cancel functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageOnCancel') pageOnCancel: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the finish button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom finish\n   * functionality at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to complete\n   * the wizard.\n   *\n   * Note that this requires you to call Wizard.finish() or Wizard.forceFinish()\n   * from the host component. This combination creates a full replacement of\n   * the finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageFinish') finishButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the previous button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom backwards\n   * navigation at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to go\n   * backwards in the wizard.\n   *\n   * Note that this requires you to call Wizard.previous()\n   * from the host component. This combination creates a full replacement of\n   * the backwards navigation functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePrevious') previousButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when the next button is clicked and the ClrWizardPage is\n   * the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * navigation at the page level. This is useful if you would like to do\n   * validation, save data, or warn users before allowing them to go\n   * to the next page in the wizard.\n   *\n   * Note that this requires you to call Wizard.forceNext() or Wizard.next()\n   * from the host component. This combination creates a full replacement of\n   * the forward navigation functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageNext') nextButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when a danger button is clicked and the ClrWizardPage is\n   * the wizard's current page. By default, a danger button will act as\n   * either a \"next\" or \"finish\" button depending on if the ClrWizardPage is the\n   * last page or not.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * or finish navigation at the page level when the danger button is clicked.\n   * This is useful if you would like to do validation, save data, or warn\n   * users before allowing them to go to the next page in the wizard or\n   * finish the wizard.\n   *\n   * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n   * Wizard.forceNext() or Wizard.next() from the host component. This\n   * combination creates a full replacement of the forward navigation and\n   * finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPageDanger') dangerButtonClicked: EventEmitter<ClrWizardPage> = new EventEmitter();\n\n  /**\n   * Emits an event when a next, finish, or danger button is clicked and the\n   * ClrWizardPage is the wizard's current page.\n   *\n   * Can be used in conjunction with the ClrWizardPage.preventDefault\n   * (clrWizardPagePagePreventDefault) input to implement custom forwards\n   * or finish navigation at the page level, regardless of the type of\n   * primary button.\n   *\n   * This is useful if you would like to do validation, save data, or warn\n   * users before allowing them to go to the next page in the wizard or\n   * finish the wizard.\n   *\n   * Note that this requires you to call Wizard.finish(), Wizard.forceFinish(),\n   * Wizard.forceNext() or Wizard.next() from the host component. This\n   * combination creates a full replacement of the forward navigation and\n   * finish functionality.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Output('clrWizardPagePrimary') primaryButtonClicked: EventEmitter<string> = new EventEmitter();\n\n  @Output('clrWizardPageCustomButton') customButtonClicked: EventEmitter<string> = new EventEmitter();\n\n  /**\n   * An input value that is used internally to generate the ClrWizardPage ID as\n   * well as the step nav item ID.\n   *\n   * Typed as any because it should be able to accept numbers as well as\n   * strings. Passing an index for wizard whose pages are created with an\n   * ngFor loop is a common use case.\n   *\n   * @memberof WizardPage\n   *\n   */\n  @Input('id') _id: any = (wizardPageIndex++).toString();\n\n  /**\n   * A read-only getter that generates an ID string for the wizard page from\n   * either the value passed to the ClrWizardPage \"id\" input or a wizard page\n   * counter shared across all wizard pages in the application.\n   *\n   * Note that the value passed into the ID input Will be prefixed with\n   * \"clr-wizard-page-\".\n   *\n   * @readonly\n   *\n   * @memberof ClrWizardPage\n   */\n  public get id() {\n    // covers things like null, undefined, false, and empty string\n    // while allowing zero to pass\n    const idIsNonZeroFalsy = !this._id && this._id !== 0;\n\n    // in addition to non-zero falsy we also want to make sure _id is not a negative\n    // number.\n    if (idIsNonZeroFalsy || this._id < 0) {\n      // guard here in the event that input becomes undefined or null by accident\n      this._id = (wizardPageIndex++).toString();\n    }\n    return `clr-wizard-page-${this._id}`;\n  }\n\n  /**\n   * A read-only getter that serves as a convenience for those who would rather\n   * not think in the terms of !ClrWizardPage.nextStepDisabled. For some use cases,\n   * ClrWizardPage.readyToComplete is more logical and declarative.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get readyToComplete(): boolean {\n    return !this.nextStepDisabled;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  private _complete: boolean = false;\n\n  /**\n   * A page is marked as completed if it is both readyToComplete and completed,\n   * as in the next or finish action has been executed while this page was current.\n   *\n   * Note there is and open question about how to handle pages that are marked\n   * complete but who are no longer readyToComplete. This might indicate an error\n   * state for the ClrWizardPage. Currently, the wizard does not acknowledge this state\n   * and only returns that the page is incomplete.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get completed(): boolean {\n    return this._complete && this.readyToComplete;\n\n    // FOR V2: UNWIND COMPLETED, READYTOCOMPLETE, AND ERRORS\n    // SUCH THAT ERRORS IS ITS OWN INPUT. IF A STEP IS\n    // INCOMPLETE AND ERRORED, ERRORED WILL NOT SHOW.\n    // FIRST QUESTION: AM I GREY OR COLORED?\n    // SECOND QUESTION: AM I GREEN OR RED?\n  }\n\n  /**\n   * A ClrWizardPage can be manually set to completed using this boolean setter.\n   * It is recommended that users rely on the convenience functions in the wizard\n   * and navigation service instead of manually setting pages’ completion state.\n   *\n   * @memberof ClrWizardPage\n   */\n  public set completed(value: boolean) {\n    this._complete = value;\n  }\n\n  /**\n   * Checks with the navigation service to see if it is the current page.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get current(): boolean {\n    return this.navService.currentPage === this;\n  }\n\n  public get disabled(): boolean {\n    return !this.enabled;\n  }\n\n  /**\n   * A read-only getter that returns whether or not the page is navigable\n   * in the wizard. A wizard page can be navigated to if it is completed\n   * or the page before it is completed.\n   *\n   * This getter handles the logic for enabling or disabling the links in\n   * the step nav on the left Side of the wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get enabled(): boolean {\n    return this.current || this.completed || this.previousCompleted;\n  }\n\n  /**\n   * A read-only getter that returns whether or not the page before this\n   * ClrWizardPage is completed. This is useful for determining whether or not\n   * a page is navigable if it is not current or already completed.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get previousCompleted(): boolean {\n    const previousPage = this.pageCollection.getPreviousPage(this);\n\n    if (!previousPage) {\n      return true;\n    }\n\n    return previousPage.completed;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get title(): TemplateRef<any> {\n    return this.pageTitle.pageTitleTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get navTitle(): TemplateRef<any> {\n    if (this.pageNavTitle) {\n      return this.pageNavTitle.pageNavTitleTemplateRef;\n    }\n    return this.pageTitle.pageTitleTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get headerActions(): TemplateRef<any> {\n    if (!this._headerActions) {\n      return;\n    }\n    return this._headerActions.pageHeaderActionsTemplateRef;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasHeaderActions(): boolean {\n    return !!this._headerActions;\n  }\n\n  /**\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get buttons(): TemplateRef<any> {\n    if (!this._buttons) {\n      return;\n    }\n    return this._buttons.pageButtonsTemplateRef;\n  }\n\n  /**\n   * A read-only getter that returns a boolean that says whether or\n   * not the ClrWizardPage includes buttons. Used to determine if the\n   * Wizard should override the default button set defined as\n   * its direct children.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get hasButtons(): boolean {\n    return !!this._buttons;\n  }\n\n  /**\n   * Uses the nav service to make the ClrWizardPage the current page in the\n   * wizard. Bypasses all checks but still emits the ClrWizardPage.onLoad\n   * (clrWizardPageOnLoad) output.\n   *\n   * In most cases, it is better to use the default navigation functions\n   * in Wizard.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public makeCurrent(): void {\n    this.navService.currentPage = this;\n  }\n\n  /**\n   * Links the nav service and establishes the current page if one is not defined.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public ngOnInit(): void {\n    const navService = this.navService;\n    if (!navService.currentPage && !navService.navServiceLoaded) {\n      this.makeCurrent();\n      this.navService.navServiceLoaded = true;\n    }\n  }\n\n  /**\n   * A read-only getter that returns the id used by the step nav item associated with the page.\n   *\n   * ClrWizardPage needs this ID string for aria information.\n   *\n   * @memberof WizardPage\n   *\n   */\n  public get stepItemId(): string {\n    return this.pageCollection.getStepItemIdForPage(this);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  IterableDiffers,\n  OnDestroy,\n  Output,\n  QueryList,\n  ViewChild,\n  PLATFORM_ID,\n  Inject,\n} from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { HeaderActionService } from './providers/header-actions.service';\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardHeaderAction } from './wizard-header-action';\nimport { ClrWizardPage } from './wizard-page';\n\n@Component({\n  selector: 'clr-wizard',\n  providers: [WizardNavigationService, PageCollectionService, ButtonHubService, HeaderActionService],\n  templateUrl: './wizard.html',\n  host: {\n    '[class.clr-wizard]': 'true',\n    '[class.wizard-md]': \"size == 'md'\",\n    '[class.wizard-lg]': \"size == 'lg'\",\n    '[class.wizard-xl]': \"size == 'xl'\",\n    '[class.lastPage]': 'navService.currentPageIsLast',\n  },\n})\nexport class ClrWizard implements OnDestroy, AfterContentInit, DoCheck {\n  /**\n   * Set the modal size of the wizard. Set using `[clrWizardSize]` input.\n   */\n  @Input('clrWizardSize') size = 'xl';\n\n  /**\n   * Tells the modal part of the wizard whether it should have a close \"X\"\n   * in the top right corner. Set using `[clrWizardClosable]` input.\n   */\n  @Input('clrWizardClosable') closable = true;\n\n  /**\n   * Resets page completed states when navigating backwards.\n   * Set using `[clrWizardForceForwardNavigation]` input.\n   */\n  @Input('clrWizardForceForwardNavigation')\n  set forceForward(value: boolean) {\n    this._forceForward = !!value;\n    this.navService.forceForwardNavigation = value;\n  }\n  private _forceForward: boolean = false;\n  get forceForward(): boolean {\n    return this._forceForward;\n  }\n\n  _open = false;\n  /**\n   * Toggles open/close of the wizard component.\n   * Set using the `[clrWizardOpen]` input.\n   */\n  @Input('clrWizardOpen')\n  set clrWizardOpen(open: boolean) {\n    if (open) {\n      this.buttonService.buttonsReady = true;\n    }\n    this._open = open;\n  }\n\n  /**\n   * Prevents ClrWizard from moving to the next page or closing itself on finishing.\n   * Set using the `[clrWizardPreventDefaultNext]` input. Note that using stopNext\n   * will require you to create your own calls to .next() and .finish() in your\n   * host component to make the ClrWizard work as expected.\n   */\n  @Input('clrWizardPreventDefaultNext')\n  set stopNext(value: boolean) {\n    this._stopNext = !!value;\n    this.navService.wizardHasAltNext = value;\n  }\n  private _stopNext: boolean = false;\n  get stopNext() {\n    return this._stopNext;\n  }\n\n  /**\n   * Prevents ClrWizard from closing when the cancel button or close \"X\" is clicked.\n   * Set using the `[clrWizardPreventDefaultCancel]` input.\n   *\n   * Note that using stopCancel will require you to create your own calls to `close()` in your host compone`nt\n   * to make the ClrWizard work as expected. Useful for doing checks or prompts\n   * before closing a ClrWizard.\n   */\n  @Input('clrWizardPreventDefaultCancel')\n  set stopCancel(value: boolean) {\n    this._stopCancel = !!value;\n    this.navService.wizardHasAltCancel = value;\n  }\n  private _stopCancel: boolean = false;\n  get stopCancel(): boolean {\n    return this._stopCancel;\n  }\n\n  /**\n   * Prevents ClrWizard from performing any form of navigation away from the current\n   * page. Set using the `[clrWizardPreventNavigation]` input.\n   * Note that stopNavigation is meant to freeze the wizard in place, typically\n   * during a long validation or background action where you want the wizard to\n   * display loading content but not allow the user to execute navigation in\n   * the stepnav, close X, or the  back, finish, or next buttons.\n   */\n  @Input('clrWizardPreventNavigation')\n  set stopNavigation(value: boolean) {\n    this._stopNavigation = !!value;\n    this.navService.wizardStopNavigation = value;\n  }\n  private _stopNavigation = false;\n  get stopNavigation() {\n    return this._stopNavigation;\n  }\n\n  /**\n   * Prevents clicks on the links in the stepnav from working.\n   * Set using `[clrWizardDisableStepnav]` input.\n   * A more granular bypassing of navigation which can be useful when your\n   * ClrWizard is in a state of completion and you don't want users to be\n   * able to jump backwards and change things.\n   */\n  @Input('clrWizardDisableStepnav')\n  set disableStepnav(value: boolean) {\n    this._disableStepnav = !!value;\n    this.navService.wizardDisableStepnav = value;\n  }\n  private _disableStepnav: boolean = false;\n  get disableStepnav(): boolean {\n    return this._disableStepnav;\n  }\n\n  /**\n   * Used to communicate to the underlying modal that animations are not\n   * wanted. Primary use is for the display of static/inline wizards.\n   * Set using `[clrWizardPreventModalAnimation]` input.\n   */\n  /** @deprecated since 3.0, input should be removed in 4.0 because is only related to inline wizards */\n  @Input('clrWizardPreventModalAnimation') _stopModalAnimations: boolean = false;\n  get stopModalAnimations(): string {\n    return this._stopModalAnimations ? 'true' : 'false';\n  }\n\n  /**\n   * Emits when the wizard is opened or closed.\n   * Listen via `(clrWizardOpenChange)` event.\n   */\n  @Output('clrWizardOpenChange') _openChanged: EventEmitter<boolean> = new EventEmitter<boolean>(false);\n\n  /**\n   * Emits when the wizard is canceled. Listen via `(clrWizardOnCancel)` event.\n   * Can be combined with the `[clrWizardPreventDefaultCancel]` input to create\n   * wizard-level custom cancel routines.\n   */\n  @Output('clrWizardOnCancel') onCancel: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard is completed. Listen via `(clrWizardOnFinish)` event.\n   * Can be combined with the `[clrWizardPreventDefaultNext]` input to create\n   * wizard-level custom completion routines.\n   */\n  @Output('clrWizardOnFinish') wizardFinished: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard is reset. Listen via `(clrWizardOnReset)` event.\n   */\n  @Output('clrWizardOnReset') onReset: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the current page has changed. Listen via `(clrWizardCurrentPageChanged)` event.\n   * output. Useful for non-blocking validation.\n   */\n  @Output('clrWizardCurrentPageChanged') currentPageChanged: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard moves to the next page. Listen via `(clrWizardOnNext)` event.\n   * Can be combined with the `[clrWizardPreventDefaultNext]` input to create\n   * wizard-level custom navigation routines, which are useful for validation.\n   */\n  @Output('clrWizardOnNext') onMoveNext: EventEmitter<any> = new EventEmitter<any>(false);\n\n  /**\n   * Emits when the wizard moves to the previous page. Can be useful for validation.\n   * Listen via `(clrWizardOnPrevious)` event.\n   */\n\n  @Output('clrWizardOnPrevious') onMovePrevious: EventEmitter<any> = new EventEmitter<any>(false);\n\n  @ContentChildren(ClrWizardPage, { descendants: true })\n  pages: QueryList<ClrWizardPage>;\n  @ContentChildren(ClrWizardHeaderAction) headerActions: QueryList<ClrWizardHeaderAction>;\n  @ViewChild('wizardTitle') wizardTitle: ElementRef;\n\n  public get currentPage() {\n    return this.navService.currentPage;\n  }\n\n  public set currentPage(page: ClrWizardPage) {\n    this.navService.goTo(page, true);\n  }\n\n  public get isLast() {\n    return this.navService.currentPageIsLast;\n  }\n\n  public get isFirst() {\n    return this.navService.currentPageIsFirst;\n  }\n\n  public get isStatic() {\n    return (this.elementRef.nativeElement as HTMLElement).classList.contains('clr-wizard--inline');\n  }\n\n  private differ: any; // for marking when the collection of wizard pages has been added to or deleted from\n  private subscriptions: Subscription[] = [];\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    public navService: WizardNavigationService,\n    public pageCollection: PageCollectionService,\n    public buttonService: ButtonHubService,\n    public headerActionService: HeaderActionService,\n    private elementRef: ElementRef,\n    differs: IterableDiffers\n  ) {\n    this.subscriptions.push(\n      this.listenForNextPageChanges(),\n      this.listenForPreviousPageChanges(),\n      this.listenForCancelChanges(),\n      this.listenForFinishedChanges(),\n      this.listenForPageChanges()\n    );\n\n    this.differ = differs.find([]).create(null);\n  }\n\n  public ngAfterContentInit() {\n    this.pageCollection.pages = this.pages;\n    this.headerActionService.wizardHeaderActions = this.headerActions;\n    this.initializeButtons();\n  }\n\n  public ngDoCheck() {\n    this.updateNavOnPageChanges();\n  }\n\n  public ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  /**\n   * Marks Wizard as finished. By default it does not execute event\n   * emissions or checks before completing and closing. This method is commonly\n   * used as part of an alternative navigation with `[clrWizardPreventDefaultNext]`.\n   *\n   * If `skipChecksAndEmits` is true, the wizard will complete and close\n   * regardless of the state of its current page. This is useful for alternative\n   * navigation where event emissions have already been done and firing them again\n   * may cause an event loop.\n   */\n  public finish(skipChecksAndEmits = true) {\n    if (skipChecksAndEmits) {\n      this.forceFinish();\n    } else {\n      this.navService.finish();\n    }\n  }\n\n  /**\n   * Marks the wizard as finished but does run checks and emissions.\n   * Good for a last step in an alternate workflow. Does the same thing as\n   * calling `ClrWizard.finish(true)` or `ClrWizard.finish()` without a parameter.\n   */\n  public forceFinish() {\n    if (this.stopNavigation) {\n      return;\n    }\n\n    this.close();\n  }\n\n  /**\n   * Opens the wizard. If there is no current page defined, sets the first page in the wizard to be current.\n   */\n  public open(): void {\n    this._open = true;\n\n    if (!this.currentPage) {\n      this.navService.setFirstPageCurrent();\n    }\n\n    // Only render buttons when wizard is opened, to avoid chocolate errors\n    this.buttonService.buttonsReady = true;\n\n    this._openChanged.emit(true);\n  }\n\n  /**\n   * Closes the wizard. Call this directly instead of `cancel()` to implement alternative cancel functionality.\n   */\n  public close(): void {\n    if (this.stopNavigation) {\n      return;\n    }\n\n    this._open = false;\n    this._openChanged.emit(false);\n  }\n\n  /**\n   * Used to open and close the wizard. By default the wizard will\n   * close if invoked with no parameter. If parameter is true wizard will open\n   * else if false will close.\n   */\n  public toggle(open: boolean): void {\n    if (open) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n\n  /**\n   * Moves the wizard to the previous page.\n   */\n  public previous(): void {\n    this.navService.previous();\n  }\n\n  /**\n   * By default, `next()` does not execute event emissions.\n   * This method is commonly called as part of an alternative navigation\n   * with `[clrWizardPreventDefaultNext]`. The wizard will move to the next page\n   * regardless of the state of its current page. This is useful for alternative\n   * navigation where event emissions have already been done and firing them again\n   * may cause an event loop.\n   *\n   * If `skipChecksAndEmits` is false, the wizard will execute default checks\n   * and emit events as normal. This is useful for custom buttons or programmatic\n   * workflows that are not executing the wizards default checks and emissions.\n   * It is another way to navigate without having to rewrite the wizard’s default\n   * functionality from scratch.\n   */\n  public next(skipChecksAndEmits: boolean = true): void {\n    if (skipChecksAndEmits) {\n      this.forceNext();\n    } else {\n      this.navService.next();\n    }\n  }\n\n  /**\n   * Moves the wizard to the next page without the checks and emissions.\n   * Good for a last step in an alternate workflow.\n   * Alias for `ClrWizard.next(true)` or `ClrWizard.next()`\n   */\n  public forceNext(): void {\n    this.navService.forceNext();\n  }\n\n  /**\n   * Cancels and closes the wizard. Do not use this for an override of the cancel\n   * the functionality with `[clrWizardPreventDefaultCancel]`, `[clrWizardPreventPageDefaultCancel]`,\n   * or `[clrWizardPagePreventDefault]` because it will initiate the same checks\n   * and event emissions that invoked your event handler. Use `ClrWizard.close()` instead.\n   */\n  public cancel(): void {\n    this.navService.cancel();\n  }\n\n  /**\n   * Overrides behavior of the underlying modal to avoid collisions with\n   * alternative cancel functionality. In most cases, use `ClrWizard.cancel()` instead.\n   */\n  public modalCancel(): void {\n    if (this.closable) {\n      this.checkAndCancel();\n    }\n  }\n\n  /**\n   * Checks for alternative cancel flows defined at the current page or\n   * wizard level. Performs a canceled if not. Emits events that initiate\n   * the alternative cancel outputs `(clrWizardPageOnCancel)` and `(clrWizardOnCancel)`.\n   */\n  public checkAndCancel(): void {\n    const currentPage = this.currentPage;\n    const currentPageHasOverrides = currentPage.stopCancel || currentPage.preventDefault;\n\n    if (this.stopNavigation) {\n      return;\n    }\n\n    currentPage.pageOnCancel.emit();\n    if (!currentPageHasOverrides) {\n      this.onCancel.emit();\n    }\n\n    if (!this.stopCancel && !currentPageHasOverrides) {\n      this.close();\n    }\n  }\n\n  /**\n   * Navigates to a given page in the Wizard. Navigation will invoke the wizard’s default\n   * checks and event emissions.\n   *\n   * The format of the expected ID parameter can be found in the return of the\n   * ClrWizardPage.id getter, usually prefixed with `clr-wizard-page-` and then either a\n   * numeric ID or the ID specified for the `ClrWizardPage` component’s `id` input.\n   */\n  public goTo(pageId: string): void {\n    if (!pageId) {\n      return;\n    }\n\n    this.navService.goTo(pageId);\n  }\n\n  /**\n   * Reset sets all WizardPages to incomplete and sets the first page in the `ClrWizard` to\n   * be the current page, resetting the wizard navigation.\n   * Use `(clrWizardOnReset)` event to reset the data or model of your wizard.\n   */\n  public reset(): void {\n    this.pageCollection.reset();\n    this.onReset.next();\n  }\n\n  private listenForNextPageChanges(): Subscription {\n    return this.navService.movedToNextPage.pipe(filter(() => isPlatformBrowser(this.platformId))).subscribe(() => {\n      this.onMoveNext.emit();\n      this.wizardTitle.nativeElement.focus();\n    });\n  }\n\n  private listenForPreviousPageChanges(): Subscription {\n    return this.navService.movedToPreviousPage.pipe(filter(() => isPlatformBrowser(this.platformId))).subscribe(() => {\n      this.onMovePrevious.emit();\n      this.wizardTitle.nativeElement.focus();\n    });\n  }\n\n  private listenForCancelChanges(): Subscription {\n    return this.navService.notifyWizardCancel.subscribe(() => this.checkAndCancel());\n  }\n\n  private listenForFinishedChanges(): Subscription {\n    return this.navService.wizardFinished.subscribe(() => this.emitWizardFinished());\n  }\n\n  private listenForPageChanges(): Subscription {\n    return this.navService.currentPageChanged.subscribe(() => this.currentPageChanged.emit());\n  }\n\n  private updateNavOnPageChanges(): void {\n    const changes = this.differ.diff(this.pages);\n    if (changes) {\n      changes.forEachAddedItem(() => this.navService.updateNavigation());\n      changes.forEachRemovedItem(() => this.navService.updateNavigation());\n    }\n  }\n\n  private initializeButtons(): void {\n    // Only trigger buttons ready if default is open (inlined)\n    if (this._open) {\n      this.buttonService.buttonsReady = true;\n    }\n  }\n\n  private emitWizardFinished(): void {\n    if (!this.stopNext) {\n      this.forceFinish();\n    }\n    this.wizardFinished.emit();\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\n\nimport { ButtonHubService } from './providers/button-hub.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\n\nexport const DEFAULT_BUTTON_TYPES: any = {\n  cancel: 'cancel',\n  previous: 'previous',\n  next: 'next',\n  finish: 'finish',\n  danger: 'danger',\n};\n\nexport const CUSTOM_BUTTON_TYPES: any = {\n  cancel: 'custom-cancel',\n  previous: 'custom-previous',\n  next: 'custom-next',\n  finish: 'custom-finish',\n  danger: 'custom-danger',\n};\n\n@Component({\n  selector: 'clr-wizard-button',\n  template: `\n        <button\n            type=\"button\"\n            class=\"btn clr-wizard-btn\"\n            [class.btn-link]=\"isCancel\"\n            [class.clr-wizard-btn--tertiary]=\"isCancel\"\n            [class.btn-outline]=\"isPrevious\"\n            [class.clr-wizard-btn--secondary]=\"isPrevious\"\n            [class.btn-primary]=\"isPrimaryAction\"\n            [class.clr-wizard-btn--primary]=\"isPrimaryAction\"\n            [class.btn-success]=\"isFinish\"\n            [class.btn-danger]=\"isDanger\"\n            [class.disabled]=\"isDisabled\"\n            [attr.disabled]=\"_disabledAttribute\"\n            (click)=\"click()\">\n            <ng-content></ng-content>\n        </button>\n    `,\n  host: { class: 'clr-wizard-btn-wrapper', '[attr.aria-hidden]': 'isHidden' },\n  styles: ['[aria-hidden=\"true\"] { display: none; }'],\n})\nexport class ClrWizardButton {\n  @Input('type') public type: string = '';\n\n  @Input('clrWizardButtonDisabled') public disabled: boolean = false;\n\n  @Input('clrWizardButtonHidden') public hidden: boolean = false;\n\n  // EventEmitter which is emitted when a button is clicked.\n  @Output('clrWizardButtonClicked') wasClicked: EventEmitter<string> = new EventEmitter<string>(false);\n\n  constructor(public navService: WizardNavigationService, public buttonService: ButtonHubService) {}\n\n  private checkDefaultAndCustomType(valueToCheck: string = '', typeToLookUp: string) {\n    if (DEFAULT_BUTTON_TYPES[typeToLookUp] === valueToCheck) {\n      return true;\n    }\n    if (CUSTOM_BUTTON_TYPES[typeToLookUp] === valueToCheck) {\n      return true;\n    }\n    return false;\n  }\n\n  public get isCancel(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'cancel');\n  }\n\n  public get isNext(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'next');\n  }\n\n  public get isPrevious(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'previous');\n  }\n\n  public get isFinish(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'finish');\n  }\n\n  public get isDanger(): boolean {\n    return this.checkDefaultAndCustomType(this.type, 'danger');\n  }\n\n  public get isPrimaryAction(): boolean {\n    return this.isNext || this.isDanger || this.isFinish;\n  }\n\n  public get _disabledAttribute(): string | null {\n    if (this.isDisabled) {\n      return '';\n    }\n    return null;\n  }\n\n  public get isDisabled(): boolean {\n    // dealing with negatives here. cognitively easier to think of it like this...\n    const disabled = true;\n    const nav = this.navService;\n    const page = this.navService.currentPage;\n\n    // Ensure we don't change the response until buttons are ready to avoid chocolate\n    if (!this.buttonService.buttonsReady) {\n      return !disabled;\n    }\n\n    if (this.disabled || nav.wizardStopNavigation || !page) {\n      return true;\n    }\n\n    if (this.isCancel) {\n      return !disabled;\n    }\n\n    if (this.isPrevious && (nav.currentPageIsFirst || page.previousStepDisabled)) {\n      return disabled;\n    }\n\n    if (this.isDanger && !page.readyToComplete) {\n      return disabled;\n    }\n\n    if (this.isNext && (nav.currentPageIsLast || !page.readyToComplete)) {\n      return disabled;\n    }\n\n    if (this.isFinish && (!nav.currentPageIsLast || !page.readyToComplete)) {\n      return disabled;\n    }\n\n    return !disabled;\n  }\n\n  public get isHidden(): boolean {\n    // dealing with negatives here. cognitively easier to think of it like this...\n    const hidden = true;\n    const nav = this.navService;\n\n    // Ensure we don't change the response until buttons are ready to avoid chocolate\n    if (!this.buttonService.buttonsReady) {\n      return !hidden;\n    }\n\n    if (this.hidden) {\n      return true;\n    }\n\n    if (this.isCancel) {\n      return !hidden;\n    }\n\n    if (this.isPrevious && nav.currentPageIsFirst) {\n      return hidden;\n    }\n\n    if (this.isNext && nav.currentPageIsLast) {\n      return hidden;\n    }\n\n    if (this.isFinish && !nav.currentPageIsLast) {\n      return hidden;\n    }\n\n    return !hidden;\n  }\n\n  click(): void {\n    if (this.isDisabled) {\n      return;\n    }\n\n    this.wasClicked.emit(this.type);\n    this.buttonService.buttonClicked(this.type);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({ selector: 'clr-wizard-title, clr-wizard-pagetitle' })\nexport class ClrWizardCustomTags {\n  // No behavior\n  // The only purpose is to \"declare\" the tag in Angular\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\nimport { PageCollectionService } from './providers/page-collection.service';\n\n@Component({\n  selector: 'clr-wizard-stepnav',\n  template: `\n    <div class=\"clr-wizard-stepnav-list\">\n      <div *ngFor=\"let page of pageService.pages; let i = index\" clr-wizard-stepnav-item [page]=\"page\" class=\"clr-wizard-stepnav-item\">{{i + 1}}</div>\n    </div>\n  `,\n  host: { class: 'clr-wizard-stepnav' },\n})\nexport class ClrWizardStepnav {\n  constructor(public pageService: PageCollectionService) {}\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input } from '@angular/core';\n\nimport { PageCollectionService } from './providers/page-collection.service';\nimport { WizardNavigationService } from './providers/wizard-navigation.service';\nimport { ClrWizardPage } from './wizard-page';\n\n@Component({\n  selector: '[clr-wizard-stepnav-item]',\n  template: `\n        <button type=\"button\" class=\"btn btn-link clr-wizard-stepnav-link\" (click)=\"click()\" [attr.disabled]=\"isDisabled ? '' : null\">\n            <span class=\"clr-wizard-stepnav-link-suffix\">\n              <clr-icon shape=\"error-standard\" class=\"is-error clr-wizard-stepnav-item-error-icon\" *ngIf=\"hasError\"></clr-icon>\n              <ng-content *ngIf=\"!hasError\"></ng-content>              \n            </span>\n            <span class=\"clr-wizard-stepnav-link-title\">\n              <ng-template [ngTemplateOutlet]=\"page.navTitle\"></ng-template> \n            </span>\n        </button>\n    `,\n  host: {\n    '[id]': 'id',\n    '[attr.aria-selected]': 'isCurrent',\n    '[attr.aria-controls]': 'id',\n    '[class.clr-nav-link]': 'true',\n    '[class.nav-item]': 'true',\n    '[class.active]': 'isCurrent',\n    '[class.disabled]': 'isDisabled',\n    '[class.no-click]': '!canNavigate',\n    '[class.complete]': 'isComplete',\n    '[class.error]': 'hasError',\n  },\n})\nexport class ClrWizardStepnavItem {\n  @Input('page') public page: ClrWizardPage;\n\n  constructor(public navService: WizardNavigationService, public pageCollection: PageCollectionService) {}\n\n  private pageGuard(): void {\n    if (!this.page) {\n      throw new Error('Wizard stepnav item is not associated with a wizard page.');\n    }\n  }\n\n  public get id(): string {\n    this.pageGuard();\n    return this.pageCollection.getStepItemIdForPage(this.page);\n  }\n\n  public get isDisabled(): boolean {\n    this.pageGuard();\n    return this.page.disabled || this.navService.wizardStopNavigation || this.navService.wizardDisableStepnav;\n  }\n\n  public get isCurrent(): boolean {\n    this.pageGuard();\n    return this.page.current;\n  }\n\n  public get isComplete(): boolean {\n    this.pageGuard();\n    return this.page.completed;\n  }\n\n  public get hasError(): boolean {\n    this.pageGuard();\n    return this.page.hasError && this.isComplete;\n  }\n\n  public get canNavigate(): boolean {\n    this.pageGuard();\n    return this.pageCollection.previousPageIsCompleted(this.page);\n  }\n\n  click(): void {\n    this.pageGuard();\n\n    // if we click on our own stepnav or a disabled stepnav, we don't want to do anything\n    if (this.isDisabled || this.isCurrent) {\n      return;\n    }\n\n    this.navService.goTo(this.page);\n  }\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrAlertModule } from '../emphasis/alert/alert.module';\nimport { ClrModalModule } from '../modal/modal.module';\n\nimport { ClrWizard } from './wizard';\nimport { ClrWizardButton } from './wizard-button';\nimport { ClrWizardCustomTags } from './wizard-custom-tags';\nimport { ClrWizardHeaderAction } from './wizard-header-action';\nimport { ClrWizardPage } from './wizard-page';\nimport { ClrWizardPageButtons } from './wizard-page-buttons';\nimport { ClrWizardPageHeaderActions } from './wizard-page-header-actions';\nimport { ClrWizardPageNavTitle } from './wizard-page-navtitle';\nimport { ClrWizardPageTitle } from './wizard-page-title';\nimport { ClrWizardStepnav } from './wizard-stepnav';\nimport { ClrWizardStepnavItem } from './wizard-stepnav-item';\n\nexport const CLR_WIZARD_DIRECTIVES: any[] = [\n  ClrWizard,\n  ClrWizardPage,\n  ClrWizardStepnav,\n  ClrWizardStepnavItem,\n  ClrWizardButton,\n  ClrWizardHeaderAction,\n  ClrWizardCustomTags,\n  ClrWizardPageTitle,\n  ClrWizardPageNavTitle,\n  ClrWizardPageButtons,\n  ClrWizardPageHeaderActions,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrModalModule, ClrAlertModule],\n  declarations: [CLR_WIZARD_DIRECTIVES],\n  exports: [CLR_WIZARD_DIRECTIVES],\n})\nexport class ClrWizardModule {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { AccordionStrategy } from '../enums/accordion-strategy.enum';\nimport { AccordionStatus } from '../enums/accordion-status.enum';\n\nlet accordionCount = 0;\n\nexport class AccordionPanelModel {\n  status = AccordionStatus.Inactive;\n  index: number = null;\n  disabled = false;\n  open = false;\n  templateId = `${this.id}-${this.accordionId}`;\n  constructor(public id: string, public accordionId: number | string) {}\n}\n\nexport class AccordionModel {\n  protected strategy = AccordionStrategy.Default;\n  protected accordionCount = accordionCount++;\n  protected _panels: { [id: string]: AccordionPanelModel } = {};\n\n  get panels(): AccordionPanelModel[] {\n    return Object.keys(this._panels).map(id => this._panels[id]);\n  }\n\n  setStrategy(strategy: AccordionStrategy) {\n    this.strategy = strategy;\n  }\n\n  updatePanelOrder(ids: string[]) {\n    ids.forEach((id, index) => (this._panels[id].index = index));\n    this.removeOldPanels(ids);\n  }\n\n  addPanel(id: string, open = false) {\n    this._panels[id] = new AccordionPanelModel(id, this.accordionCount);\n    this._panels[id].open = open;\n  }\n\n  togglePanel(panelId: string, open?: boolean) {\n    const panelIsOpen = this._panels[panelId].open;\n    if (this.strategy === AccordionStrategy.Default) {\n      this.closeAllPanels();\n    }\n\n    this._panels[panelId].open = open !== undefined ? open : !panelIsOpen;\n  }\n\n  disablePanel(panelId: string, disabled: boolean) {\n    this._panels[panelId].disabled = disabled;\n  }\n\n  private closeAllPanels() {\n    this.panels.forEach(panel => (this._panels[panel.id].open = false));\n  }\n\n  private removeOldPanels(ids: string[]) {\n    this.panels\n      .filter(panel => ids.find(id => id === panel.id) === undefined)\n      .forEach(panel => delete this._panels[panel.id]);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AccordionModel, AccordionPanelModel } from '../models/accordion.model';\nimport { AccordionStrategy } from '../enums/accordion-strategy.enum';\n\n@Injectable()\nexport class AccordionService {\n  protected accordion = new AccordionModel();\n  protected readonly _panelsChanges = new BehaviorSubject<AccordionPanelModel[]>(this.accordion.panels);\n\n  getPanelChanges(panelId: string): Observable<AccordionPanelModel> {\n    return this._panelsChanges.pipe(map(panels => panels.find(s => s.id === panelId)));\n  }\n\n  setStrategy(strategy: AccordionStrategy) {\n    this.accordion.setStrategy(strategy);\n  }\n\n  addPanel(panelId: string, open = false) {\n    this.accordion.addPanel(panelId, open);\n    this.emitUpdatedPanels();\n  }\n\n  togglePanel(panelId: string, open?: boolean) {\n    this.accordion.togglePanel(panelId, open);\n    this.emitUpdatedPanels();\n  }\n\n  disablePanel(panelId: string, disabled?: boolean) {\n    this.accordion.disablePanel(panelId, disabled);\n    this.emitUpdatedPanels();\n  }\n\n  updatePanelOrder(ids: string[]) {\n    this.accordion.updatePanelOrder(ids);\n    this.emitUpdatedPanels();\n  }\n\n  protected emitUpdatedPanels() {\n    this._panelsChanges.next(this.accordion.panels);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { animate, style, transition, trigger } from '@angular/animations';\n\nimport { defaultAnimationTiming } from '../../utils/animations/constants';\n\nexport const panelAnimation = [\n  trigger('skipInitialRender', [transition(':enter', [])]),\n  trigger('toggle', [\n    transition('void => *', [\n      style({ display: 'block', height: 0 }),\n      animate(defaultAnimationTiming, style({ height: '*' })),\n    ]),\n  ]),\n];\n\nexport const stepAnimation = [\n  trigger('skipInitialRender', [transition(':enter', [])]),\n  trigger('toggle', [\n    transition('void => *', [\n      style({ display: 'block', height: 0 }),\n      animate(defaultAnimationTiming, style({ height: '*' })),\n    ]),\n    transition('* => void', [\n      style({ display: 'block' }),\n      animate(defaultAnimationTiming, style({ height: 0, display: 'none' })),\n    ]),\n  ]),\n];\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport const defaultAnimationTiming = '0.2s ease-in-out';\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-description, clr-step-description',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion-description]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionDescription {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  EventEmitter,\n  Output,\n  SimpleChanges,\n  Inject,\n  OnInit,\n  OnChanges,\n  ContentChildren,\n  QueryList,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../utils/id-generator/id-generator.service';\nimport { ClrCommonStringsService } from '../utils/i18n/common-strings.service';\nimport { AccordionService } from './providers/accordion.service';\nimport { AccordionStatus } from './enums/accordion-status.enum';\nimport { panelAnimation } from './utils/animation';\nimport { IfExpandService } from '../utils/conditional/if-expanded.service';\nimport { AccordionPanelModel } from './models/accordion.model';\nimport { ClrAccordionDescription } from './accordion-description';\n\n@Component({\n  selector: 'clr-accordion-panel',\n  templateUrl: './accordion-panel.html',\n  host: { '[class.clr-accordion-panel]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: panelAnimation,\n  providers: [IfExpandService, UNIQUE_ID_PROVIDER],\n})\nexport class ClrAccordionPanel implements OnInit, OnChanges {\n  @Input('clrAccordionPanelDisabled') disabled = false;\n  @Input('clrAccordionPanelOpen') panelOpen = false;\n  @Output('clrAccordionPanelOpenChange') panelOpenChange = new EventEmitter<boolean>();\n  @ContentChildren(ClrAccordionDescription) accordionDescription: QueryList<ClrAccordionDescription>;\n\n  panel: Observable<AccordionPanelModel>;\n  readonly AccordionStatus = AccordionStatus;\n  isAccordion = true;\n\n  constructor(\n    public commonStrings: ClrCommonStringsService,\n    private accordionService: AccordionService,\n    private ifExpandService: IfExpandService,\n    @Inject(UNIQUE_ID) public id: string\n  ) {}\n\n  ngOnInit() {\n    this.panel = this.accordionService.getPanelChanges(this.id).pipe(tap(panel => this.emitPanelChange(panel)));\n    this.accordionService.addPanel(this.id, this.panelOpen);\n    this.accordionService.togglePanel(this.id, this.panelOpen);\n    this.accordionService.disablePanel(this.id, this.disabled);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.panel && changes.panelOpen && changes.panelOpen.currentValue !== changes.panelOpen.previousValue) {\n      this.accordionService.togglePanel(this.id, changes.panelOpen.currentValue);\n    }\n\n    if (this.panel && changes.disabled && changes.disabled.currentValue !== changes.disabled.previousValue) {\n      this.accordionService.disablePanel(this.id, changes.disabled.currentValue);\n    }\n  }\n\n  togglePanel() {\n    this.accordionService.togglePanel(this.id);\n  }\n\n  collapsePanelOnAnimationDone(panel: AccordionPanelModel) {\n    if (!panel.open) {\n      this.ifExpandService.expanded = false;\n    }\n  }\n\n  getPanelStateClasses(panel: AccordionPanelModel) {\n    return `clr-accordion-panel-${panel.status} ${panel.open ? 'clr-accordion-panel-open' : ''}`;\n  }\n\n  getAccordionContentId(id: string) {\n    return `clr-accordion-content-${id}'`;\n  }\n\n  getAccordionHeaderId(id: string) {\n    return `clr-accordion-header-${id}`;\n  }\n\n  private emitPanelChange(panel: AccordionPanelModel) {\n    this.panelOpenChange.emit(panel.open);\n\n    if (panel.open) {\n      this.ifExpandService.expanded = true;\n    }\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-title, clr-step-title',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion-title]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionTitle {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  QueryList,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnInit,\n  OnChanges,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { startWith } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { AccordionService } from './providers/accordion.service';\nimport { ClrAccordionPanel } from './accordion-panel';\nimport { AccordionStrategy } from './enums/accordion-strategy.enum';\n\n@Component({\n  selector: 'clr-accordion',\n  template: `<ng-content></ng-content>`,\n  host: { '[class.clr-accordion]': 'true' },\n  providers: [AccordionService],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordion implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input('clrAccordionMultiPanel') multiPanel = false;\n  @ContentChildren(ClrAccordionPanel, { descendants: true })\n  panels: QueryList<ClrAccordionPanel>;\n  subscriptions: Subscription[] = [];\n\n  constructor(private accordionService: AccordionService) {}\n\n  ngOnInit() {\n    this.setAccordionStrategy();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.multiPanel.currentValue !== changes.multiPanel.previousValue) {\n      this.setAccordionStrategy();\n    }\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(this.listenForDOMChanges());\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private setAccordionStrategy() {\n    const strategy = this.multiPanel ? AccordionStrategy.Multi : AccordionStrategy.Default;\n    this.accordionService.setStrategy(strategy);\n  }\n\n  private listenForDOMChanges() {\n    return this.panels.changes\n      .pipe(startWith(this.panels))\n      .subscribe(panels => this.accordionService.updatePanelOrder(panels.toArray().map(p => p.id)));\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'clr-accordion-content, clr-step-content',\n  template: `<ng-content></ng-content>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrAccordionContent {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\nimport { WillyWonka } from '../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'clr-accordion' })\nexport class AccordionWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../utils/chocolate/oompa-loompa';\nimport { AccordionWillyWonka } from './accordion-willy-wonka';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\n\n@Directive({ selector: 'clr-accordion-panel' })\nexport class AccordionOompaLoompa extends OompaLoompa {\n  private expand: IfExpandService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: AccordionWillyWonka, ifExpandService: IfExpandService) {\n    if (!willyWonka) {\n      throw new Error('clr-accordion-panel should only be used inside of clr-accordion');\n    }\n    super(cdr, willyWonka);\n    this.expand = ifExpandService;\n  }\n\n  get flavor() {\n    return this.expand.expanded;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrAccordionPanel } from './accordion-panel';\nimport { ClrAccordionTitle } from './accordion-title';\nimport { ClrAccordionDescription } from './accordion-description';\nimport { ClrAccordion } from './accordion';\nimport { ClrAccordionContent } from './accordion-content';\nimport { AccordionOompaLoompa } from './chocolate/accordion-oompa-loompa';\nimport { AccordionWillyWonka } from './chocolate/accordion-willy-wonka';\n\nconst declarations = [\n  ClrAccordion,\n  ClrAccordionPanel,\n  ClrAccordionTitle,\n  ClrAccordionDescription,\n  ClrAccordionContent,\n  AccordionOompaLoompa,\n  AccordionWillyWonka,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule],\n  declarations: [...declarations],\n  exports: [...declarations],\n})\nexport class ClrAccordionModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { AccordionModel } from '../../models/accordion.model';\nimport { AccordionStatus } from '../../enums/accordion-status.enum';\n\nexport class StepperModel extends AccordionModel {\n  private stepperModelInitialize: boolean = false;\n\n  get allPanelsCompleted(): boolean {\n    return this.panels.length && this.getNumberOfIncompletePanels() === 0 && this.getNumberOfOpenPanels() === 0;\n  }\n\n  addPanel(id: string, open = false) {\n    super.addPanel(id, open);\n    this._panels[id].disabled = true;\n  }\n\n  updatePanelOrder(ids: string[]) {\n    super.updatePanelOrder(ids);\n    if (this.stepperModelInitialize === false) {\n      this.openFirstPanel();\n    }\n  }\n\n  togglePanel(panelId: string) {\n    if (this._panels[panelId].status === AccordionStatus.Complete) {\n      this._panels[panelId].open = !this._panels[panelId].open;\n    }\n  }\n\n  navigateToNextPanel(currentPanelId: string, currentPanelValid = true) {\n    if (currentPanelValid) {\n      this.completePanel(currentPanelId);\n      this.openNextPanel(this._panels[currentPanelId].id);\n    } else {\n      this.setPanelError(currentPanelId);\n    }\n  }\n\n  overrideInitialPanel(panelId: string) {\n    this.panels.filter(() => this._panels[panelId] !== undefined).forEach(panel => {\n      if (panel.index < this._panels[panelId].index) {\n        this.completePanel(panel.id);\n      } else if (panel.id === panelId) {\n        this._panels[panel.id].open = true;\n      } else {\n        this._panels[panel.id].open = false;\n      }\n    });\n  }\n\n  setPanelsWithErrors(ids: string[]) {\n    ids.forEach(id => this.setPanelError(id));\n  }\n\n  resetPanels() {\n    /* return stepper to initialize state */\n    this.stepperModelInitialize = false;\n    this.panels.forEach(p => this.resetPanel(p.id));\n    this.openFirstPanel();\n  }\n\n  getNextPanel(currentPanelId: string) {\n    return this.panels.find(s => s.index === this._panels[currentPanelId].index + 1);\n  }\n\n  private resetAllFuturePanels(panelId: string) {\n    this.panels.filter(panel => panel.index >= this._panels[panelId].index).forEach(panel => this.resetPanel(panel.id));\n  }\n\n  private resetPanel(panelId: string) {\n    this._panels[panelId].status = AccordionStatus.Inactive;\n    this._panels[panelId].open = false;\n    this._panels[panelId].disabled = true;\n  }\n\n  private openFirstPanel() {\n    const firstPanel = this.getFirstPanel();\n    this._panels[firstPanel.id].open = true;\n    this._panels[firstPanel.id].disabled = true;\n    this.stepperModelInitialize = true;\n  }\n\n  private completePanel(panelId: string) {\n    this._panels[panelId].status = AccordionStatus.Complete;\n    this._panels[panelId].disabled = false;\n    this._panels[panelId].open = false;\n  }\n\n  private openNextPanel(currentPanelId: string) {\n    const nextPanel = this.getNextPanel(currentPanelId);\n\n    if (nextPanel) {\n      this.resetAllFuturePanels(nextPanel.id);\n      this._panels[nextPanel.id].open = true;\n      this._panels[nextPanel.id].disabled = true;\n    }\n  }\n\n  private setPanelError(panelId: string) {\n    this.resetAllFuturePanels(panelId);\n    this._panels[panelId].open = true;\n    this._panels[panelId].status = AccordionStatus.Error;\n  }\n\n  private getFirstPanel() {\n    return this.panels.find(panel => panel.index === 0);\n  }\n\n  private getNumberOfIncompletePanels() {\n    return this.panels.reduce((prev, next) => (next.status !== AccordionStatus.Complete ? prev + 1 : prev), 0);\n  }\n\n  private getNumberOfOpenPanels() {\n    return this.panels.reduce((prev, next) => (next.open !== false ? prev + 1 : prev), 0);\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Injectable } from '@angular/core';\nimport { map, distinctUntilChanged } from 'rxjs/operators';\nimport { Observable, Subject } from 'rxjs';\n\nimport { AccordionService } from './../../providers/accordion.service';\nimport { StepperModel } from '../models/stepper.model';\n\n@Injectable()\nexport class StepperService extends AccordionService {\n  readonly panelsCompleted = this.getAllCompletedPanelChanges();\n  protected accordion = new StepperModel();\n\n  private _activeStepChanges = new Subject<string>();\n  readonly activeStep = this._activeStepChanges.asObservable();\n\n  resetPanels() {\n    this.accordion.resetPanels();\n    this.emitUpdatedPanels();\n  }\n\n  setPanelsWithErrors(ids: string[]) {\n    this.accordion.setPanelsWithErrors(ids);\n    this.emitUpdatedPanels();\n  }\n\n  navigateToNextPanel(currentPanelId: string, currentPanelValid = true) {\n    this.accordion.navigateToNextPanel(currentPanelId, currentPanelValid);\n    this.updateNextStep(currentPanelId, currentPanelValid);\n    this.emitUpdatedPanels();\n  }\n\n  overrideInitialPanel(panelId: string) {\n    this.accordion.overrideInitialPanel(panelId);\n    this.emitUpdatedPanels();\n  }\n\n  private updateNextStep(currentPanelId: string, currentPanelValid: boolean) {\n    const nextPanel = this.accordion.getNextPanel(currentPanelId);\n\n    if (currentPanelValid && nextPanel) {\n      this._activeStepChanges.next(nextPanel.id);\n    } else if (currentPanelValid) {\n      this._activeStepChanges.next(currentPanelId);\n    }\n  }\n\n  private getAllCompletedPanelChanges(): Observable<boolean> {\n    return this._panelsChanges.pipe(map(() => this.accordion.allPanelsCompleted), distinctUntilChanged());\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive, HostListener, HostBinding, Input, OnInit } from '@angular/core';\n\nimport { StepperService } from './providers/stepper.service';\nimport { ClrStepperPanel } from './stepper-panel';\n\nexport enum ClrStepButtonType {\n  Next = 'next',\n  Submit = 'submit',\n}\n\n@Directive({\n  selector: '[clrStepButton]',\n  host: {\n    '[class.clr-step-button]': 'true',\n    '[class.btn]': 'true',\n    '[type]': \"'button'\",\n  },\n})\nexport class ClrStepButton implements OnInit {\n  @Input('clrStepButton') type: ClrStepButtonType | string = ClrStepButtonType.Next;\n  @HostBinding('class.btn-primary') submitButton = false;\n\n  constructor(private clrStep: ClrStepperPanel, private stepperService: StepperService) {}\n\n  ngOnInit() {\n    this.submitButton = this.type === ClrStepButtonType.Submit;\n  }\n\n  @HostListener('click')\n  navigateToNextPanel() {\n    this.stepperService.navigateToNextPanel(this.clrStep.id, this.clrStep.formGroup.valid);\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Optional,\n  Inject,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { FormGroupName, NgModelGroup } from '@angular/forms';\nimport { tap, filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { UNIQUE_ID_PROVIDER, UNIQUE_ID } from '../../utils/id-generator/id-generator.service';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { StepperService } from './providers/stepper.service';\nimport { stepAnimation } from '../utils/animation';\nimport { triggerAllFormControlValidation } from '../../utils/forms/validation';\nimport { IfExpandService } from '../../utils/conditional/if-expanded.service';\nimport { AccordionPanelModel } from '../models/accordion.model';\nimport { AccordionStatus } from '../enums/accordion-status.enum';\nimport { ClrAccordionPanel } from '../accordion-panel';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'clr-stepper-panel',\n  templateUrl: './../accordion-panel.html',\n  host: { '[class.clr-accordion-panel]': 'true' },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: stepAnimation,\n  providers: [IfExpandService, UNIQUE_ID_PROVIDER],\n})\nexport class ClrStepperPanel extends ClrAccordionPanel implements OnInit {\n  isAccordion = false;\n\n  @ViewChild('headerButton') headerButton: ElementRef;\n  private subscriptions: Subscription[] = [];\n\n  get formGroup() {\n    return this.formGroupName ? this.formGroupName.control : this.ngModelGroup.control;\n  }\n\n  get id(): string {\n    return this.formGroupName ? this.formGroupName.name.toString() : this.ngModelGroup.name;\n  }\n\n  set id(_value: string) {} // overriding parent id required empty setter\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    public commonStrings: ClrCommonStringsService,\n    @Optional() private formGroupName: FormGroupName,\n    @Optional() private ngModelGroup: NgModelGroup,\n    private stepperService: StepperService,\n    ifExpandService: IfExpandService,\n    @Inject(UNIQUE_ID) id: string\n  ) {\n    super(commonStrings, stepperService, ifExpandService, id);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.panel = this.panel.pipe(tap(panel => this.triggerAllFormControlValidationIfError(panel)));\n    this.stepperService.disablePanel(this.id, true);\n    this.listenToFocusChanges();\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenToFocusChanges() {\n    this.subscriptions.push(\n      this.stepperService.activeStep\n        .pipe(filter(panelId => isPlatformBrowser(this.platformId) && panelId === this.id))\n        .subscribe(() => this.headerButton.nativeElement.focus())\n    );\n  }\n\n  private triggerAllFormControlValidationIfError(panel: AccordionPanelModel) {\n    if (panel.status === AccordionStatus.Error) {\n      triggerAllFormControlValidation(this.formGroup);\n    }\n  }\n}\n","/*\n* Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n* This software is released under MIT license.\n* The full license information can be found in LICENSE in the root directory of this project.\n*/\n\nimport { FormGroup, FormControl } from '@angular/forms';\n\nexport function triggerAllFormControlValidation(formGroup: FormGroup) {\n  Object.keys(formGroup.controls).forEach(field => {\n    const control = formGroup.get(field);\n    if (control instanceof FormControl) {\n      control.markAsTouched();\n      control.markAsDirty();\n      control.updateValueAndValidity();\n    } else if (control instanceof FormGroup) {\n      triggerAllFormControlValidation(control);\n    }\n  });\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ClrTimelineLayout {\n  HORIZONTAL = 'horizontal',\n  VERTICAL = 'vertical',\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nexport enum ClrTimelineStepState {\n  NOT_STARTED = 'not-started',\n  CURRENT = 'current',\n  PROCESSING = 'processing',\n  SUCCESS = 'success',\n  ERROR = 'error',\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {\n  Component,\n  ContentChildren,\n  QueryList,\n  Optional,\n  ChangeDetectionStrategy,\n  Input,\n  SimpleChanges,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  OnChanges,\n} from '@angular/core';\nimport { FormGroupDirective, NgForm } from '@angular/forms';\nimport { startWith, filter } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\n\nimport { StepperService } from './providers/stepper.service';\nimport { AccordionService } from '../providers/accordion.service';\nimport { ClrStepperPanel } from './stepper-panel';\n\n@Component({\n  selector: 'form[clrStepper]',\n  template: `<ng-content></ng-content>`,\n  host: {\n    '[class.clr-accordion]': 'true',\n    '[class.clr-stepper-forms]': 'true',\n  },\n  providers: [StepperService, { provide: AccordionService, useExisting: StepperService }],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ClrStepper implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input('clrInitialStep') initialPanel: string;\n  @ContentChildren(ClrStepperPanel, { descendants: true })\n  panels: QueryList<ClrStepperPanel>;\n  subscriptions: Subscription[] = [];\n  form: FormGroupDirective | NgForm;\n\n  constructor(\n    @Optional() private formGroup: FormGroupDirective,\n    @Optional() private ngForm: NgForm,\n    private stepperService: StepperService\n  ) {}\n\n  ngOnInit() {\n    if (!this.formGroup && !this.ngForm) {\n      throw new Error('To use stepper a Reactive or Template Form is required.');\n    }\n\n    this.form = this.formGroup ? this.formGroup : this.ngForm;\n    this.subscriptions.push(this.listenForPanelsCompleted());\n    this.subscriptions.push(this.listenForFormResetChanges());\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.initialPanel.currentValue !== changes.initialPanel.previousValue) {\n      this.stepperService.overrideInitialPanel(this.initialPanel);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.subscriptions.push(this.listenForDOMChanges());\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(s => s.unsubscribe());\n  }\n\n  private listenForFormResetChanges() {\n    return this.form.statusChanges\n      .pipe(filter(() => this.form.pristine)) // https://github.com/angular/angular/issues/10887\n      .subscribe(() => this.stepperService.resetPanels());\n  }\n\n  private listenForPanelsCompleted() {\n    return this.stepperService.panelsCompleted.subscribe(panelsCompleted => {\n      if (panelsCompleted && this.form.valid) {\n        this.form.ngSubmit.emit();\n      } else if (!this.form.valid && this.form.touched) {\n        this.setPanelsWithFormErrors();\n      }\n    });\n  }\n\n  private setPanelsWithFormErrors() {\n    const panelsWithErrors = this.panels.reduce((panels, p) => (p.formGroup.invalid ? [...panels, p.id] : panels), []);\n    this.stepperService.setPanelsWithErrors(panelsWithErrors);\n  }\n\n  private listenForDOMChanges() {\n    return this.panels.changes.pipe(startWith(this.panels)).subscribe(panels => {\n      this.stepperService.updatePanelOrder(panels.toArray().map(p => p.id));\n\n      if (this.initialPanel) {\n        this.stepperService.overrideInitialPanel(this.initialPanel);\n      }\n    });\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Directive } from '@angular/core';\n\nimport { WillyWonka } from '../../../utils/chocolate/willy-wonka';\n\n@Directive({ selector: 'form[clrStepper]' })\nexport class StepperWillyWonka extends WillyWonka {}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ChangeDetectorRef, Directive, Optional } from '@angular/core';\n\nimport { OompaLoompa } from '../../../utils/chocolate/oompa-loompa';\nimport { StepperWillyWonka } from './stepper-willy-wonka';\nimport { IfExpandService } from '../../../utils/conditional/if-expanded.service';\n\n@Directive({ selector: 'clr-stepper-panel, [clrStepButton]' })\nexport class StepperOompaLoompa extends OompaLoompa {\n  private expand: IfExpandService;\n\n  constructor(cdr: ChangeDetectorRef, @Optional() willyWonka: StepperWillyWonka, ifExpandService: IfExpandService) {\n    if (!willyWonka) {\n      throw new Error('clr-stepper-panel should only be used inside of clrStepper');\n    }\n    super(cdr, willyWonka);\n    this.expand = ifExpandService;\n  }\n\n  get flavor() {\n    return this.expand.expanded;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { ClrAccordionModule } from '../accordion.module';\nimport { ClrIconModule } from '../../icon/icon.module';\nimport { ClrStepButton } from './../stepper/step-button';\nimport { ClrStepper } from './../stepper/stepper';\nimport { ClrStepperPanel } from './stepper-panel';\nimport { StepperOompaLoompa } from './chocolate/stepper-oompa-loompa';\nimport { StepperWillyWonka } from './chocolate/stepper-willy-wonka';\n\nconst declarations = [ClrStepper, ClrStepButton, ClrStepperPanel, StepperOompaLoompa, StepperWillyWonka];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrAccordionModule],\n  declarations: [...declarations],\n  exports: [...declarations, ClrAccordionModule],\n})\nexport class ClrStepperModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { Component, Input, HostBinding } from '@angular/core';\nimport { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';\nimport { ClrAriaLiveService, ClrAriaLivePoliteness } from '../../utils/a11y/aria-live.service';\n\n@Component({\n  providers: [ClrAriaLiveService],\n  selector: 'clr-progress-bar',\n  template: `\n    <progress [id]=\"id\" [attr.max]=\"max\" [attr.value]=\"value\" [attr.data-displayval]=\"displayValue\"></progress>\n    <span *ngIf=\"displayAriaLive()\">{{ displayValue }}</span>\n  `,\n})\nexport class ClrProgressBar {\n  constructor(private ariaLiveService: ClrAriaLiveService) {}\n\n  /**\n   * Handle component ID\n   */\n  private _ID: string;\n  @HostBinding('attr.id') externalId: string = '';\n  @Input()\n  set id(value: string) {\n    this._ID = value;\n    this.externalId = null;\n  }\n  get id() {\n    return this._ID;\n  }\n\n  // Progress\n  @Input('clrMax') max: number = 100;\n  @Input('clrDisplayval') displayval: string;\n\n  private _value: number = 0;\n  @Input('clrValue')\n  get value() {\n    return this._value;\n  }\n\n  set value(value) {\n    this._value = value;\n    if (this.displayAriaLive()) {\n      this.ariaLiveService.announce(this.displayValue, this.ariaLive);\n    }\n  }\n\n  // Styles\n  @HostBinding('class.progress')\n  get progressClass() {\n    return true;\n  }\n\n  private _labeled: boolean;\n  @HostBinding('class.labeled')\n  get labeledClass() {\n    return this._labeled;\n  }\n\n  @Input('clrLabeled')\n  set clrLabeled(value: boolean | string) {\n    this._labeled = isBooleanAttributeSet(value);\n  }\n\n  private _fade: boolean;\n  @HostBinding('class.progress-fade')\n  get fadeClass() {\n    return this._fade;\n  }\n\n  @Input('clrFade')\n  set clrFade(value: boolean | string) {\n    this._fade = isBooleanAttributeSet(value);\n  }\n\n  private _loop: boolean;\n  @HostBinding('class.loop')\n  get loopClass() {\n    return this._loop;\n  }\n\n  @Input('clrLoop')\n  set clrLoop(value: boolean | string) {\n    this._loop = isBooleanAttributeSet(value);\n  }\n\n  private _success: boolean;\n  @HostBinding('class.success')\n  get successClass() {\n    return this._success;\n  }\n\n  /** @deprecated since 2.0, remove in 4.0 */\n  @Input('clrSuccess')\n  set clrSuccess(value: boolean | string) {\n    this._success = isBooleanAttributeSet(value);\n  }\n\n  private _danger: boolean;\n  @HostBinding('class.danger')\n  get dangerClass() {\n    return this._danger;\n  }\n\n  /** @deprecated since 2.0, remove in 4.0 */\n  @Input('clrDanger')\n  set clrDanger(value: boolean | string) {\n    this._danger = isBooleanAttributeSet(value);\n  }\n\n  private _flash: boolean;\n  @HostBinding('class.flash')\n  get flashClass() {\n    return this._flash;\n  }\n\n  @Input('clrFlash')\n  set clrFlash(value: boolean | string) {\n    this._flash = isBooleanAttributeSet(value);\n  }\n\n  private _flashDanger: boolean;\n  @HostBinding('class.flash-danger')\n  get flashDangerClass() {\n    return this._flashDanger;\n  }\n\n  /** @deprecated since 2.0, remove in 4.0 */\n  @Input('clrFlashDanger')\n  set clrFlashDanger(value: boolean | string) {\n    this._flashDanger = isBooleanAttributeSet(value);\n  }\n\n  // Aria Live\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrAssertive') assertive: boolean;\n  /** @deprecated since 3.0, remove in 4.0 */\n  @Input('clrOff') off: boolean;\n\n  /**\n   * Make sure that we always will have something that is readable\n   * for the screen reader\n   */\n  get displayValue() {\n    if (this.displayval) {\n      return this.displayval;\n    }\n    return `${this.value}%`;\n  }\n\n  /**\n   * Display aria-live only when there is value and it's not 0 or equal to the max value\n   */\n  displayAriaLive() {\n    return (this.value !== undefined || this.value !== 0) && this.value !== this.max;\n  }\n\n  get ariaLive(): ClrAriaLivePoliteness {\n    if (isBooleanAttributeSet(this.assertive)) {\n      return ClrAriaLivePoliteness.assertive;\n    }\n    if (isBooleanAttributeSet(this.off)) {\n      return ClrAriaLivePoliteness.off;\n    }\n    return ClrAriaLivePoliteness.polite;\n  }\n}\n","/*\n * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\nimport { ClrProgressBar } from './progress-bar';\n\nexport const CLR_PROGRESS_BAR_DIRECTIVES: Type<any>[] = [ClrProgressBar];\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [CLR_PROGRESS_BAR_DIRECTIVES],\n  exports: [CLR_PROGRESS_BAR_DIRECTIVES],\n})\nexport class ClrProgressBarModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { ClrTimelineStepState } from '../enums/timeline-step-state.enum';\nimport { IconAttributes } from '../interface/icon-attribute.iterface';\nimport { ClrCommonStringsService } from '../../utils/i18n/common-strings.service';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TimelineIconAttributeService {\n  private attributeMap: Map<ClrTimelineStepState, IconAttributes> = new Map<ClrTimelineStepState, IconAttributes>();\n\n  constructor(commonStrings: ClrCommonStringsService) {\n    this.attributeMap.set(ClrTimelineStepState.NOT_STARTED, {\n      iconShape: 'circle',\n      ariaLabel: commonStrings.keys.timelineStepNotStarted,\n    });\n    this.attributeMap.set(ClrTimelineStepState.CURRENT, {\n      iconShape: 'dot-circle',\n      ariaLabel: commonStrings.keys.timelineStepCurrent,\n    });\n    this.attributeMap.set(ClrTimelineStepState.PROCESSING, {\n      iconShape: undefined,\n      ariaLabel: commonStrings.keys.timelineStepProcessing,\n    });\n    this.attributeMap.set(ClrTimelineStepState.SUCCESS, {\n      iconShape: 'success-standard',\n      ariaLabel: commonStrings.keys.timelineStepSuccess,\n    });\n    this.attributeMap.set(ClrTimelineStepState.ERROR, {\n      iconShape: 'error-standard',\n      ariaLabel: commonStrings.keys.timelineStepError,\n    });\n  }\n\n  public getAriaLabel(step: ClrTimelineStepState): string {\n    return this.attributeMap.get(step).ariaLabel;\n  }\n\n  public getIconShape(step: ClrTimelineStepState): string {\n    return this.attributeMap.get(step).iconShape;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, Input, HostBinding } from '@angular/core';\n\nimport { ClrTimelineLayout } from './enums/timeline-layout.enum';\nimport { TimelineIconAttributeService } from './providers/timeline-icon-attribute.service';\n\n@Component({\n  selector: 'clr-timeline',\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: { '[class.clr-timeline]': 'true' },\n  providers: [TimelineIconAttributeService],\n})\nexport class ClrTimeline {\n  @Input('clrLayout') layout: ClrTimelineLayout = ClrTimelineLayout.HORIZONTAL;\n\n  @HostBinding('class.clr-timeline-vertical')\n  get isVertical(): boolean {\n    return this.layout === ClrTimelineLayout.VERTICAL;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n/**\n * Note: Why does this component have aria-hidden attribute?\n *\n * tl;dr: we want screen readers to ignore this element when its reading out to blind users.\n *\n * In order to make a timeline step accessible to screen readers we need the title read out before the\n * icon. In order to do this, ClrTimeLine step has a ContentChild that queries for the ClrTimelineStepTitle and\n * then adds the projected text into a .clr-sr-only element that is a sibling element to the icon. See the\n * ClrTimlineStep template for the DOM structure.\n */\n@Component({\n  selector: 'clr-timeline-step-title',\n  template: `\n        <ng-content></ng-content>\n    `,\n  host: { '[class.clr-timeline-step-title]': 'true', '[attr.aria-hidden]': 'true' },\n})\nexport class ClrTimelineStepTitle {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component, ContentChild, ElementRef, Inject, Input, PLATFORM_ID } from '@angular/core';\n\nimport { ClrTimelineStepState } from './enums/timeline-step-state.enum';\nimport { TimelineIconAttributeService } from './providers/timeline-icon-attribute.service';\nimport { ClrTimelineStepTitle } from './timeline-step-title';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Component({\n  selector: 'clr-timeline-step',\n  template: `\n        <ng-content select=\"clr-timeline-step-header\"></ng-content>\n        <span class=\"clr-sr-only\">{{stepTitleText}}</span>\n        <ng-container *ngIf=\"!isProcessing; else processing\">\n            <clr-icon\n                    [attr.shape]=\"iconShape\"\n                    [attr.aria-label]=\"iconAriaLabel\"\n                    [attr.aria-current]=\"iconAriaCurrent\">\n            </clr-icon>\n        </ng-container>\n        <div class=\"clr-timeline-step-body\">\n            <ng-content select=\"clr-timeline-step-title\"></ng-content>\n            <ng-content select=\"clr-timeline-step-description\"></ng-content>\n        </div>\n\n        <ng-template #processing>\n            <clr-spinner clrMedium [attr.aria-label]=\"iconAriaLabel\"></clr-spinner>\n        </ng-template>\n    `,\n  host: { '[class.clr-timeline-step]': 'true' },\n})\nexport class ClrTimelineStep {\n  @Input('clrState') state: ClrTimelineStepState = ClrTimelineStepState.NOT_STARTED;\n\n  public stepTitleText: string;\n  @ContentChild(ClrTimelineStepTitle, { read: ElementRef })\n  stepTitle: ElementRef;\n\n  constructor(\n    private iconAttributeService: TimelineIconAttributeService,\n    @Inject(PLATFORM_ID) private platformId: Object\n  ) {}\n\n  ngAfterContentInit() {\n    if (this.stepTitle && isPlatformBrowser(this.platformId)) {\n      this.stepTitleText = this.stepTitle.nativeElement.innerText;\n    }\n  }\n\n  get iconAriaCurrent(): boolean {\n    return this.state === ClrTimelineStepState.CURRENT;\n  }\n\n  get iconAriaLabel(): string {\n    return this.iconAttributeService.getAriaLabel(this.state);\n  }\n\n  get iconShape(): string {\n    return this.iconAttributeService.getIconShape(this.state);\n  }\n\n  get isProcessing(): boolean {\n    return this.state === ClrTimelineStepState.PROCESSING;\n  }\n}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-timeline-step-description',\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: { '[class.clr-timeline-step-description]': 'true' },\n})\nexport class ClrTimelineStepDescription {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'clr-timeline-step-header',\n  template: `\n    <ng-content></ng-content>\n  `,\n  host: { '[class.clr-timeline-step-header]': 'true' },\n})\nexport class ClrTimelineStepHeader {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, Type } from '@angular/core';\n\nimport { ClrIconModule } from '../icon/icon.module';\nimport { ClrSpinnerModule } from '../progress/spinner/spinner.module';\n\nimport { ClrTimeline } from './timeline';\nimport { ClrTimelineStep } from './timeline-step';\nimport { ClrTimelineStepDescription } from './timeline-step-description';\nimport { ClrTimelineStepHeader } from './timeline-step-header';\nimport { ClrTimelineStepTitle } from './timeline-step-title';\n\nconst CLR_TIMELINE_DIRECTIVES: Type<any>[] = [\n  ClrTimeline,\n  ClrTimelineStep,\n  ClrTimelineStepDescription,\n  ClrTimelineStepHeader,\n  ClrTimelineStepTitle,\n];\n\n@NgModule({\n  imports: [CommonModule, ClrIconModule, ClrSpinnerModule],\n  exports: [...CLR_TIMELINE_DIRECTIVES, ClrIconModule, ClrSpinnerModule],\n  declarations: [CLR_TIMELINE_DIRECTIVES],\n})\nexport class ClrTimelineModule {}\n","/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { NgModule } from '@angular/core';\n\nimport { ClrButtonModule } from './button/button.module';\nimport { ClrDataModule } from './data/data.module';\nimport { ClrDragAndDropModule } from './utils/drag-and-drop/drag-and-drop.module';\nimport { ClrEmphasisModule } from './emphasis/emphasis.module';\nimport { ClrFormsModule } from './forms/forms.module';\nimport { ClrIconModule } from './icon/icon.module';\nimport { ClrLayoutModule } from './layout/layout.module';\nimport { ClrModalModule } from './modal/modal.module';\nimport { ClrPopoverModule } from './popover/popover.module';\nimport { ClrConditionalModule } from './utils/conditional/conditional.module';\nimport { ClrFocusOnViewInitModule } from './utils/focus/focus-on-view-init/focus-on-view-init.module';\nimport { ClrFocusTrapModule } from './utils/focus-trap/focus-trap.module';\nimport { ClrLoadingModule } from './utils/loading/loading.module';\nimport { ClrWizardModule } from './wizard/wizard.module';\nimport { ClrStepperModule } from './accordion/stepper/stepper.module';\nimport { ClrSpinnerModule } from './progress/spinner/spinner.module';\nimport { ClrProgressBarModule } from './progress/progress-bars/progress-bar.module';\nimport { ClrPopoverModuleNext } from './utils/popover/popover.module';\nimport { ClrTimelineModule } from './timeline/timeline.module';\n\n@NgModule({\n  exports: [\n    ClrEmphasisModule,\n    ClrDataModule,\n    ClrIconModule,\n    ClrModalModule,\n    ClrLoadingModule,\n    ClrConditionalModule,\n    ClrFocusTrapModule,\n    ClrFocusOnViewInitModule,\n    ClrButtonModule,\n    ClrFormsModule,\n    ClrLayoutModule,\n    ClrPopoverModule,\n    ClrWizardModule,\n    ClrDragAndDropModule,\n    ClrStepperModule,\n    ClrSpinnerModule,\n    ClrProgressBarModule,\n    ClrPopoverModuleNext,\n    ClrTimelineModule,\n  ],\n})\nexport class ClarityModule {}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nexport const CLR_MENU_POSITIONS: string[] = [\n  'bottom-left',\n  'bottom-right',\n  'top-left',\n  'top-right',\n  'left-bottom',\n  'left-top',\n  'right-bottom',\n  'right-top',\n];\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, state, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function collapse(): AnimationMetadata[] {\n  'use strict';\n  return [\n    state('true', style({ height: 0, 'overflow-y': 'hidden' })),\n    transition('true => false', [animate(defaultAnimationTiming, style({ height: '*', 'overflow-y': 'hidden' }))]),\n    transition('false => true', [style({ height: '*', 'overflow-y': 'hidden' }), animate(defaultAnimationTiming)]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function fade(opacity: number = 1): AnimationMetadata[] {\n  return [\n    transition('void => *', [style({ opacity: 0 }), animate(defaultAnimationTiming, style({ opacity: opacity }))]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ opacity: 0 }))]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function fadeSlide(direction: string): AnimationMetadata[] {\n  let transform: string = null;\n  if (direction === 'up') {\n    transform = 'translate(0, 25%)';\n  } else if (direction === 'down') {\n    transform = 'translate(0, -25%)';\n  } else if (direction === 'left') {\n    transform = 'translate(25%, 0)';\n  } else if (direction === 'right') {\n    transform = 'translate(-25%, 0)';\n  } else {\n    throw new Error('Unknown direction ' + direction + ' for slide animation.');\n  }\n  return [\n    transition('void => *', [style({ opacity: 0, transform: transform }), animate(defaultAnimationTiming)]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ opacity: 0, transform: transform }))]),\n  ];\n}\n","/*\n * Copyright (c) 2016-2018 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\nimport { animate, AnimationMetadata, style, transition } from '@angular/animations';\n\nimport { defaultAnimationTiming } from './../constants';\n\nexport function slide(direction: string): AnimationMetadata[] {\n  let transform: string = null;\n  if (direction === 'up') {\n    transform = 'translate(0, 25%)';\n  } else if (direction === 'down') {\n    transform = 'translate(0, -25%)';\n  } else if (direction === 'left') {\n    transform = 'translate(25%, 0)';\n  } else if (direction === 'right') {\n    transform = 'translate(-25%, 0)';\n  } else {\n    throw new Error('Unknown direction ' + direction + ' for slide animation.');\n  }\n  return [\n    transition('void => *', [style({ transform: transform }), animate(defaultAnimationTiming)]),\n    transition('* => void', [animate(defaultAnimationTiming, style({ transform: transform }))]),\n  ];\n}\n"]}