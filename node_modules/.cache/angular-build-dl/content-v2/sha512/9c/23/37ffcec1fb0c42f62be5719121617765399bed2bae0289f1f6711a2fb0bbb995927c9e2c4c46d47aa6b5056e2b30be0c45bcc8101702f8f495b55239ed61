{"version":3,"sources":["./src/app/shared/city/city-module/city-routing.module.ts","./src/app/shared/city/city-module/city.module.ts","./src/app/shared/city/city.component.ts","./src/app/shared/city/city.component.html","./src/app/shared/date/date/date-routing.module.ts","./src/app/shared/date/date/date.module.ts","./src/app/shared/suggested-cities/suggested-cities-module/suggested-cities-routing.module.ts","./src/app/shared/suggested-cities/suggested-cities-module/suggested-cities.module.ts","./src/app/shared/suggested-cities/suggested-cities.component.ts","./src/app/shared/suggested-cities/suggested-cities.component.html","./src/app/shared/suggestedinterests/suggested-interest/suggested-interest-routing.module.ts","./src/app/shared/suggestedinterests/suggested-interest/suggested-interest.module.ts","./src/app/shared/suggestedinterests/suggestedinterests.component.ts","./src/app/shared/suggestedinterests/suggestedinterests.component.html"],"names":[],"mappings":"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","file":"default~components-news-news-module-news-module~components-search-search-module-search-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CityRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CityRoutingModule } from './city-routing.module';\nimport { CityComponent } from '../city.component';\n\n@NgModule({\n  declarations: [CityComponent],\n  imports: [\n    CommonModule,\n    CityRoutingModule\n  ],\n  exports: [CityComponent]\n})\nexport class CityModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.css']\n})\nexport class CityComponent implements OnInit {\n\n  constructor() { }\n  // receiving input data from other components\n  @Input() public city: string;\n  @Input() public cityColorFlag: boolean; // also if in future want to highlight city in listed cities\n  @Output() public notify = new EventEmitter();\n\n  ngOnInit() {\n  }\n  // user choice city fnc ....\n  selectedCity = (city: any) => {\n    this.notify.emit(city);\n  }\n\n}\n","<div (click)=\"selectedCity(city)\" style=\"cursor: pointer;font-family: Gilroy-Medium\">\n  {{city}}\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DateRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DateRoutingModule } from './date-routing.module';\nimport { DateComponent } from '../date.component';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\n// import { OwlDateTimeModule, OwlNativeDateTimeModule, OWL_DATE_TIME_FORMATS } from \"ng-pick-datetime\";\n\n// this for to remove time from date in owl date time formate\nexport const MY_NATIVE_FORMATS = {\n  fullPickerInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n  datePickerInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n  timePickerInput: { hour: 'numeric', minute: 'numeric' },\n  monthYearLabel: { year: 'numeric', month: 'short' },\n  dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n  monthYearA11yLabel: { year: 'numeric', month: 'long' },\n};\n\n@NgModule({\n  declarations: [DateComponent],\n  imports: [\n    CommonModule,\n    DateRoutingModule,\n    BsDatepickerModule.forRoot(),\n    NgbModule,\n    FormsModule,\n    // OwlDateTimeModule, OwlNativeDateTimeModule\n  ],\n  exports: [DateComponent],\n  // providers: [\n  //   { \n  //     provide: \n  //     OWL_DATE_TIME_FORMATS, useValue: MY_NATIVE_FORMATS \n  //   }]\n})\nexport class DateModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SuggestedCitiesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SuggestedCitiesRoutingModule } from './suggested-cities-routing.module';\nimport { SuggestedCitiesComponent } from '../suggested-cities.component';\nimport { CityModule } from '../../city/city-module/city.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [SuggestedCitiesComponent],\n  imports: [\n    CommonModule,\n    SuggestedCitiesRoutingModule,\n    CityModule,\n    NgbModule,\n  ],\n  exports: [SuggestedCitiesComponent]\n})\nexport class SuggestedCitiesModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-suggested-cities',\n  templateUrl: './suggested-cities.component.html',\n  styleUrls: ['./suggested-cities.component.css']\n})\nexport class SuggestedCitiesComponent implements OnInit {\n\n  constructor() { }\n  // receiving input data from other components\n  @Input() public cityColorFlag: boolean;\n  @Input() public choosenCity: string;\n  @Input() public suggestedCities: any;\n\n  @Output() public notify = new EventEmitter();\n\n  ngOnInit() {\n  }\n\n  // user choice city fnc ....\n  selectedCity = (city: any) => {\n    this.notify.emit(city);\n  }\n}\n","<div ngbDropdown *ngIf=\"\">\n  <button *ngIf=\"choosenCity!==''\" class=\"btn city-bgColor text-left\" id=\"dropdownBasic1\" ngbDropdownToggle>\n    <span class=\"search-font\"\n      [ngClass]=\"[cityColorFlag && choosenCity!='City' ? 'green' : 'white']\">{{choosenCity}}</span>\n    <span class=\"float-right\">\n      <i><img src=\"../../../assets/VectorCity.svg\" alt=\"city\"></i>\n    </span>\n  </button>\n  <button *ngIf=\"choosenCity==''\" class=\"btn city-bgColor text-left\" id=\"dropdownBasic1\" ngbDropdownToggle>\n    <span style=\"font-weight: bold;\" class=\"search-font\">\n      <!-- [ngClass]=\"[cityColorFlag && choosenCity != 'City' ? 'green' : 'white']\" -->\n      Select City</span>\n    <span class=\"float-right\">\n      <i><img src=\"../../../assets/VectorCity.svg\" alt=\"city\"></i>\n    </span>\n  </button>\n\n  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\" class=\"search-page\">\n    <button class=\"dropdown-item fontstyle \" *ngFor=\"let city of suggestedCities; let i = index\">\n      <app-city (notify)=\"selectedCity($event)\" [city]=\"city.city\" [cityColorFlag]=\"cityColorFlag\">\n      </app-city>\n    </button>\n  </div>\n</div>\n\n<!-- For Search Component -->\n<div ngbDropdown>\n  <button *ngIf=\"choosenCity!==''\" class=\"btn city-bgColor text-left\" id=\"dropdownBasic1\" ngbDropdownToggle>\n    <span class=\"search-font\">\n      <!-- [ngClass]=\"[cityColorFlag && choosenCity!='City' ? 'green' : 'white']\" -->\n      {{choosenCity}}</span>\n    <span class=\"float-right\">\n      <i><img src=\"../../../assets/VectorCity.svg\" alt=\"city\"></i>\n    </span>\n  </button>\n  <button *ngIf=\"choosenCity==''\" class=\"btn city-bgColor text-left\" id=\"dropdownBasic1\" ngbDropdownToggle>\n    <span style=\"font-weight: bold;\" class=\"search-font\">\n      <!-- [ngClass]=\"[cityColorFlag && choosenCity!='City' ? 'green' : 'white']\" -->\n      Select City</span>\n    <span class=\"float-right\">\n      <i><img src=\"../../../assets/VectorCity.svg\" alt=\"vectorcity\"></i>\n    </span>\n  </button>\n\n  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\" class=\"search-page1\">\n    <button class=\"dropdown-item fontstyle \" *ngFor=\"let city of suggestedCities; let i = index\">\n      <app-city (notify)=\"selectedCity($event)\" [city]=\"city.city\" [cityColorFlag]=\"cityColorFlag\">\n      </app-city>\n    </button>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SuggestedInterestRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SuggestedInterestRoutingModule } from './suggested-interest-routing.module';\nimport { SuggestedinterestsComponent } from '../suggestedinterests.component';\n\n@NgModule({\n  declarations: [SuggestedinterestsComponent],\n  imports: [\n    CommonModule,\n    SuggestedInterestRoutingModule\n  ],\n  exports: [SuggestedinterestsComponent]\n})\nexport class SuggestedInterestModule { }\n","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy, NgZone, ChangeDetectorRef } from '@angular/core';\nimport { LocalStorageFactoryService } from 'src/app/services/localStorageFactory/local-storage-factory.service';\nimport { LoggingService } from 'src/app/services/loggingFactory/logging-service.service';\nimport { IEventLog } from 'src/app/models/event-log';\nimport { Subject } from 'rxjs';\nimport { DBkeys } from 'src/app/services/dbkeys/db-keys';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-suggestedinterests',\n  templateUrl: './suggestedinterests.component.html',\n  styleUrls: ['./suggestedinterests.component.css']\n})\nexport class SuggestedinterestsComponent implements OnInit, OnDestroy {\n  // class props\n  public isLogin: boolean = true; // is for to hide some routes from unauthenticated user\n  public controller: string;\n  public page: string;\n  public objIEventLog: IEventLog;\n  // subject to unsubscibe from obserable\n  public unsubscribe = new Subject<void>();\n  // receiving input data from other components\n  @Input() public interest: string;\n  @Output() public notify = new EventEmitter();\n  @Input() public searchInputInterest: any;\n\n\n  constructor(private zone: NgZone, private changeDetector: ChangeDetectorRef, private srvLocalStorageFactory: LocalStorageFactoryService, private srvLoggingService: LoggingService, ) {\n    // we will get error if not initialize \n    this.objIEventLog = new IEventLog();\n\n  }\n\n\n  ngOnInit() {\n\n    // console.log(this.notify);\n\n  }\n\n\n  getValuesFromHome() {\n\n  }\n  // fn to emit user choice interest\n  selectedInterest = (userChoice) => {\n    this.notify.emit(userChoice);\n    var searchPhrase;\n    var date;\n    var interest = userChoice;\n    var city = \"unknown\";\n    this.srvLoggingService.Add_Filters(searchPhrase, date, interest, city).subscribe(res => { });\n  }\n  // fuc to track user actions .\n  addEventLog = (action) => {\n    this.objIEventLog.user_id = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.USER_ID);\n    this.objIEventLog.user_ip = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.IP);\n    this.objIEventLog.action = action;\n    this.objIEventLog.category = 'click select';\n    this.objIEventLog.city = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.CITY);\n    this.objIEventLog.country = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.COUNTRY);\n    this.objIEventLog.controller = this.controller;\n    this.objIEventLog.session_id = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.SESSION_ID);\n    this.objIEventLog.page = this.page;\n\n    this.srvLoggingService.Event_SaveLogs(this.objIEventLog).pipe(takeUntil(this.unsubscribe)).subscribe(res => {\n    }, error => console.log(error));\n\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n}\n","<div class=\"from-group\">\n  <div class=\"type-interest\">\n\n\n    <label style=\"cursor: pointer\">\n      <input class=\"ml-1\" type=\"checkbox\" (click)=\"selectedInterest(interest)\">\n      {{interest}}\n      <span></span>\n\n    </label>\n\n    <!-- \n    <label class=\"container-date ml-2\">Today\n      <input type=\"radio\" name=\"radio\" (change)=\"makeDateActive(false);selectTodayDate()\">\n      <span class=\"checkmark checkmark1\"></span>\n    </label> -->\n\n    <!-- <div *ngif=\"intr.value !=searchInputInterest\">\n      <input class=\"ml-1\" type=\"checkbox\" (click)=\"selectedInterest(interest)\" value=\"option\">\n    \n      <label for=\"option\"><span><span></span></span>{{intr}}</label> \n    </div>\n    -->\n\n  </div>\n</div>"],"sourceRoot":"webpack:///"}