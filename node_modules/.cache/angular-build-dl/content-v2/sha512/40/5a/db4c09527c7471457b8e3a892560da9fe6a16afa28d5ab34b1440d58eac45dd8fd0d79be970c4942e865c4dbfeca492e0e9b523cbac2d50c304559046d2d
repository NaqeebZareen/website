{"version":3,"sources":["webpack:///src/app/components/login/login-module/login-routing.module.ts","webpack:///src/app/components/login/login-module/login.module.ts","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/models/login.ts"],"names":["routes","path","component","LoginRoutingModule","forChild","imports","exports","LoginModule","declarations","LoginComponent","ip","router","srvEndpointFactory","srvLocalStoragefactory","socialAuthService","accountService","login1","unsubscribe","verfiy1","login","loading","isTrue","getLoginEndpoint","objLogin","username","subscribe","res","check","message","verfication","verify","data","val1","val2","val3","val4","x","sendVerificationCode","writeEmailtoLocal","writetokenWithEmail","loginAnalytics","var1","getUserProfileInfoEndpoint","writeWholeObjecttolocalStorage","err","error_stack","JSON","stringify","error","error_level","status","toString","error_message","navigate","isLogin","removeTokenFromLocalStorage","isLoginSubject","next","goBack","back","navigateToRegisterPage","REGISTER","show","grant_type","GRANTE_TYPE","client_id","CLINET_ID","client_secret","CLIENT_SECRET","socialPlatform","socialPlatformProvider","console","log","PROVIDER_ID","signIn","then","userData","body","set","name","photoUrl","id","idToken","email","getSocialLoginEndpoint","complete","event","maxLength","nextInput","srcElement","nextElementSibling","target","focus","eventName","localStorage","getItem","token","userid","date","selector","templateUrl","styleUrls","ILogin"],"mappings":"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","file":"components-login-login-module-login-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from '../login.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from '../login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class LoginModule { }\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ILogin } from 'src/app/models/login';\nimport { Router } from '@angular/router';\nimport { EndpointFactoryService } from 'src/app/services/endpontFactory/endpoint-factory.service';\nimport { DBkeys, UkanAppRoutes } from 'src/app/services/dbkeys/db-keys';\nimport { LocalStorageFactoryService } from 'src/app/services/localStorageFactory/local-storage-factory.service';\nimport { FacebookLoginProvider, GoogleLoginProvider, AuthService } from 'angularx-social-login';\nimport { HttpParams } from '@angular/common/http';\nimport { IToken } from 'src/app/models/token';\nimport { AccountService } from 'src/app/services/account/account.service';\nimport { IpServiceService } from '../../services/ipservice/ip-service.service';\nimport { FormsModule } from '@angular/forms';\n// import * as firebase from 'firebase';\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyDGYqy-W_qQTyrppD51-BF6rk0RtWozZho\",\n//   authDomain: \"youcan-265010.firebaseapp.com\",\n//   databaseURL: \"https://youcan-265010.firebaseio.com\",\n//   projectId: \"youcan-265010\",\n//   storageBucket: \"youcan-265010.appspot.com\",\n//   messagingSenderId: \"506126453626\",\n//   appId: \"1:506126453626:web:9d9948a26263a6f16164c3\",\n//   measurementId: \"G-FX351K4RER\"\n// };\n// import * as firebase from 'firebase';\n// console.log(firebase)\n// firebase.initializeApp(firebaseConfig);\n// const analytics = firebase.analytics();\n// const analytics = firebase.analytics();\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  // props .....\n  show: boolean;\n  userId: string;\n  controller: string;\n  url: string;\n  public objLogin: ILogin;\n  public isLogin: string;\n  private access_token: any;\n  public login1 = \"\";\n  public login_responce: IToken;\n  // subject to unsubscibe from obserable\n  public unsubscribe = new Subject<void>();\n  check: any;\n  public loading: any;\n  public verfication: boolean;\n  public val1: string;\n  public val2: string;\n  public val3: string;\n  public val4: string;\n  public data: string;\n  public verfiy1: boolean = false;\n  public isTrue: boolean;\n  @ViewChild('myInput', { static: true }) myInput: ElementRef;\n  constructor(private ip: IpServiceService, public router: Router,\n    private srvEndpointFactory: EndpointFactoryService, private srvLocalStoragefactory: LocalStorageFactoryService, private socialAuthService: AuthService, private accountService: AccountService) {\n    this.objLogin = new ILogin();\n    this.show = false;\n    this.loading = 0;\n    this.verfication = false;\n\n  }\n  ipAddress: string;\n  ngOnInit() {\n\n    this.objLogin.grant_type = DBkeys.GRANTE_TYPE;\n    this.objLogin.client_id = DBkeys.CLINET_ID;\n    this.objLogin.client_secret = DBkeys.CLIENT_SECRET;\n\n    // console.log(this.getIP());\n\n\n\n  }\n\n  // getPosition(): Promise<any> {\n  //   return new Promise((resolve, reject) => {\n\n  //     navigator.geolocation.getCurrentPosition(resp => {\n\n  //       resolve({ lng: resp.coords.longitude, lat: resp.coords.latitude });\n\n  //       // console.log(resolve);\n  //     },\n  //       err => {\n  //         reject(err);\n  //         // console.log(resolve);\n  //       });\n  //   });\n\n\n  // }\n  // getIP() {\n  //   this.ip.getIPAddress().subscribe((res: any) => {\n  //     console.log(res);\n  //     this.ipAddress = res.ip;\n  //     console.log(this.ipAddress);\n  //     // var geoip = require('geoip-lite');\n  //     // var geo = geoip.lookup(this.ipAddress);\n  //     // console.log(geo);\n  //   });\n\n  // }\n\n  login = () => {\n    this.loading = 1;\n    this.isTrue = true;\n    // console.log(this.objLogin.username, \"email\");\n    this.srvEndpointFactory.getLoginEndpoint(this.objLogin.username).subscribe(res => {\n      // console.log(res, \"simple res\");\n\n      this.check = res['response'].message;\n      // console.log(this.check);\n      if (this.check === \"Email sent to user succesfully\") {\n        this.verfication = true;\n        // this.loginAnalytics(\"login_with_Email\");\n        // this.srvLocalStoragefactory.writeEmailtoLocal(this.objLogin.username);\n      }\n      else {\n        this.verfication = true;\n      }\n      // this.check.access_token['status'];\n      // console.log(this.check.access_token['status']);\n\n      // if (this.check.access_token['status'] !== \"This email does not exist\") {\n      //   // console.log(res, \"i am login\");\n      //   this.srvLocalStoragefactory.writeTokenToLocalStorage(res.access_token, res.refresh_token, res.expires_in);\n      //   this.srvEndpointFactory.isLoginSubject.next(true);\n      //   // navigate to home component\n      //   this.router.navigate(['/']);\n      // } else {\n      //   // console.log(\"i am invalid\");\n      //   this.loading = 0;\n      //   this.isLogin = \"You have entered an invalid email or password\";\n      // }\n\n    });\n    //, error => {\n    //   this.loading = 0;\n    //   this.isLogin = \"You have entered an invalid email or password\";\n    //   // console.log('error login')\n    //   this.srvLocalStoragefactory.removeTokenFromLocalStorage();\n    //   this.srvEndpointFactory.isLoginSubject.next(false);\n    // });;\n  }\n  // OnInput(value) {\n  //   // console.log()\n  //   this.val1 = value;\n  //   console.log(this.val1);\n  //   this.data.push(this.val1)\n  // }\n  verify = () => {\n    this.loading = 1;\n    this.data = this.val1;\n    this.data = this.data + this.val2;\n    this.data = this.data + this.val3;\n    this.data = this.data + this.val4;\n    // console.log(this.data, \"code\");\n    let x: boolean = false;\n    // console.log(\"viewss\");\n    this.srvEndpointFactory.sendVerificationCode(this.data, this.objLogin.username).subscribe(res => {\n      // console.log(res['response'].data);\n      // if (res == null) {\n\n      // }\n      // else {\n      // console.log(res, \"simple res veri\");\n      this.check = res['response'].data['token'];\n      x = true;\n      // console.log(this.check);\n      if (this.check != null) {\n        this.srvLocalStoragefactory.writeEmailtoLocal(this.objLogin.username);\n        this.srvLocalStoragefactory.writetokenWithEmail(this.check);\n        this.loginAnalytics(\"email_login\");\n\n        if (this.check === null) {\n          this.loading = 0;\n          // this.login = \"The email you entered did not match our records. Please try again.\";\n          this.login1 = \"You have entered an invalid email or password\";\n        } else {\n          let var1;\n          // console.log(this.check, \"ist\");\n          this.accountService.getUserProfileInfoEndpoint(this.check).subscribe(res => {\n            // console.log(res, \"1\");\n            var1 = res['response'].data;\n            // console.log(var1, \"2\");\n            this.srvLocalStoragefactory.writeWholeObjecttolocalStorage(var1);\n\n          },\n            err => {\n              let error_stack = JSON.stringify(err.error);\n              let error_level = err.status.toString();\n              let error_message = err.message;\n            }\n\n          );\n          this.router.navigate(['/']);\n\n        }\n      }\n      else {\n        this.verfication = false;\n        this.loading = 0;\n        this.isLogin = \"You have entered an invalid or Expire Token, Please enter your email again\";\n        // console.log('error login')\n        this.srvLocalStoragefactory.removeTokenFromLocalStorage();\n        this.srvEndpointFactory.isLoginSubject.next(false);\n      }\n\n\n\n    });\n\n    if (x === false) {\n      // console.log(\"viewa\");\n      this.verfication = true;\n      // console.log(this.verfiy1);\n      this.verfiy1 = true;\n    }\n\n  }\n  // go back to home page\n  goBack = () => {\n    this.router.navigate(['/']);\n  }\n  back = () => {\n    this.verfication = false;\n    this.loading = 0;\n  }\n\n  socialSignIn(socialPlatform: string) {\n    let socialPlatformProvider;\n    // if (socialPlatform == \"facebook\") {\n    //   socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\n    // } else \n\n    if (socialPlatform == \"google\") {\n      console.log(\"ssss\");\n      socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\n      console.log(socialPlatformProvider);\n    }\n\n    console.log(\"send call\");\n    this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID).then(userData => {\n\n      // this.access_token = this.srvLocalStoragefactory.getTokenFromLocalStorage();\n      // console.log(socialPlatform + \" sign in data : \", userData);\n      this.loading = 1;\n      let body = new HttpParams();\n      body = body.set(\"method\", socialPlatform);\n      body = body.set(\"name\", userData.name);\n      body = body.set(\"picture\", userData.photoUrl);\n      body = body.set(\"method_id\", userData.id);\n      body = body.set(\"token\", userData.idToken);\n      body = body.set(\"email\", userData.email);\n      this.srvEndpointFactory.getSocialLoginEndpoint(userData.email).subscribe(res => {\n        this.check = res['response'].data['token'];\n\n        // console.log(this.check);\n        // console.log(this.check.result.access_token);\n        //  console.log(this.check.result.access_token);\n        if (this.check !== \"null\") {\n          //  console.log(\"helo login\");\n\n          this.srvLocalStoragefactory.writeEmailtoLocal(userData.email);\n          this.login1 = \"get access token from backend but ssl require google login\";\n          this.srvLocalStoragefactory.writetokenWithEmail(this.check);\n          this.login1 = \"Successful\";\n\n          this.loginAnalytics(\"login_with_google_pressed\");\n          //  this.messageservice.logout();\n          // if (this.login_responce.error == \"null\") {\n          //   this.loading = 0;\n          //   // this.login = \"The email you entered did not match our records. Please try again.\";\n          //   this.login = this.login_responce.error.toString();\n          // }\n          // added code for test\n          if (this.check === null) {\n            this.loading = 0;\n            // this.login = \"The email you entered did not match our records. Please try again.\";\n            this.login1 = \"You have entered an invalid email or password\";\n          } else {\n            let var1;\n            this.accountService.getUserProfileInfoEndpoint(this.check).subscribe(res => {\n              // console.log(res, \"111\");\n              var1 = res['response'].data;\n              // console.log(var1, \"2\");\n              this.srvLocalStoragefactory.writeWholeObjecttolocalStorage(var1);\n\n            },\n              err => {\n                let error_stack = JSON.stringify(err.error);\n                let error_level = err.status.toString();\n                let error_message = err.message;\n              }\n\n            );\n            this.router.navigate(['/']);\n          }\n\n        }\n        else {\n          this.router.navigate(['/login']);\n        }\n      });\n    });\n\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  // fuc to navigate user to login page if user is on another page\n  navigateToRegisterPage = () => {\n    this.router.navigate([UkanAppRoutes.REGISTER]);\n  }\n  // show and hidden password\n  showHidePassword1() {\n    this.show = !this.show;\n  }\n\n\n  keytab(event, maxLength) {\n    let nextInput = event.srcElement.nextElementSibling; // get the sibling element\n\n    var target = event.target || event.srcElement;\n    var id = target.id\n    // console.log(id.maxlength); // prints undefined\n\n    if (nextInput == null)  // check the maxLength from here\n      return;\n    else\n      nextInput.focus();   // focus if not null\n  }\n\n  loginAnalytics(eventName) {\n    let email = localStorage.getItem('email');\n    let token = localStorage.getItem('access_token');\n    let userid = localStorage.getItem('userid');\n    let date: Date;\n    // analytics.logEvent(eventName, {\n    //   id: token,\n    //   deviceId: userid,\n    //   email: email,\n    //   date: date\n    // });\n  }\n\n}\n","<section>\n  <div class=\"container-fluid\">\n\n    <div class=\"row\">\n      <div class=\"col-xl-8 col-lg-8 col-md-12 bg\">\n        <div class=\"d-flex justify-content-left my-5\">\n          <div class=\"d-flex align-items-center front-img-text-larg front-img-position\">Let's unleash the true\n            potential of\n            your life.</div>\n        </div>\n        <div class=\"d-flex align-items-center front-imag-text-small\">\n          <!-- Join and do more than ever before. -->\n        </div>\n      </div>\n      <div *ngIf=\"verfication == false\" class=\"col-xl-4 col-lg-4 col-md-12\">\n\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"goBack()\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-center pb-3 text-login\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <span>Join Now</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"d-flex justify-content-center py-3\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <button class=\"col btn social-login-bg\" (click)=\"socialSignIn('google')\">\n                  <img style=\"padding-bottom: 3px;\" src=\"../../../assets/google_icon.png\" width=\"20\">\n                  <span class=\"social-login-text\" style=\"margin-left:10px;\">Join with Google</span>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"d-flex justify-content-center pt-3 pb-4\">\n            <div class=\"row\">\n              <div class=\"col font-use or\">\n                <div class=\"line\" style=\"display:inline-block;\"></div>\n                <div style=\"display:inline-block;\">OR</div>\n                <div class=\"line\" style=\"display:inline-block;\"></div>\n              </div>\n            </div>\n          </div>\n          <!-- <div class=\"row\">\n            <div class=\"col font-use login-email \">\n              <span style=\"padding-left: 25px\">Log in with email</span>\n            </div>\n          </div> -->\n          <form #loginForm=\"ngForm\">\n            <div class=\" d-flex justify-content-center pt-3\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" [(ngModel)]=\"objLogin.username\" class=\"form-control input-email\"\n                      pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" id=\"email\" name=\"email\" ngModel\n                      #emailref=\"ngModel\" required=\"required\" placeholder=\"Email\">\n                    <div *ngIf=\"emailref.errors &&(emailref.touched || emailref.dirty)\" class=\"pass-feedback\">\n                      <div [hidden]=\"!emailref.errors?.pattern\">\n                        Enter valid email e.g abc@xyz.com\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n            <div id=\"circularG\" *ngIf=\"loading==1\">\n              <div id=\"circularG_1\" class=\"circularG\"></div>\n              <div id=\"circularG_2\" class=\"circularG\"></div>\n              <div id=\"circularG_3\" class=\"circularG\"></div>\n              <div id=\"circularG_4\" class=\"circularG\"></div>\n              <div id=\"circularG_5\" class=\"circularG\"></div>\n              <div id=\"circularG_6\" class=\"circularG\"></div>\n              <div id=\"circularG_7\" class=\"circularG\"></div>\n              <div id=\"circularG_8\" class=\"circularG\"></div>\n            </div>\n            <!-- <div class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input [type]=\"show ? 'text' : 'password'\" class=\"form-control input-email\" name=\"password\"\n                      id=\"password\" placeholder=\"Password\" [(ngModel)]=\"objLogin.password\" required=\"required\" ngModel\n                      #passref=\"ngModel\">\n                    <div *ngIf=\"passref.errors &&(passref.touched || passref.dirty)\" class=\"pass-feedback\">\n                      <div [hidden]=\"!passref.errors?.pattern\">\n                        Enter a password\n                      </div>\n                    </div>\n                    <span (click)=\"showHidePassword1()\"><img *ngIf=\"!show\" class=\"password-show\"\n                        src=\"../../../assets/Vector.png\">\n                      <img *ngIf=\"show\" class=\"password-show1\" src=\"../../../assets/showpassword.png\" width=\"24\">\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div> -->\n\n            <div class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col font-use alert-text \">\n                  <p>{{isLogin}}</p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col form-group\">\n                  <button type=\"submit\" (click)=\"login()\" [disabled]=\"!loginForm.form.valid\" style=\"cursor: pointer;\"\n                    class=\"btn btn-primary login-btn font-use \">JOIN</button>\n                </div>\n              </div>\n            </div>\n          </form>\n          <!-- <div class=\"d-flex justify-content-center\">\n            <div class=\"row\">\n              <div class=\"col pt-3\">\n                <a href=\"#/forgetpassword\" class=\"font-use2 forget-password\" style=\"text-decoration: none;\">Forgot\n                  Password</a>\n              </div>\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-center\">\n            <div class=\"row\">\n              <div class=\"col font-use2 new-user-reg pt-3\">\n                Are you a new User ?<a (click)=\"navigateToRegisterPage()\" class=\"register-here\"\n                  style=\"text-decoration: none; cursor: pointer;\"> Register\n                  here</a>\n              </div>\n            </div>\n          </div> -->\n          <div class=\"d-flex justify-content-center\" style=\"padding-top:50px;\">\n            <div class=\"row\">\n              <div class=\"col font-use2 term-condition \">\n                <!-- By registering you are agree all <b><a href=\"#/LicenseAgreement\"\n                    style=\"text-decoration: none; color: rgba(0, 0, 0, 0.3);\">Terms\n                    <br> and Conditions</a></b>\n                and\n                <b><a href=\"#/Privacy\" style=\"text-decoration: none; color: rgba(0, 0, 0, 0.3);\">Privacy Policy</a></b> -->\n              </div>\n\n\n\n            </div>\n          </div>\n\n          <!-- <div class=\"d-flex justify-content-center\">\n            <div class=\"row\">\n            \n\n            </div>\n          </div> -->\n\n        </div>\n      </div>\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!-- for verification code -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <div *ngIf=\"verfication==true\" class=\"col-xl-4 col-lg-4 col-md-12\">\n\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"goBack()\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button> -->\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-center text-login\" style=\"margin-top: 120px;\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <span>Verification Code</span>\n              </div>\n            </div>\n          </div>\n\n          <!-- <div class=\"d-flex justify-content-center py-3\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <button class=\"col btn social-login-bg\" (click)=\"socialSignIn('google')\">\n                  <img style=\"padding-bottom: 3px;\" src=\"../../../assets/google_icon.png\" width=\"20\">\n                  <span class=\"social-login-text\" style=\"margin-left:10px;\">Login with Google</span>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"d-flex justify-content-center pt-3 pb-4\">\n            <div class=\"row\">\n              <div class=\"col font-use or\">\n                <div class=\"line\" style=\"display:inline-block;\"></div>\n                <div style=\"display:inline-block;\">OR</div>\n                <div class=\"line\" style=\"display:inline-block;\"></div>\n              </div>\n            </div>\n          </div> -->\n          <!-- <div class=\"row\">\n            <div class=\"col font-use login-email \">\n              <span style=\"padding-left: 25px\">Log in with email</span>\n            </div>\n          </div> -->\n          <form #loginForm=\"ngForm\">\n            <div class=\" d-flex justify-content-center pt-3\">\n              <div class=\"row\">\n                <!-- <div id=\"circularG\" *ngIf=\"loading==1\">\n                  <div id=\"circularG_1\" class=\"circularG\"></div>\n                  <div id=\"circularG_2\" class=\"circularG\"></div>\n                  <div id=\"circularG_3\" class=\"circularG\"></div>\n                  <div id=\"circularG_4\" class=\"circularG\"></div>\n                  <div id=\"circularG_5\" class=\"circularG\"></div>\n                  <div id=\"circularG_6\" class=\"circularG\"></div>\n                  <div id=\"circularG_7\" class=\"circularG\"></div>\n                  <div id=\"circularG_8\" class=\"circularG\"></div>\n                </div> -->\n                <div class=\"col\">\n                  <!-- <div class=\"form-group\">\n                    <input type=\"text\" [(ngModel)]=\"objLogin.username\" class=\"form-control input-email\"\n                      pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" id=\"email\" name=\"email\" ngModel\n                      #emailref=\"ngModel\" required=\"required\" placeholder=\"Email\">\n                    <div *ngIf=\"emailref.errors &&(emailref.touched || emailref.dirty)\" class=\"pass-feedback\">\n                      <div [hidden]=\"!emailref.errors?.pattern\">\n                        Enter valid email e.g abc@xyz.com\n                      </div>\n                    </div>\n                  </div> -->\n                  <div id=\"form\">\n                    <input class=\"inp\" [(ngModel)]=\"val1\" (keyup)=\"keytab($event, 1)\" name=\"v1\" type=\"text\"\n                      maxLength=\"1\" size=\"1\" min=\"0\" max=\"9\" pattern=\"[0-9]{1}\" />\n                    <input class=\"inp\" [(ngModel)]=\"val2\" name=\"v1\" (keyup)=\"keytab($event, 1)\" type=\"text\"\n                      maxLength=\"1\" size=\"1\" min=\"0\" max=\"9\" pattern=\"[0-9]{1}\" />\n                    <input class=\"inp\" [(ngModel)]=\"val3\" name=\"v1\" (keyup)=\"keytab($event, 1)\" type=\"text\"\n                      maxLength=\"1\" size=\"1\" min=\"0\" max=\"9\" pattern=\"[0-9]{1}\" />\n                    <input class=\"inp\" [(ngModel)]=\"val4\" name=\"v1\" (keyup)=\"keytab($event, 1)\" type=\"text\"\n                      maxLength=\"1\" size=\"1\" min=\"0\" max=\"9\" pattern=\"[0-9]{1}\" />\n                    <button (click)=\"verify()\" class=\"btn11 btn-primary btn-embossed\">continue</button>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n\n            <!-- <div class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input [type]=\"show ? 'text' : 'password'\" class=\"form-control input-email\" name=\"password\"\n                      id=\"password\" placeholder=\"Password\" [(ngModel)]=\"objLogin.password\" required=\"required\" ngModel\n                      #passref=\"ngModel\">\n                    <div *ngIf=\"passref.errors &&(passref.touched || passref.dirty)\" class=\"pass-feedback\">\n                      <div [hidden]=\"!passref.errors?.pattern\">\n                        Enter a password\n                      </div>\n                    </div>\n                    <span (click)=\"showHidePassword1()\"><img *ngIf=\"!show\" class=\"password-show\"\n                        src=\"../../../assets/Vector.png\">\n                      <img *ngIf=\"show\" class=\"password-show1\" src=\"../../../assets/showpassword.png\" width=\"24\">\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div> -->\n\n            <!-- <div class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col font-use alert-text \">\n                  <p>{{isLogin}}</p>\n                </div>\n              </div>\n            </div> -->\n            <div *ngIf=\"verfiy1 === true\" class=\"d-flex justify-content-center\" style=\"margin-bottom: 20px;\">\n              <div class=\"row\" style=\"color:red;\">\n                You have entered invalid number\n              </div>\n            </div>\n\n            <div *ngIf=\"isTrue == false\" class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col form-group\">\n                  <button type=\"submit\" (click)=\"login()\" [disabled]=\"!loginForm.form.valid\" style=\"cursor: pointer;\"\n                    class=\"btn btn-primary login-btn font-use \">JOIN</button>\n                </div>\n              </div>\n            </div>\n            <div *ngIf=\"verfication == true\" class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col form-group\">\n                  Didn't receive an OTP? <a style=\"color:#28a745\" (click)=\"back()\">Click here</a>\n                  <!-- <button type=\"submit\" (click)=\"back()\" style=\"cursor: pointer;\"\n                    class=\"font-use \">Click here</button> -->\n                  <!-- <a class=\"nav-link \" (click)=\" navigateToCreateActivityPage()\">Create Activity</a> -->\n\n\n                </div>\n              </div>\n            </div>\n          </form>\n          <!-- <div class=\"d-flex justify-content-center\">\n            <div class=\"row\">\n              <div class=\"col pt-3\">\n                <a href=\"#/forgetpassword\" class=\"font-use2 forget-password\" style=\"text-decoration: none;\">Forgot\n                  Password</a>\n              </div>\n            </div>\n          </div> -->\n          <!-- <div class=\"d-flex justify-content-center\">\n            <div class=\"row\">\n              <div class=\"col font-use2 new-user-reg pt-3\">\n                Are you a new User ?<a (click)=\"navigateToRegisterPage()\" class=\"register-here\"\n                  style=\"text-decoration: none; cursor: pointer;\"> Register\n                  here</a>\n              </div>\n            </div>\n          </div> -->\n          <!-- <div class=\"d-flex justify-content-center\" style=\"padding-top:50px;\">\n            <div class=\"row\">\n              <div class=\"col font-use2 term-condition \">\n                By registering you are agree all <b><a href=\"#/LicenseAgreement\"\n                    style=\"text-decoration: none; color: rgba(0, 0, 0, 0.3);\">Terms\n                    <br> and Conditions</a></b>\n                and\n                <b><a href=\"#/Privacy\" style=\"text-decoration: none; color: rgba(0, 0, 0, 0.3);\">Privacy Policy</a></b>\n              </div>\n\n\n\n            </div>\n          </div> -->\n\n          <!-- <div class=\"d-flex justify-content-center\">\n            <div class=\"row\">\n            \n\n            </div>\n          </div> -->\n\n        </div>\n      </div>\n      <!-- end of verification -->\n\n\n    </div>\n  </div>\n</section>","export class ILogin {\n    grant_type: string;\n    username: string;\n    password: string;\n    client_id: string;\n    client_secret: string;\n    location: string;\n\n}\n"]}