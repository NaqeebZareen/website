{"version":3,"sources":["webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/login/login-module/login-routing.module.ts","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login-module/login.module.ts"],"names":["routes","path","component","LoginComponent","ip","router","srvEndpointFactory","srvLocalStoragefactory","socialAuthService","accountService","login1","unsubscribe","Subject","verfiy1","login","this","loading","isTrue","getLoginEndpoint","objLogin","username","subscribe","res","check","message","verfication","verify","data","val1","val2","val3","val4","x","sendVerificationCode","writeEmailtoLocal","writetokenWithEmail","loginAnalytics","var1","getUserProfileInfoEndpoint","writeWholeObjecttolocalStorage","err","JSON","stringify","error","status","toString","navigate","isLoginCheck","removeTokenFromLocalStorage","isLoginSubject","next","goBack","back","navigateToRegisterPage","REGISTER","show","grant_type","GRANTE_TYPE","client_id","CLINET_ID","client_secret","CLIENT_SECRET","socialPlatform","socialPlatformProvider","PROVIDER_ID","signIn","then","userData","body","set","name","photoUrl","id","idToken","email","getSocialLoginEndpoint","complete","event","maxLength","nextInput","srcElement","nextElementSibling","focus","eventName","localStorage","getItem","LoginRoutingModule","forChild","LoginModule"],"mappings":"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","file":"x","sourcesContent":["<section>\n  <div class=\"container-fluid\">\n\n    <div class=\"row\">\n      <div class=\"col-xl-8 col-lg-8 col-md-12 bg\">\n        <div class=\"d-flex justify-content-left my-5\">\n          <div class=\"d-flex align-items-center front-img-text-larg front-img-position\">Let's unleash the true\n            potential of\n            your life.</div>\n        </div>\n        <div class=\"d-flex align-items-center front-imag-text-small\">\n\n        </div>\n      </div>\n      <div *ngIf=\"verfication == false\" class=\"col-xl-4 col-lg-4 col-md-12\">\n\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"goBack()\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-center pb-3 text-login\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <span>Join Now</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"d-flex justify-content-center py-3\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <button class=\"col btn social-login-bg\" (click)=\"socialSignIn('google')\">\n                  <img style=\"padding-bottom: 3px;\" src=\"../../../assets/google_icon.png\" width=\"20\">\n                  <span class=\"social-login-text\" style=\"margin-left:10px;\">Join with Google</span>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"d-flex justify-content-center pt-3 pb-4\">\n            <div class=\"row\">\n              <div class=\"col font-use or\">\n                <div class=\"line\" style=\"display:inline-block;\"></div>\n                <div style=\"display:inline-block;\">OR</div>\n                <div class=\"line\" style=\"display:inline-block;\"></div>\n              </div>\n            </div>\n          </div>\n\n          <form #loginForm=\"ngForm\">\n            <div class=\" d-flex justify-content-center pt-3\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" [(ngModel)]=\"objLogin.username\" class=\"form-control input-email\"\n                      pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" id=\"email\" name=\"email\" ngModel\n                      #emailref=\"ngModel\" required=\"required\" placeholder=\"Email\">\n                    <div *ngIf=\"emailref.errors &&(emailref.touched || emailref.dirty)\" class=\"pass-feedback\">\n                      <div [hidden]=\"!emailref.errors?.pattern\">\n                        Enter valid email e.g abc@xyz.com\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n            <div id=\"circularG\" *ngIf=\"loading==1\">\n              <div id=\"circularG_1\" class=\"circularG\"></div>\n              <div id=\"circularG_2\" class=\"circularG\"></div>\n              <div id=\"circularG_3\" class=\"circularG\"></div>\n              <div id=\"circularG_4\" class=\"circularG\"></div>\n              <div id=\"circularG_5\" class=\"circularG\"></div>\n              <div id=\"circularG_6\" class=\"circularG\"></div>\n              <div id=\"circularG_7\" class=\"circularG\"></div>\n              <div id=\"circularG_8\" class=\"circularG\"></div>\n            </div>\n\n\n            <div class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col font-use alert-text \">\n                  <p>{{isLoginCheck}}</p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col form-group\">\n                  <button type=\"submit\" (click)=\"login()\" [disabled]=\"!loginForm.form.valid\" style=\"cursor: pointer;\"\n                    class=\"btn btn-primary login-btn font-use \">JOIN</button>\n                </div>\n              </div>\n            </div>\n          </form>\n\n          <div class=\"d-flex justify-content-center\" style=\"padding-top:50px;\">\n            <div class=\"row\">\n              <div class=\"col font-use2 term-condition \">\n\n              </div>\n\n\n\n            </div>\n          </div>\n\n\n        </div>\n      </div>\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!-- for verification code -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <div *ngIf=\"verfication==true\" class=\"col-xl-4 col-lg-4 col-md-12\">\n\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col\">\n\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-center text-login\" style=\"margin-top: 120px;\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <span>Verification Code</span>\n              </div>\n            </div>\n          </div>\n\n\n          <form #loginForm=\"ngForm\">\n            <div class=\" d-flex justify-content-center pt-3\">\n              <div class=\"row\">\n\n                <div class=\"col\">\n\n                  <div id=\"form\">\n                    <input class=\"inp\" [(ngModel)]=\"val1\" (keyup)=\"keytab($event, 1)\" name=\"v1\" type=\"text\"\n                      maxLength=\"1\" size=\"1\" min=\"0\" max=\"9\" pattern=\"[0-9]{1}\" />\n                    <input class=\"inp\" [(ngModel)]=\"val2\" name=\"v1\" (keyup)=\"keytab($event, 1)\" type=\"text\"\n                      maxLength=\"1\" size=\"1\" min=\"0\" max=\"9\" pattern=\"[0-9]{1}\" />\n                    <input class=\"inp\" [(ngModel)]=\"val3\" name=\"v1\" (keyup)=\"keytab($event, 1)\" type=\"text\"\n                      maxLength=\"1\" size=\"1\" min=\"0\" max=\"9\" pattern=\"[0-9]{1}\" />\n                    <input class=\"inp\" [(ngModel)]=\"val4\" name=\"v1\" (keyup)=\"keytab($event, 1)\" type=\"text\"\n                      maxLength=\"1\" size=\"1\" min=\"0\" max=\"9\" pattern=\"[0-9]{1}\" />\n                    <button (click)=\"verify()\" class=\"btn11 btn-primary btn-embossed\">continue</button>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n\n\n            <div *ngIf=\"verfiy1 === true\" class=\"d-flex justify-content-center\" style=\"margin-bottom: 20px;\">\n              <div class=\"row\" style=\"color:red;\">\n                You have entered invalid number\n              </div>\n            </div>\n\n            <div *ngIf=\"isTrue == false\" class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col form-group\">\n                  <button type=\"submit\" (click)=\"login()\" [disabled]=\"!loginForm.form.valid\" style=\"cursor: pointer;\"\n                    class=\"btn btn-primary login-btn font-use \">JOIN</button>\n                </div>\n              </div>\n            </div>\n            <div *ngIf=\"verfication == true\" class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col form-group\">\n                  Didn't receive an OTP? <a style=\"color:#466ce4\" (click)=\"back()\">Click here</a>\n\n\n\n                </div>\n              </div>\n            </div>\n          </form>\n\n\n        </div>\n      </div>\n\n\n\n    </div>\n  </div>\n</section>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from '../login.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ILogin } from 'src/app/models/login';\nimport { Router } from '@angular/router';\nimport { EndpointFactoryService } from 'src/app/services/endpontFactory/endpoint-factory.service';\nimport { DBkeys, UkanAppRoutes } from 'src/app/services/dbkeys/db-keys';\nimport { LocalStorageFactoryService } from 'src/app/services/localStorageFactory/local-storage-factory.service';\nimport { FacebookLoginProvider, GoogleLoginProvider, AuthService } from 'angularx-social-login';\nimport { HttpParams } from '@angular/common/http';\nimport { IToken } from 'src/app/models/token';\nimport { AccountService } from 'src/app/services/account/account.service';\nimport { IpServiceService } from '../../services/ipservice/ip-service.service';\nimport { FormsModule } from '@angular/forms';\n// import * as firebase from 'firebase';\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyDGYqy-W_qQTyrppD51-BF6rk0RtWozZho\",\n//   authDomain: \"youcan-265010.firebaseapp.com\",\n//   databaseURL: \"https://youcan-265010.firebaseio.com\",\n//   projectId: \"youcan-265010\",\n//   storageBucket: \"youcan-265010.appspot.com\",\n//   messagingSenderId: \"506126453626\",\n//   appId: \"1:506126453626:web:9d9948a26263a6f16164c3\",\n//   measurementId: \"G-FX351K4RER\"\n// };\n// import * as firebase from 'firebase';\n// console.log(firebase)\n// firebase.initializeApp(firebaseConfig);\n// const analytics = firebase.analytics();\n// const analytics = firebase.analytics();\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  // props .....\n  show: boolean;\n  userId: string;\n  controller: string;\n  url: string;\n  public objLogin: ILogin;\n  public isLoginCheck: string;\n  private access_token: any;\n  public login1 = \"\";\n  public login_responce: IToken;\n  // subject to unsubscibe from obserable\n  public unsubscribe = new Subject<void>();\n  check: any;\n  public loading: any;\n  public verfication: boolean;\n  public val1: string;\n  public val2: string;\n  public val3: string;\n  public val4: string;\n  public data: string;\n  public verfiy1: boolean = false;\n  public isTrue: boolean;\n  @ViewChild('myInput', { static: true }) myInput: ElementRef;\n  constructor(private ip: IpServiceService, public router: Router,\n    private srvEndpointFactory: EndpointFactoryService, private srvLocalStoragefactory: LocalStorageFactoryService, private socialAuthService: AuthService, private accountService: AccountService) {\n    this.objLogin = new ILogin();\n    this.show = false;\n    this.loading = 0;\n    this.verfication = false;\n\n  }\n  ipAddress: string;\n  ngOnInit() {\n\n    this.objLogin.grant_type = DBkeys.GRANTE_TYPE;\n    this.objLogin.client_id = DBkeys.CLINET_ID;\n    this.objLogin.client_secret = DBkeys.CLIENT_SECRET;\n\n    // console.log(this.getIP());\n\n\n\n  }\n\n  // getPosition(): Promise<any> {\n  //   return new Promise((resolve, reject) => {\n\n  //     navigator.geolocation.getCurrentPosition(resp => {\n\n  //       resolve({ lng: resp.coords.longitude, lat: resp.coords.latitude });\n\n  //       // console.log(resolve);\n  //     },\n  //       err => {\n  //         reject(err);\n  //         // console.log(resolve);\n  //       });\n  //   });\n\n\n  // }\n  // getIP() {\n  //   this.ip.getIPAddress().subscribe((res: any) => {\n  //     console.log(res);\n  //     this.ipAddress = res.ip;\n  //     console.log(this.ipAddress);\n  //     // var geoip = require('geoip-lite');\n  //     // var geo = geoip.lookup(this.ipAddress);\n  //     // console.log(geo);\n  //   });\n\n  // }\n\n  login = () => {\n    this.loading = 1;\n    this.isTrue = true;\n    // console.log(this.objLogin.username, \"email\");\n    this.srvEndpointFactory.getLoginEndpoint(this.objLogin.username).subscribe(res => {\n      // console.log(res, \"simple res\");\n\n      this.check = res['response'].message;\n      // console.log(this.check);\n      if (this.check === \"Email sent to user succesfully\") {\n        this.verfication = true;\n\n      }\n      else {\n        this.verfication = true;\n      }\n\n    });\n\n  }\n\n  verify = () => {\n    this.loading = 1;\n    this.data = this.val1;\n    this.data = this.data + this.val2;\n    this.data = this.data + this.val3;\n    this.data = this.data + this.val4;\n    // console.log(this.data, \"code\");\n    let x: boolean = false;\n    // console.log(\"viewss\");\n    this.srvEndpointFactory.sendVerificationCode(this.data, this.objLogin.username).subscribe(res => {\n\n      this.check = res['response'].data['token'];\n      x = true;\n      // console.log(this.check);\n      if (this.check != null) {\n        this.srvLocalStoragefactory.writeEmailtoLocal(this.objLogin.username);\n        this.srvLocalStoragefactory.writetokenWithEmail(this.check);\n        this.loginAnalytics(\"email_login\");\n\n        if (this.check === null) {\n          this.loading = 0;\n          // this.login = \"The email you entered did not match our records. Please try again.\";\n          this.login1 = \"You have entered an invalid email or password\";\n        } else {\n          let var1;\n          // console.log(this.check, \"ist\");\n          this.accountService.getUserProfileInfoEndpoint(this.check).subscribe(res => {\n            // console.log(res, \"1\");\n            var1 = res['response'].data;\n            // console.log(var1, \"2\");\n            this.srvLocalStoragefactory.writeWholeObjecttolocalStorage(var1);\n\n          },\n            err => {\n              let error_stack = JSON.stringify(err.error);\n              let error_level = err.status.toString();\n              let error_message = err.message;\n            }\n\n          );\n          this.router.navigate(['/']);\n\n        }\n      }\n      else {\n        this.verfication = false;\n        this.loading = 0;\n        this.isLoginCheck = \"You have entered an invalid or Expire Token, Please enter your email again\";\n        // console.log('error login')\n        this.srvLocalStoragefactory.removeTokenFromLocalStorage();\n        this.srvEndpointFactory.isLoginSubject.next(false);\n      }\n\n\n\n    });\n\n    if (x === false) {\n      // console.log(\"viewa\");\n      this.verfication = true;\n      // console.log(this.verfiy1);\n      this.verfiy1 = true;\n    }\n\n  }\n  // go back to home page\n  goBack = () => {\n    this.router.navigate(['/']);\n  }\n  back = () => {\n    this.verfication = false;\n    this.loading = 0;\n  }\n\n  socialSignIn(socialPlatform: string) {\n    let socialPlatformProvider;\n    // if (socialPlatform == \"facebook\") {\n    //   socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\n    // } else \n\n    if (socialPlatform == \"google\") {\n      // console.log(\"ssss\");\n      socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\n      // console.log(socialPlatformProvider);\n    }\n\n    // console.log(\"send call\");\n    this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID).then(userData => {\n\n      // this.access_token = this.srvLocalStoragefactory.getTokenFromLocalStorage();\n      // console.log(socialPlatform + \" sign in data : \", userData);\n      this.loading = 1;\n      let body = new HttpParams();\n      body = body.set(\"method\", socialPlatform);\n      body = body.set(\"name\", userData.name);\n      body = body.set(\"picture\", userData.photoUrl);\n      body = body.set(\"method_id\", userData.id);\n      body = body.set(\"token\", userData.idToken);\n      body = body.set(\"email\", userData.email);\n      this.srvEndpointFactory.getSocialLoginEndpoint(userData.email).subscribe(res => {\n        this.check = res['response'].data['token'];\n\n        // console.log(this.check);\n        // console.log(this.check.result.access_token);\n        //  console.log(this.check.result.access_token);\n        if (this.check !== \"null\") {\n          //  console.log(\"helo login\");\n\n          this.srvLocalStoragefactory.writeEmailtoLocal(userData.email);\n          this.login1 = \"get access token from backend but ssl require google login\";\n          this.srvLocalStoragefactory.writetokenWithEmail(this.check);\n          this.login1 = \"Successful\";\n\n          this.loginAnalytics(\"login_with_google_pressed\");\n\n          // added code for test\n          if (this.check === null) {\n            this.loading = 0;\n            // this.login = \"The email you entered did not match our records. Please try again.\";\n            this.login1 = \"You have entered an invalid email or password\";\n          } else {\n            let var1;\n            this.accountService.getUserProfileInfoEndpoint(this.check).subscribe(res => {\n              // console.log(res, \"111\");\n              var1 = res['response'].data;\n              // console.log(var1, \"2\");\n              this.srvLocalStoragefactory.writeWholeObjecttolocalStorage(var1);\n\n            },\n              err => {\n                let error_stack = JSON.stringify(err.error);\n                let error_level = err.status.toString();\n                let error_message = err.message;\n              }\n\n            );\n            this.router.navigate(['/']);\n          }\n\n        }\n        else {\n          this.router.navigate(['/login']);\n        }\n      });\n    });\n\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  // fuc to navigate user to login page if user is on another page\n  navigateToRegisterPage = () => {\n    this.router.navigate([UkanAppRoutes.REGISTER]);\n  }\n  // show and hidden password\n  showHidePassword1() {\n    this.show = !this.show;\n  }\n\n\n  keytab(event, maxLength) {\n    let nextInput = event.srcElement.nextElementSibling; // get the sibling element\n\n    var target = event.target || event.srcElement;\n    var id = target.id\n    // console.log(id.maxlength); // prints undefined\n\n    if (nextInput == null)  // check the maxLength from here\n      return;\n    else\n      nextInput.focus();   // focus if not null\n  }\n\n  loginAnalytics(eventName) {\n    let email = localStorage.getItem('email');\n    let token = localStorage.getItem('access_token');\n    let userid = localStorage.getItem('userid');\n    let date: Date;\n    // analytics.logEvent(eventName, {\n    //   id: token,\n    //   deviceId: userid,\n    //   email: email,\n    //   date: date\n    // });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from '../login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class LoginModule { }\n"]}