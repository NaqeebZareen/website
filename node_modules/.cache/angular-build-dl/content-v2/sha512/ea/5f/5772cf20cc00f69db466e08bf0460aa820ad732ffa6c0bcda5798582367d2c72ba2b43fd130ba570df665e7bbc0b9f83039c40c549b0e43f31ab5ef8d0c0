{"version":3,"sources":["webpack:///src/app/shared/listingcard/listingcard.component.html","webpack:///src/app/shared/listingcard/listingcard.component.ts","webpack:///src/app/components/interestlisting/interestlisting.component.html","webpack:///src/app/components/interestlisting/interestlisting-module/interestlisting-routing.module.ts","webpack:///src/app/components/interestlisting/interestlisting.component.ts","webpack:///src/app/shared/listingcard/listingcard-module/listingcard-routing.module.ts","webpack:///src/app/shared/listingcard/listingcard-module/listingcard.module.ts","webpack:///src/app/components/interestlisting/interestlisting-module/interestlisting.module.ts"],"names":["ListingcardComponent","socialAuthService","srvJwthelperService","srvLoggingService","srvLocalStorageFactory","router","srvActivityService","shareObj","href","this","url1","hashtag","unsubscribe","Subject","addToWishList","isLogin","verifyToken","localStorage","getItem","objAddToWishList","activity_id","activity","id","is_wishlist","is_hosting","show","addToWishlistEndpointDelete","pipe","takeUntil","subscribe","res","error","addToWishlistEndpoint","addEventLog","navigate","getUserProfilePic","picture","action","objIEventLog","user_id","getfromLocalStorage","USER_ID","user_ip","IP","category","city","CITY","country","COUNTRY","controller","session_id","SESSION_ID","page","Event_SaveLogs","console","log","IsPropertyExist","undefined","mover","urlCategory","urltitle","facebookSharing","url","activityStartTime","moment","start_time","format","activityTimePeriods","title","split","slice","join","next","complete","routes","path","component","InterestlistingComponent","doc","meta","seoService","activatedroute","newlyAddedList","activitiesName","sports","music","adventure","family","health","business","tourism","autos","gaming","arts","fashion","tech","food","politics","charity","navigateToSearchPage","popActivity","setPageTitle","createLinkForCanonicalURL","getPageTitle","params","homesugested","head","pageTitle","interest","Add_Filters","searchPhrase","date","getActivitiesListing","then","data","getMetaData","URL","setTitle","meta_title","updateTag","name","content","meta_description","content_box","InterestlistingRoutingModule","forChild","ListingcardRoutingModule","ListingcardModule","InterestlistingModule"],"mappings":"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","file":"x","sourcesContent":["<div class=\"row ml-1 mr-1 mb-4 main-wrapper \">\n\n  <div class=\"col-12 section-first p-0\">\n    <!-- [routerLink]=\"['activity-details', urlCategory, urltitle,activity.id]\" -->\n    <a (click)=\"mover()\">\n      <img [src]=\"activity.picture\" class=\"image\" alt=\"activity\"></a>\n\n\n  </div>\n\n  <div class=\"col-12 section-second \">\n    <div class=\"row\">\n      <div class=\"col-2 spc\">\n        <span style=\"color: #466ce4;font-weight: bold;\">{{ activity.end_date | date: ' MMM' }}</span>\n\n        <span class=\"spc1\" style=\"\">\n          {{ activity.end_date | date: 'dd' }}</span>\n      </div>\n      <div class=\"col-10\">\n\n        <div class=\"title hi\">\n          <a class=\"hi1\" (click)=\"mover()\">\n            {{ activity.title | slice: 0:22 }}...\n          </a>\n        </div>\n\n        <div class=\"title spc2\" style=\"\">\n\n          <a style=\"text-decoration: none;\" (click)=\"mover()\">\n            {{ activity.title | slice: 0:50 }}\n          </a>\n\n        </div>\n        <div class=\"date fin2\" style=\"\">\n          {{ activity.end_date | date: 'EEEE' }} , <span>{{activityStartTime}}: {{activityTimePeriods}}</span>\n          <!-- <span *ngIf=\"!this.activity.is_free\">paid</span> -->\n        </div>\n      </div>\n    </div>\n\n    <div class=\"row\" style=\"margin-top: 10px;\">\n      <div class=\"col-12\">\n        <!-- <img src=\"../../../assets/searchPlace.svg\" alt=\"search\" width=\"20px\">\n        <span class=\"ml-2\">{{ activity.city }}</span> -->\n        <hr style=\"margin-bottom: 3px;opacity: 0.3; color: #EEEBF2;\">\n        <div class=\"row no-gutters\" style=\"height: 55px;\">\n          <div class=\"col-6\">\n            <div class=\"abc\" style=\"\">\n              <img src=\"../../../assets/Website_Icons/source.png\" alt=\"Avatar\" class=\"image1\">\n              <div class=\"overlay\">\n                <div class=\"text\">\n                  <a class=\"text new\" style=\"padding-left: 30px; width: 90px; color: black;height: 20px;\"\n                    href=\"{{activity.source_link}}\">{{activity.source_link}}</a>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"col-6\">\n\n            <div class=\"abc1\">\n              <a style=\"cursor:pointer;\" (click)=\"addToWishList()\">\n                <span style=\"padding-right: 25px; cursor: pointer;\">\n                  <img *ngIf=\"activity.is_wishlist === false\" src=\"../../../assets/Website_Icons/starred.png\" alt=\"\"\n                    width=\"28px\">\n                  <img *ngIf=\"activity.is_wishlist === true\" src=\"../../../assets/Website_Icons/star_selected.svg\"\n                    alt=\"\" width=\"28px\">\n                </span>\n              </a>\n\n              <span class=\"dropdown-toggle wid\" data-toggle=\"dropdown\" Dropdown button>\n                <img style=\"cursor: pointer;\" src=\"../../../assets/Website_Icons/shared.png\" alt=\"\" width=\"28px\"></span>\n\n              <div class=\"dropdown-menu\" style=\"min-width: 12rem;\">\n\n                <button class=\"fa fa-facebook\" (click)=\"facebookSharing(shareObj)\"> </button>\n\n                <a class=\"fa fa-twitter\" href=\"https://twitter.com/intent/tweet?url={{url}}\">\n                </a>\n\n\n                <a href=\"https://www.linkedin.com/shareArticle?mini=true&url={{url}}&title=YOUCANACTIVITY&summary=YourarticleSummary&source=YourarticleSource\"\n                  class=\"fa fa-linkedin\"></a>\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>","\nimport {\n  Component,\n  OnInit,\n  Input,\n  OnDestroy,\n  AfterContentChecked\n} from '@angular/core';\nimport { PopularActivity } from 'src/app/models/popular-activity';\nimport * as moment from 'moment';\nimport { IEventLog } from 'src/app/models/event-log';\nimport { Subject } from 'rxjs';\nimport { JwtHelper } from 'src/app/services/jwtHelper/jwt-helper.service';\nimport { LoggingService } from 'src/app/services/loggingFactory/logging-service.service';\nimport { LocalStorageFactoryService } from 'src/app/services/localStorageFactory/local-storage-factory.service';\nimport { Router } from '@angular/router';\nimport { DBkeys } from 'src/app/services/dbkeys/db-keys';\nimport { takeUntil } from 'rxjs/operators';\nimport { IAddToWishList } from 'src/app/models/api-request-model/add-to-wish-list';\nimport { ActivityService } from 'src/app/services/activityFactory/activity.service';\nimport {\n  SocialService,\n  FacebookLoginProvider,\n  GoogleLoginProvider\n} from \"ngx-social-button\";\n@Component({\n  selector: 'app-listingcard',\n  templateUrl: './listingcard.component.html',\n  styleUrls: ['./listingcard.component.css']\n})\nexport class ListingcardComponent implements OnInit, OnDestroy, AfterContentChecked {\n\n  public show: boolean;\n  public activityStartTime: string;\n  public activityTimePeriods: string;\n  public page: string;\n  public controller: string;\n  public objIEventLog: IEventLog;\n  public objAddToWishList: IAddToWishList;\n  // subject to unsubscibe from obserable\n  public url1: any;\n  public shareObj = {\n    href: this.url1,\n    hashtag: \"#YOUCAN\"\n  };\n  public url: any;\n\n  public unsubscribe = new Subject<void>();\n  public urltitle: any;\n  public urlCategory: any;\n  constructor(private socialAuthService: SocialService, private srvJwthelperService: JwtHelper, private srvLoggingService: LoggingService, private srvLocalStorageFactory: LocalStorageFactoryService,\n    private router: Router, private srvActivityService: ActivityService) {\n    this.objIEventLog = new IEventLog();\n    this.objAddToWishList = new IAddToWishList();\n  }\n\n  public facebookSharing(shareObj: any) {\n    // console.log(shareObj, \"obj1\");\n\n\n    this.socialAuthService.facebookSharing(shareObj);\n  }\n  public twitterSharing(shareObj: any) {\n    // console.log(shareObj, \"obj1\");\n\n    this.socialAuthService.facebookSharing(shareObj);\n  }\n  @Input() activity: PopularActivity;\n\n  ngOnInit() {\n    // console.log(this.activity);\n    // var str = this.activity.picture;\n    // var strFirstThree = str.substring(0, 3);\n\n    // // console.log(str); //shows '012123'\n    // // console.log(strFirstThree);\n    // if (strFirstThree === \"?v=\") {\n    //   this.activity.picture = null;\n    // }\n    // console.log(this.activity);\n    if (this.activity.id === \"923398\") {\n      // console.log(this.activity.end_date);\n    }\n    this.controller = \"PopularCard\"\n    this.page = this.page = this.router.url;\n    // call to IsPropertyExist to check whather to hide or show image\n    this.IsPropertyExist();\n    this.activityStartTime = moment(this.activity.start_time, 'HH:mm').format('h:mm');\n    this.activityTimePeriods = moment(this.activity.start_time, 'HH:mm').format('A');\n\n    // this.activity.is_wishlist = true;\n\n    this.url1 = \"https://www.youcan.tech/#/activity-details/\" + this.activity.id;\n    this.url = \"https://www.youcan.tech/%23/activity-details/\" + this.activity.id;\n    // console.log(this.page);\n    // this.myTitle = \"/activity-details/851965/false\";\n    // console.log(this.url);\n\n    this.shareObj.href = this.url1;\n    // this.shareObjTwitter.href = this.url;\n    this.urltitle = this.activity.title.split(' ').slice(0, 4).join('-');\n    this.urlCategory = this.activity.category.split(' ').join('-');\n    if (this.activity.id === \"941009\") {\n      // console.log(this.activity);\n    }\n  }\n\n  // updateUrl(event) {\n  //   // console.log(event, this.activity.id, this.activity.title);\n  //   this.activity.picture = '../../../assets/list_img.png';\n  // }\n  // add to wish list .. \n  // here is problem in this api call \n\n  addToWishList = () => {\n\n    const isLogin = this.srvJwthelperService.verifyToken();\n    const email = localStorage.getItem('email');\n    if (isLogin) {\n      this.objAddToWishList.activity_id = this.activity.id;\n      this.objAddToWishList.is_wishlist = this.activity.is_wishlist;\n      this.objAddToWishList.is_hosting = this.activity.is_hosting;\n\n\n\n      if (this.activity.is_wishlist) {\n        // remove from wish list if wishlisted\n\n        this.show = false;\n        this.srvActivityService.addToWishlistEndpointDelete(this.activity.id).pipe(takeUntil(this.unsubscribe))\n          .subscribe(res => {\n\n            this.show = false;\n            this.activity.is_wishlist = false;\n          }, error => {\n            this.activity.is_wishlist = true;\n            this.show = false;\n          });\n      } else {\n        // add to wish list \n        this.show = true;\n\n        this.objAddToWishList.is_wishlist = true;\n        this.srvActivityService.addToWishlistEndpoint(this.activity.id).pipe(takeUntil(this.unsubscribe))\n          .subscribe(res => {\n\n            this.show = true;\n            this.activity.is_wishlist = true;\n\n          }, error => {\n\n            this.activity.is_wishlist = false;\n            // console.log(\"error NQ\");\n            this.show = false;\n          });\n      }\n      // track user \n      this.addEventLog('add to wishlist')\n    } else {\n      this.show = false;\n      this.router.navigate([\"/login\"]);\n\n    }\n\n\n\n  }\n  // get image if not then return default..\n  getUserProfilePic = () => {\n    if (this.activity.picture) {\n      return this.activity.picture;\n    } else {\n      return (this.activity.picture =\n        '../../../assets/default-placeholder-300x300.png');\n    }\n  }\n\n  // fuc to track user actions .\n  addEventLog = (action) => {\n    this.objIEventLog.user_id = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.USER_ID);\n    this.objIEventLog.user_ip = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.IP);\n    this.objIEventLog.action = action;\n    this.objIEventLog.category = 'button click';\n    this.objIEventLog.city = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.CITY);\n    this.objIEventLog.country = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.COUNTRY);\n    this.objIEventLog.controller = this.controller;\n    this.objIEventLog.session_id = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.SESSION_ID);\n    this.objIEventLog.page = this.page;\n\n    this.srvLoggingService.Event_SaveLogs(this.objIEventLog).pipe(takeUntil(this.unsubscribe)).subscribe(res => {\n\n    }, error => console.log(error));\n\n  }\n  // if user not login we will get object without is_wishlist property so for that reason we check if not exist so that we\n  // take descion whether to hide or show wishlist image\n  IsPropertyExist = () => {\n    if (this.activity.is_wishlist == undefined) {\n      if (this.activity['is_wishlist']) {\n        this.show = true;\n      } else {\n        this.show = false;\n      }\n    } else {\n      this.show = false;\n    }\n  }\n  // you have to tell angular that you updated the content after ngAfterContentChecked you can\n  // else we will get error ExpressionChangedAfterItHasBeenCheckedError: if we call fuc not in ngafterC\n  ngAfterContentChecked(): void {\n    // this.activity.picture = this.getUserProfilePic();\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  mover = () => {\n    this.router.navigate(['activity-details', this.urlCategory, this.urltitle, this.activity.id]);\n  }\n\n}\n","<div class=\"row mb-5\">\n    <div class=\"col-12\">\n        <div class=\"container mb-2\">\n            <div class=\"mt-2 mb-5 mt-4 home-wrapper-header home-wrapper-header2\">\n                <h4 class=\"header-title\" style=\"font-weight: bold;\">{{head}}</h4>\n            </div>\n            <!-- <app-explore-more-cities></app-explore-more-cities> -->\n            <!-- <app-activity-list></app-activity-list> -->\n            <div id=\"Gridview\">\n                <!-- <h4 class=\"header-title\" style=\"font-weight: bold;font-size: 24px;margin-bottom: 30px;\"> {{activity.category}}\n                    <span style=\"cursor: pointer; text-decoration: none;\">\n                      <a (click)=\"navigateToSearchPage(activity.category)\"\n                        style=\"color: green; font-weight: normal;text-decoration: none;\">See\n                        all</a></span>\n                  </h4> -->\n                <div id='Space' class=\"row\">\n                    <!--  -->\n\n                    <div *ngFor=\"let activity of newlyAddedList\" class=\"col-lg-3 col-md-6 col-12 card-size mb-4\">\n                        <app-listingcard [activity]=\"activity\"></app-listingcard>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { InterestlistingComponent } from '../interestlisting.component';\n\n\nconst routes: Routes = [\n  {\n    path: '', component: InterestlistingComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InterestlistingRoutingModule { }\n","import { Component, OnInit, ViewChild, Renderer2, Inject } from '@angular/core';\n// import { DOCUMENT } from '@angular/common';\n\nimport { ActivityListComponent } from 'src/app/shared/activity-list/activity-list.component';\nimport { AccountService } from 'src/app/services/account/account.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { EndpointFactoryService } from 'src/app/services/endpontFactory/endpoint-factory.service';\nimport { PopularList } from 'src/app/models/popular-list';\nimport { IEventLog } from 'src/app/models/event-log';\nimport { Subject, timer } from 'rxjs';\nimport { JwtHelper } from 'src/app/services/jwtHelper/jwt-helper.service';\nimport { LoggingService } from 'src/app/services/loggingFactory/logging-service.service';\nimport { LocalStorageFactoryService } from 'src/app/services/localStorageFactory/local-storage-factory.service';\nimport { ActivityService } from 'src/app/services/activityFactory/activity.service';\nimport { DBkeys } from 'src/app/services/dbkeys/db-keys';\nimport { takeUntil } from 'rxjs/operators';\nimport { SEOService } from '../../services/SEOService/seo.service';\nimport { Title, Meta } from '@angular/platform-browser';\nimport { DOCUMENT } from '@angular/common';\n@Component({\n  selector: 'app-interestlisting',\n  templateUrl: './interestlisting.component.html',\n  styleUrls: ['./interestlisting.component.css']\n})\nexport class InterestlistingComponent implements OnInit {\n\n  public newlyAddedList: PopularList[] = [];\n  public page: string;\n  public popActivity: PopularList;\n  public controller: string;\n  public loadingFlag: boolean;\n  public objIEventLog: IEventLog;\n  public urltitle: any;\n  public city: any;\n  public interest: any;\n  public pageTitle: any;\n  show = true;\n  // subject to unsubscibe from obserable\n  public unsubscribe = new Subject<void>();\n  public head: any;\n  public activitiesName = {\n    sports: 'Sports',\n    music: 'Music and Concerts',\n    adventure: 'Outdoor Activities',\n    family: 'Family and Kids',\n    health: 'Health and Fitness',\n    business: 'Socialization and Networking',\n    tourism: 'Sightseeing and Tourism',\n    autos: 'Books and Hobbies',\n    gaming: 'Books and Hobbies ',\n    arts: 'Arts and Performance',\n    fashion: 'Shopping and Fashion',\n    tech: 'Tech and Workshops',\n    food: 'Food and Festival',\n    politics: 'Politics',\n    charity: 'Charity and Volunteer work'\n  };\n  constructor(\n    @Inject(DOCUMENT) private doc, private meta: Meta, private title: Title, private seoService: SEOService, private activatedroute: ActivatedRoute, private srvJwthelperService: JwtHelper, private srvLoggingService: LoggingService,\n    private srvLocalStorageFactory: LocalStorageFactoryService, private router: Router,\n    private srvActivityService: ActivityService) {\n    this.objIEventLog = new IEventLog();\n\n\n    this.popActivity = new PopularList;\n  }\n  ngOnInit() {\n\n    this.setPageTitle('InterestListing');\n    this.createLinkForCanonicalURL();\n    this.getPageTitle();\n    // timer(3000).subscribe(x => {\n    //   this.homesugested();\n    // });\n    this.activatedroute.params.subscribe(params => {\n      this.urltitle = params[\"urltitle\"];\n\n      // we get string we need to convert to boolean\n      // console.log(this.activityId);\n      // if (String(params[\"ishosting\"]).toLowerCase() === 'true') {\n      //   this.isHosting = true;\n      // } else {\n      //   this.isHosting = false;\n      // }\n\n    });\n    // console.log(this.urltitle);\n\n    this.homesugested(this.urltitle);\n    this.head = this.urltitle;\n    this.head = this.head.split('-').join(' ');\n\n\n\n\n  }\n\n  setPageTitle(title: string) {\n    this.seoService.setPageTitle(title);\n  }\n  getPageTitle() {\n    this.pageTitle = this.seoService.getPageTitle();\n  }\n  createLinkForCanonicalURL() {\n    this.seoService.createLinkForCanonicalURL();\n  }\n  async homesugested(title: any) {\n    if (title === \"San Francisco\" || title === 'London' || title === 'Austin' || title === 'New York' || title === 'Pittsburgh' || title === 'San Jose' || title === 'Silicon Valley' || title === 'Washington DC' || title === 'Chicago') {\n      this.city = title;\n      this.interest = null;\n      var searchPhrase;\n      var date;\n      var interest = 'unknown';\n      var city = this.city;\n      this.srvLoggingService.Add_Filters(searchPhrase, date, interest, city).subscribe(res => { });\n    }\n    else {\n      this.interest = title;\n      var searchPhrase;\n      var date;\n      interest = this.interest;\n      city = \"unknown\";\n      this.srvLoggingService.Add_Filters(searchPhrase, date, interest, city).subscribe(res => { });\n    }\n    var access_token = localStorage.getItem('access_token');\n    // var city = localStorage.getItem('city');\n\n    this.srvActivityService.getActivitiesListing(this.city, this.interest).then(res => {\n      // console.log(res);\n      this.newlyAddedList = res['response'].data;\n      // for (let z of this.newlyAddedList) {\n      //   console.log(z);\n      // }\n      // console.log(this.newlyAddedList);\n    });\n  }\n  // fuc to track user actions .\n  navigateToSearchPage = () => {\n    this.router.navigate(['/search']);\n\n  }\n  addEventLog = (action) => {\n    this.objIEventLog.user_id = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.USER_ID);\n    this.objIEventLog.user_ip = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.IP);\n    this.objIEventLog.action = action;\n    this.objIEventLog.category = 'Button click';\n    this.objIEventLog.city = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.CITY);\n    this.objIEventLog.country = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.COUNTRY);\n    this.objIEventLog.controller = this.controller;\n    this.objIEventLog.session_id = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.SESSION_ID);\n    this.objIEventLog.page = this.page;\n\n    this.srvLoggingService.Event_SaveLogs(this.objIEventLog).pipe(takeUntil(this.unsubscribe)).subscribe(res => {\n\n    }, error => console.log(error));\n\n  }\n  ngOnDestroy(): void {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  ngAfterViewInit() {\n    var url = this.doc.URL;\n    // var url = \"https://www.youcan.tech/activities/Food-&-festival\";\n    // console.log(url);\n    this.seoService.getMetaData(url).subscribe(res => {\n      // console.log(res);\n      // console.log(res['response'].data['meta'][0].meta_description);\n      this.title.setTitle(res['response'].data['meta'][0].meta_title);\n      this.meta.updateTag({ name: 'description', content: res['response'].data['meta'][0].meta_description });\n      this.meta.updateTag({ name: 'content_box', content: res['response'].data['meta'][0].content_box });\n    });\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ListingcardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ListingcardRoutingModule } from './listingcard-routing.module';\nimport { ListingcardComponent } from '../listingcard.component'\nimport { from } from 'rxjs';\n\n@NgModule({\n  declarations: [ListingcardComponent],\n  imports: [\n    CommonModule,\n    ListingcardRoutingModule\n  ]\n  ,\n  exports: [ListingcardComponent]\n})\nexport class ListingcardModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InterestlistingComponent } from '../interestlisting.component';\nimport { InterestlistingRoutingModule } from './interestlisting-routing.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// import { ActivityListModule } from 'src/app/shared/activity-list/activity-list-module/activity-list.module';\n\nimport { ListingcardModule } from '../../../shared/listingcard/listingcard-module/listingcard.module';\n\n@NgModule({\n  declarations: [InterestlistingComponent],\n  imports: [\n    CommonModule,\n    InterestlistingRoutingModule,\n    // ActivityListModule,\n    NgbModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ListingcardModule\n  ]\n})\nexport class InterestlistingModule { }\n"]}