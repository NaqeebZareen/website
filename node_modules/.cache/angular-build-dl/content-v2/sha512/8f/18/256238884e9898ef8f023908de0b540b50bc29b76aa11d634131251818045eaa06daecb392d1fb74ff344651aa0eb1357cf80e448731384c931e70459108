{"version":3,"sources":["webpack:///src/app/shared/city/city-module/city-routing.module.ts","webpack:///src/app/shared/city/city-module/city.module.ts","webpack:///src/app/shared/city/city.component.ts","webpack:///src/app/shared/city/city.component.html","webpack:///src/app/shared/date/date/date-routing.module.ts","webpack:///src/app/shared/date/date/date.module.ts","webpack:///src/app/shared/suggested-cities/suggested-cities-module/suggested-cities-routing.module.ts","webpack:///src/app/shared/suggested-cities/suggested-cities-module/suggested-cities.module.ts","webpack:///src/app/shared/suggested-cities/suggested-cities.component.ts","webpack:///src/app/shared/suggested-cities/suggested-cities.component.html","webpack:///src/app/shared/suggestedinterests/suggested-interest/suggested-interest-routing.module.ts","webpack:///src/app/shared/suggestedinterests/suggested-interest/suggested-interest.module.ts","webpack:///src/app/shared/suggestedinterests/suggestedinterests.component.ts","webpack:///src/app/shared/suggestedinterests/suggestedinterests.component.html"],"names":["routes","CityRoutingModule","forChild","imports","exports","CityModule","declarations","CityComponent","notify","selectedCity","city","emit","selector","templateUrl","styleUrls","DateRoutingModule","MY_NATIVE_FORMATS","fullPickerInput","year","month","day","datePickerInput","timePickerInput","hour","minute","monthYearLabel","dateA11yLabel","monthYearA11yLabel","DateModule","forRoot","SuggestedCitiesRoutingModule","SuggestedCitiesModule","SuggestedCitiesComponent","SuggestedInterestRoutingModule","SuggestedInterestModule","SuggestedinterestsComponent","zone","changeDetector","srvLocalStorageFactory","srvLoggingService","isLogin","unsubscribe","selectedInterest","userChoice","searchPhrase","date","interest","Add_Filters","subscribe","res","addEventLog","action","objIEventLog","user_id","getfromLocalStorage","USER_ID","user_ip","IP","category","CITY","country","COUNTRY","controller","session_id","SESSION_ID","page","Event_SaveLogs","pipe","error","console","log","next","complete"],"mappings":"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","file":"default~components-news-news-module-news-module~components-search-search-module-search-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CityRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CityRoutingModule } from './city-routing.module';\nimport { CityComponent } from '../city.component';\n\n@NgModule({\n  declarations: [CityComponent],\n  imports: [\n    CommonModule,\n    CityRoutingModule\n  ],\n  exports: [CityComponent]\n})\nexport class CityModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-city',\n  templateUrl: './city.component.html',\n  styleUrls: ['./city.component.css']\n})\nexport class CityComponent implements OnInit {\n\n  constructor() { }\n  // receiving input data from other components\n  @Input() public city: string;\n  @Input() public cityColorFlag: boolean; // also if in future want to highlight city in listed cities\n  @Output() public notify = new EventEmitter();\n\n  ngOnInit() {\n  }\n  // user choice city fnc ....\n  selectedCity = (city: any) => {\n    this.notify.emit(city);\n  }\n\n}\n","<div (click)=\"selectedCity(city)\" style=\"cursor: pointer;font-family: Gilroy-Medium\">\n  {{city}}\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DateRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DateRoutingModule } from './date-routing.module';\nimport { DateComponent } from '../date.component';\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\n// import { OwlDateTimeModule, OwlNativeDateTimeModule, OWL_DATE_TIME_FORMATS } from \"ng-pick-datetime\";\n\n// this for to remove time from date in owl date time formate\nexport const MY_NATIVE_FORMATS = {\n  fullPickerInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n  datePickerInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n  timePickerInput: { hour: 'numeric', minute: 'numeric' },\n  monthYearLabel: { year: 'numeric', month: 'short' },\n  dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n  monthYearA11yLabel: { year: 'numeric', month: 'long' },\n};\n\n@NgModule({\n  declarations: [DateComponent],\n  imports: [\n    CommonModule,\n    DateRoutingModule,\n    BsDatepickerModule.forRoot(),\n    NgbModule,\n    FormsModule,\n    // OwlDateTimeModule, OwlNativeDateTimeModule\n  ],\n  exports: [DateComponent],\n  // providers: [\n  //   { \n  //     provide: \n  //     OWL_DATE_TIME_FORMATS, useValue: MY_NATIVE_FORMATS \n  //   }]\n})\nexport class DateModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SuggestedCitiesRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SuggestedCitiesRoutingModule } from './suggested-cities-routing.module';\nimport { SuggestedCitiesComponent } from '../suggested-cities.component';\nimport { CityModule } from '../../city/city-module/city.module';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [SuggestedCitiesComponent],\n  imports: [\n    CommonModule,\n    SuggestedCitiesRoutingModule,\n    CityModule,\n    NgbModule,\n  ],\n  exports: [SuggestedCitiesComponent]\n})\nexport class SuggestedCitiesModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-suggested-cities',\n  templateUrl: './suggested-cities.component.html',\n  styleUrls: ['./suggested-cities.component.css']\n})\nexport class SuggestedCitiesComponent implements OnInit {\n\n  constructor() { }\n  // receiving input data from other components\n  @Input() public cityColorFlag: boolean;\n  @Input() public choosenCity: string;\n  @Input() public suggestedCities: any;\n\n  @Output() public notify = new EventEmitter();\n\n  ngOnInit() {\n  }\n\n  // user choice city fnc ....\n  selectedCity = (city: any) => {\n    this.notify.emit(city);\n  }\n}\n","<div ngbDropdown *ngIf=\"\">\n  <button *ngIf=\"choosenCity!==''\" class=\"btn city-bgColor text-left\" id=\"dropdownBasic1\" ngbDropdownToggle>\n    <span class=\"search-font\"\n      [ngClass]=\"[cityColorFlag && choosenCity!='City' ? 'green' : 'white']\">{{choosenCity}}</span>\n    <span class=\"float-right\">\n      <i><img src=\"../../../assets/VectorCity.svg\" alt=\"city\"></i>\n    </span>\n  </button>\n  <button *ngIf=\"choosenCity==''\" class=\"btn city-bgColor text-left\" id=\"dropdownBasic1\" ngbDropdownToggle>\n    <span style=\"font-weight: bold;\" class=\"search-font\">\n      <!-- [ngClass]=\"[cityColorFlag && choosenCity != 'City' ? 'green' : 'white']\" -->\n      Select City</span>\n    <span class=\"float-right\">\n      <i><img src=\"../../../assets/VectorCity.svg\" alt=\"city\"></i>\n    </span>\n  </button>\n\n  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\" class=\"search-page\">\n    <button class=\"dropdown-item fontstyle \" *ngFor=\"let city of suggestedCities; let i = index\">\n      <app-city (notify)=\"selectedCity($event)\" [city]=\"city.city\" [cityColorFlag]=\"cityColorFlag\">\n      </app-city>\n    </button>\n  </div>\n</div>\n\n<!-- For Search Component -->\n<div ngbDropdown>\n  <button *ngIf=\"choosenCity!==''\" class=\"btn city-bgColor text-left\" id=\"dropdownBasic1\" ngbDropdownToggle>\n    <span class=\"search-font\">\n      <!-- [ngClass]=\"[cityColorFlag && choosenCity!='City' ? 'green' : 'white']\" -->\n      {{choosenCity}}</span>\n    <span class=\"float-right\">\n      <i><img src=\"../../../assets/VectorCity.svg\" alt=\"city\"></i>\n    </span>\n  </button>\n  <button *ngIf=\"choosenCity==''\" class=\"btn city-bgColor text-left\" id=\"dropdownBasic1\" ngbDropdownToggle>\n    <span style=\"font-weight: bold;\" class=\"search-font\">\n      <!-- [ngClass]=\"[cityColorFlag && choosenCity!='City' ? 'green' : 'white']\" -->\n      Select City</span>\n    <span class=\"float-right\">\n      <i><img src=\"../../../assets/VectorCity.svg\" alt=\"vectorcity\"></i>\n    </span>\n  </button>\n\n  <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\" class=\"search-page1\">\n    <button class=\"dropdown-item fontstyle \" *ngFor=\"let city of suggestedCities; let i = index\">\n      <app-city (notify)=\"selectedCity($event)\" [city]=\"city.city\" [cityColorFlag]=\"cityColorFlag\">\n      </app-city>\n    </button>\n  </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SuggestedInterestRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SuggestedInterestRoutingModule } from './suggested-interest-routing.module';\nimport { SuggestedinterestsComponent } from '../suggestedinterests.component';\n\n@NgModule({\n  declarations: [SuggestedinterestsComponent],\n  imports: [\n    CommonModule,\n    SuggestedInterestRoutingModule\n  ],\n  exports: [SuggestedinterestsComponent]\n})\nexport class SuggestedInterestModule { }\n","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy, NgZone, ChangeDetectorRef } from '@angular/core';\nimport { LocalStorageFactoryService } from 'src/app/services/localStorageFactory/local-storage-factory.service';\nimport { LoggingService } from 'src/app/services/loggingFactory/logging-service.service';\nimport { IEventLog } from 'src/app/models/event-log';\nimport { Subject } from 'rxjs';\nimport { DBkeys } from 'src/app/services/dbkeys/db-keys';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-suggestedinterests',\n  templateUrl: './suggestedinterests.component.html',\n  styleUrls: ['./suggestedinterests.component.css']\n})\nexport class SuggestedinterestsComponent implements OnInit, OnDestroy {\n  // class props\n  public isLogin: boolean = true; // is for to hide some routes from unauthenticated user\n  public controller: string;\n  public page: string;\n  public objIEventLog: IEventLog;\n  // subject to unsubscibe from obserable\n  public unsubscribe = new Subject<void>();\n  // receiving input data from other components\n  @Input() public interest: string;\n  @Output() public notify = new EventEmitter();\n  @Input() public searchInputInterest: any;\n\n\n  constructor(private zone: NgZone, private changeDetector: ChangeDetectorRef, private srvLocalStorageFactory: LocalStorageFactoryService, private srvLoggingService: LoggingService, ) {\n    // we will get error if not initialize \n    this.objIEventLog = new IEventLog();\n\n  }\n\n\n  ngOnInit() {\n\n    // console.log(this.notify);\n\n  }\n\n\n  getValuesFromHome() {\n\n  }\n  // fn to emit user choice interest\n  selectedInterest = (userChoice) => {\n    this.notify.emit(userChoice);\n    var searchPhrase;\n    var date;\n    var interest = userChoice;\n    var city = \"unknown\";\n    this.srvLoggingService.Add_Filters(searchPhrase, date, interest, city).subscribe(res => { });\n  }\n  // fuc to track user actions .\n  addEventLog = (action) => {\n    this.objIEventLog.user_id = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.USER_ID);\n    this.objIEventLog.user_ip = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.IP);\n    this.objIEventLog.action = action;\n    this.objIEventLog.category = 'click select';\n    this.objIEventLog.city = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.CITY);\n    this.objIEventLog.country = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.COUNTRY);\n    this.objIEventLog.controller = this.controller;\n    this.objIEventLog.session_id = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.SESSION_ID);\n    this.objIEventLog.page = this.page;\n\n    this.srvLoggingService.Event_SaveLogs(this.objIEventLog).pipe(takeUntil(this.unsubscribe)).subscribe(res => {\n    }, error => console.log(error));\n\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n}\n","<div class=\"from-group\">\n  <div class=\"type-interest\">\n\n\n    <label style=\"cursor: pointer\">\n      <input class=\"ml-1\" type=\"checkbox\" (click)=\"selectedInterest(interest)\">\n      {{interest}}\n      <span></span>\n\n    </label>\n\n    <!-- \n    <label class=\"container-date ml-2\">Today\n      <input type=\"radio\" name=\"radio\" (change)=\"makeDateActive(false);selectTodayDate()\">\n      <span class=\"checkmark checkmark1\"></span>\n    </label> -->\n\n    <!-- <div *ngif=\"intr.value !=searchInputInterest\">\n      <input class=\"ml-1\" type=\"checkbox\" (click)=\"selectedInterest(interest)\" value=\"option\">\n    \n      <label for=\"option\"><span><span></span></span>{{intr}}</label> \n    </div>\n    -->\n\n  </div>\n</div>"]}