{"version":3,"sources":["./src/app/components/login/login-module/login-routing.module.ts","./src/app/components/login/login-module/login.module.ts","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/models/login.ts"],"names":[],"mappings":"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","file":"components-login-login-module-login-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from '../login.component';\n\nconst routes: Routes = [\n  {\n    path: '', component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from '../login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class LoginModule { }\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ILogin } from 'src/app/models/login';\nimport { Router } from '@angular/router';\nimport { EndpointFactoryService } from 'src/app/services/endpontFactory/endpoint-factory.service';\nimport { DBkeys, UkanAppRoutes } from 'src/app/services/dbkeys/db-keys';\nimport { LocalStorageFactoryService } from 'src/app/services/localStorageFactory/local-storage-factory.service';\nimport { FacebookLoginProvider, GoogleLoginProvider, AuthService } from 'angularx-social-login';\nimport { HttpParams } from '@angular/common/http';\nimport { IToken } from 'src/app/models/token';\nimport { AccountService } from 'src/app/services/account/account.service';\nimport { IpServiceService } from '../../services/ipservice/ip-service.service';\nimport { FormsModule } from '@angular/forms';\n// import * as firebase from 'firebase';\n// var firebaseConfig = {\n//   apiKey: \"AIzaSyDGYqy-W_qQTyrppD51-BF6rk0RtWozZho\",\n//   authDomain: \"youcan-265010.firebaseapp.com\",\n//   databaseURL: \"https://youcan-265010.firebaseio.com\",\n//   projectId: \"youcan-265010\",\n//   storageBucket: \"youcan-265010.appspot.com\",\n//   messagingSenderId: \"506126453626\",\n//   appId: \"1:506126453626:web:9d9948a26263a6f16164c3\",\n//   measurementId: \"G-FX351K4RER\"\n// };\n// import * as firebase from 'firebase';\n// console.log(firebase)\n// firebase.initializeApp(firebaseConfig);\n// const analytics = firebase.analytics();\n// const analytics = firebase.analytics();\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  // props .....\n  show: boolean;\n  userId: string;\n  controller: string;\n  url: string;\n  public objLogin: ILogin;\n  public isLogin: string;\n  private access_token: any;\n  public login1 = \"\";\n  public login_responce: IToken;\n  // subject to unsubscibe from obserable\n  public unsubscribe = new Subject<void>();\n  check: any;\n  public loading: any;\n  public verfication: boolean;\n  public val1: string;\n  public val2: string;\n  public val3: string;\n  public val4: string;\n  public data: string;\n  public verfiy1: boolean = false;\n  public isTrue: boolean;\n  @ViewChild('myInput', { static: true }) myInput: ElementRef;\n  constructor(private ip: IpServiceService, public router: Router,\n    private srvEndpointFactory: EndpointFactoryService, private srvLocalStoragefactory: LocalStorageFactoryService, private socialAuthService: AuthService, private accountService: AccountService) {\n    this.objLogin = new ILogin();\n    this.show = false;\n    this.loading = 0;\n    this.verfication = false;\n\n  }\n  ipAddress: string;\n  ngOnInit() {\n\n    this.objLogin.grant_type = DBkeys.GRANTE_TYPE;\n    this.objLogin.client_id = DBkeys.CLINET_ID;\n    this.objLogin.client_secret = DBkeys.CLIENT_SECRET;\n\n    // console.log(this.getIP());\n\n\n\n  }\n\n  // getPosition(): Promise<any> {\n  //   return new Promise((resolve, reject) => {\n\n  //     navigator.geolocation.getCurrentPosition(resp => {\n\n  //       resolve({ lng: resp.coords.longitude, lat: resp.coords.latitude });\n\n  //       // console.log(resolve);\n  //     },\n  //       err => {\n  //         reject(err);\n  //         // console.log(resolve);\n  //       });\n  //   });\n\n\n  // }\n  // getIP() {\n  //   this.ip.getIPAddress().subscribe((res: any) => {\n  //     console.log(res);\n  //     this.ipAddress = res.ip;\n  //     console.log(this.ipAddress);\n  //     // var geoip = require('geoip-lite');\n  //     // var geo = geoip.lookup(this.ipAddress);\n  //     // console.log(geo);\n  //   });\n\n  // }\n\n  login = () => {\n    this.loading = 1;\n    this.isTrue = true;\n    // console.log(this.objLogin.username, \"email\");\n    this.srvEndpointFactory.getLoginEndpoint(this.objLogin.username).subscribe(res => {\n      // console.log(res, \"simple res\");\n\n      this.check = res['response'].message;\n      // console.log(this.check);\n      if (this.check === \"Email sent to user succesfully\") {\n        this.verfication = true;\n        // this.loginAnalytics(\"login_with_Email\");\n        // this.srvLocalStoragefactory.writeEmailtoLocal(this.objLogin.username);\n      }\n      else {\n        this.verfication = true;\n      }\n      // this.check.access_token['status'];\n      // console.log(this.check.access_token['status']);\n\n      // if (this.check.access_token['status'] !== \"This email does not exist\") {\n      //   // console.log(res, \"i am login\");\n      //   this.srvLocalStoragefactory.writeTokenToLocalStorage(res.access_token, res.refresh_token, res.expires_in);\n      //   this.srvEndpointFactory.isLoginSubject.next(true);\n      //   // navigate to home component\n      //   this.router.navigate(['/']);\n      // } else {\n      //   // console.log(\"i am invalid\");\n      //   this.loading = 0;\n      //   this.isLogin = \"You have entered an invalid email or password\";\n      // }\n\n    });\n    //, error => {\n    //   this.loading = 0;\n    //   this.isLogin = \"You have entered an invalid email or password\";\n    //   // console.log('error login')\n    //   this.srvLocalStoragefactory.removeTokenFromLocalStorage();\n    //   this.srvEndpointFactory.isLoginSubject.next(false);\n    // });;\n  }\n  // OnInput(value) {\n  //   // console.log()\n  //   this.val1 = value;\n  //   console.log(this.val1);\n  //   this.data.push(this.val1)\n  // }\n  verify = () => {\n    this.loading = 1;\n    this.data = this.val1;\n    this.data = this.data + this.val2;\n    this.data = this.data + this.val3;\n    this.data = this.data + this.val4;\n    // console.log(this.data, \"code\");\n    let x: boolean = false;\n    // console.log(\"viewss\");\n    this.srvEndpointFactory.sendVerificationCode(this.data, this.objLogin.username).subscribe(res => {\n      // console.log(res['response'].data);\n      // if (res == null) {\n\n      // }\n      // else {\n      // console.log(res, \"simple res veri\");\n      this.check = res['response'].data['token'];\n      x = true;\n      // console.log(this.check);\n      if (this.check != null) {\n        this.srvLocalStoragefactory.writeEmailtoLocal(this.objLogin.username);\n        this.srvLocalStoragefactory.writetokenWithEmail(this.check);\n        this.loginAnalytics(\"email_login\");\n\n        if (this.check === null) {\n          this.loading = 0;\n          // this.login = \"The email you entered did not match our records. Please try again.\";\n          this.login1 = \"You have entered an invalid email or password\";\n        } else {\n          let var1;\n          // console.log(this.check, \"ist\");\n          this.accountService.getUserProfileInfoEndpoint(this.check).subscribe(res => {\n            // console.log(res, \"1\");\n            var1 = res['response'].data;\n            // console.log(var1, \"2\");\n            this.srvLocalStoragefactory.writeWholeObjecttolocalStorage(var1);\n\n          },\n            err => {\n              let error_stack = JSON.stringify(err.error);\n              let error_level = err.status.toString();\n              let error_message = err.message;\n            }\n\n          );\n          this.router.navigate(['/']);\n\n        }\n      }\n      else {\n        this.verfication = false;\n        this.loading = 0;\n        this.isLogin = \"You have entered an invalid or Expire Token, Please enter your email again\";\n        // console.log('error login')\n        this.srvLocalStoragefactory.removeTokenFromLocalStorage();\n        this.srvEndpointFactory.isLoginSubject.next(false);\n      }\n\n\n\n    });\n\n    if (x === false) {\n      // console.log(\"viewa\");\n      this.verfication = true;\n      // console.log(this.verfiy1);\n      this.verfiy1 = true;\n    }\n\n  }\n  // go back to home page\n  goBack = () => {\n    this.router.navigate(['/']);\n  }\n  back = () => {\n    this.verfication = false;\n    this.loading = 0;\n  }\n\n  socialSignIn(socialPlatform: string) {\n    let socialPlatformProvider;\n    // if (socialPlatform == \"facebook\") {\n    //   socialPlatformProvider = FacebookLoginProvider.PROVIDER_ID;\n    // } else \n\n    if (socialPlatform == \"google\") {\n      console.log(\"ssss\");\n      socialPlatformProvider = GoogleLoginProvider.PROVIDER_ID;\n      console.log(socialPlatformProvider);\n    }\n\n    console.log(\"send call\");\n    this.socialAuthService.signIn(GoogleLoginProvider.PROVIDER_ID).then(userData => {\n\n      // this.access_token = this.srvLocalStoragefactory.getTokenFromLocalStorage();\n      // console.log(socialPlatform + \" sign in data : \", userData);\n      this.loading = 1;\n      let body = new HttpParams();\n      body = body.set(\"method\", socialPlatform);\n      body = body.set(\"name\", userData.name);\n      body = body.set(\"picture\", userData.photoUrl);\n      body = body.set(\"method_id\", userData.id);\n      body = body.set(\"token\", userData.idToken);\n      body = body.set(\"email\", userData.email);\n      this.srvEndpointFactory.getSocialLoginEndpoint(userData.email).subscribe(res => {\n        this.check = res['response'].data['token'];\n\n        // console.log(this.check);\n        // console.log(this.check.result.access_token);\n        //  console.log(this.check.result.access_token);\n        if (this.check !== \"null\") {\n          //  console.log(\"helo login\");\n\n          this.srvLocalStoragefactory.writeEmailtoLocal(userData.email);\n          this.login1 = \"get access token from backend but ssl require google login\";\n          this.srvLocalStoragefactory.writetokenWithEmail(this.check);\n          this.login1 = \"Successful\";\n\n          this.loginAnalytics(\"login_with_google_pressed\");\n          //  this.messageservice.logout();\n          // if (this.login_responce.error == \"null\") {\n          //   this.loading = 0;\n          //   // this.login = \"The email you entered did not match our records. Please try again.\";\n          //   this.login = this.login_responce.error.toString();\n          // }\n          // added code for test\n          if (this.check === null) {\n            this.loading = 0;\n            // this.login = \"The email you entered did not match our records. Please try again.\";\n            this.login1 = \"You have entered an invalid email or password\";\n          } else {\n            let var1;\n            this.accountService.getUserProfileInfoEndpoint(this.check).subscribe(res => {\n              // console.log(res, \"111\");\n              var1 = res['response'].data;\n              // console.log(var1, \"2\");\n              this.srvLocalStoragefactory.writeWholeObjecttolocalStorage(var1);\n\n            },\n              err => {\n                let error_stack = JSON.stringify(err.error);\n                let error_level = err.status.toString();\n                let error_message = err.message;\n              }\n\n            );\n            this.router.navigate(['/']);\n          }\n\n        }\n        else {\n          this.router.navigate(['/login']);\n        }\n      });\n    });\n\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  // fuc to navigate user to login page if user is on another page\n  navigateToRegisterPage = () => {\n    this.router.navigate([UkanAppRoutes.REGISTER]);\n  }\n  // show and hidden password\n  showHidePassword1() {\n    this.show = !this.show;\n  }\n\n\n  keytab(event, maxLength) {\n    let nextInput = event.srcElement.nextElementSibling; // get the sibling element\n\n    var target = event.target || event.srcElement;\n    var id = target.id\n    // console.log(id.maxlength); // prints undefined\n\n    if (nextInput == null)  // check the maxLength from here\n      return;\n    else\n      nextInput.focus();   // focus if not null\n  }\n\n  loginAnalytics(eventName) {\n    let email = localStorage.getItem('email');\n    let token = localStorage.getItem('access_token');\n    let userid = localStorage.getItem('userid');\n    let date: Date;\n    // analytics.logEvent(eventName, {\n    //   id: token,\n    //   deviceId: userid,\n    //   email: email,\n    //   date: date\n    // });\n  }\n\n}\n","<section>\n  <div class=\"container-fluid\">\n\n    <div class=\"row\">\n      <div class=\"col-xl-8 col-lg-8 col-md-12 bg\">\n        <div class=\"d-flex justify-content-left my-5\">\n          <div class=\"d-flex align-items-center front-img-text-larg front-img-position\">Let's unleash the true\n            potential of\n            your life.</div>\n        </div>\n        <div class=\"d-flex align-items-center front-imag-text-small\">\n          <!-- Join and do more than ever before. -->\n        </div>\n      </div>\n      <div *ngIf=\"verfication == false\" class=\"col-xl-4 col-lg-4 col-md-12\">\n\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"goBack()\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-center pb-3 text-login\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <span>Join Now</span>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"d-flex justify-content-center py-3\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <button class=\"col btn social-login-bg\" (click)=\"socialSignIn('google')\">\n                  <img style=\"padding-bottom: 3px;\" src=\"../../../assets/google_icon.png\" width=\"20\">\n                  <span class=\"social-login-text\" style=\"margin-left:10px;\">Join with Google</span>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"d-flex justify-content-center pt-3 pb-4\">\n            <div class=\"row\">\n              <div class=\"col font-use or\">\n                <div class=\"line\" style=\"display:inline-block;\"></div>\n                <div style=\"display:inline-block;\">OR</div>\n                <div class=\"line\" style=\"display:inline-block;\"></div>\n              </div>\n            </div>\n          </div>\n          <!-- <div class=\"row\">\n            <div class=\"col font-use login-email \">\n              <span style=\"padding-left: 25px\">Log in with email</span>\n            </div>\n          </div> -->\n          <form #loginForm=\"ngForm\">\n            <div class=\" d-flex justify-content-center pt-3\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" [(ngModel)]=\"objLogin.username\" class=\"form-control input-email\"\n                      pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" id=\"email\" name=\"email\" ngModel\n                      #emailref=\"ngModel\" required=\"required\" placeholder=\"Email\">\n                    <div *ngIf=\"emailref.errors &&(emailref.touched || emailref.dirty)\" class=\"pass-feedback\">\n                      <div [hidden]=\"!emailref.errors?.pattern\">\n                        Enter valid email e.g abc@xyz.com\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n            <div id=\"circularG\" *ngIf=\"loading==1\">\n              <div id=\"circularG_1\" class=\"circularG\"></div>\n              <div id=\"circularG_2\" class=\"circularG\"></div>\n              <div id=\"circularG_3\" class=\"circularG\"></div>\n              <div id=\"circularG_4\" class=\"circularG\"></div>\n              <div id=\"circularG_5\" class=\"circularG\"></div>\n              <div id=\"circularG_6\" class=\"circularG\"></div>\n              <div id=\"circularG_7\" class=\"circularG\"></div>\n              <div id=\"circularG_8\" class=\"circularG\"></div>\n            </div>\n            <!-- <div class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input [type]=\"show ? 'text' : 'password'\" class=\"form-control input-email\" name=\"password\"\n                      id=\"password\" placeholder=\"Password\" [(ngModel)]=\"objLogin.password\" required=\"required\" ngModel\n                      #passref=\"ngModel\">\n                    <div *ngIf=\"passref.errors &&(passref.touched || passref.dirty)\" class=\"pass-feedback\">\n                      <div [hidden]=\"!passref.errors?.pattern\">\n                        Enter a password\n                      </div>\n                    </div>\n                    <span (click)=\"showHidePassword1()\"><img *ngIf=\"!show\" class=\"password-show\"\n                        src=\"../../../assets/Vector.png\">\n                      <img *ngIf=\"show\" class=\"password-show1\" src=\"../../../assets/showpassword.png\" width=\"24\">\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div> -->\n\n            <div class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col font-use alert-text \">\n                  <p>{{isLogin}}</p>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col form-group\">\n                  <button type=\"submit\" (click)=\"login()\" [disabled]=\"!loginForm.form.valid\" style=\"cursor: pointer;\"\n                    class=\"btn btn-primary login-btn font-use \">JOIN</button>\n                </div>\n              </div>\n            </div>\n          </form>\n          <!-- <div class=\"d-flex justify-content-center\">\n            <div class=\"row\">\n              <div class=\"col pt-3\">\n                <a href=\"#/forgetpassword\" class=\"font-use2 forget-password\" style=\"text-decoration: none;\">Forgot\n                  Password</a>\n              </div>\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-center\">\n            <div class=\"row\">\n              <div class=\"col font-use2 new-user-reg pt-3\">\n                Are you a new User ?<a (click)=\"navigateToRegisterPage()\" class=\"register-here\"\n                  style=\"text-decoration: none; cursor: pointer;\"> Register\n                  here</a>\n              </div>\n            </div>\n          </div> -->\n          <div class=\"d-flex justify-content-center\" style=\"padding-top:50px;\">\n            <div class=\"row\">\n              <div class=\"col font-use2 term-condition \">\n                <!-- By registering you are agree all <b><a href=\"#/LicenseAgreement\"\n                    style=\"text-decoration: none; color: rgba(0, 0, 0, 0.3);\">Terms\n                    <br> and Conditions</a></b>\n                and\n                <b><a href=\"#/Privacy\" style=\"text-decoration: none; color: rgba(0, 0, 0, 0.3);\">Privacy Policy</a></b> -->\n              </div>\n\n\n\n            </div>\n          </div>\n\n          <!-- <div class=\"d-flex justify-content-center\">\n            <div class=\"row\">\n            \n\n            </div>\n          </div> -->\n\n        </div>\n      </div>\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!-- for verification code -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <!--  -->\n      <div *ngIf=\"verfication==true\" class=\"col-xl-4 col-lg-4 col-md-12\">\n\n        <div class=\"container\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <!-- <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"goBack()\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button> -->\n            </div>\n          </div>\n          <div class=\"d-flex justify-content-center text-login\" style=\"margin-top: 120px;\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <span>Verification Code</span>\n              </div>\n            </div>\n          </div>\n\n          <!-- <div class=\"d-flex justify-content-center py-3\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <button class=\"col btn social-login-bg\" (click)=\"socialSignIn('google')\">\n                  <img style=\"padding-bottom: 3px;\" src=\"../../../assets/google_icon.png\" width=\"20\">\n                  <span class=\"social-login-text\" style=\"margin-left:10px;\">Login with Google</span>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"d-flex justify-content-center pt-3 pb-4\">\n            <div class=\"row\">\n              <div class=\"col font-use or\">\n                <div class=\"line\" style=\"display:inline-block;\"></div>\n                <div style=\"display:inline-block;\">OR</div>\n                <div class=\"line\" style=\"display:inline-block;\"></div>\n              </div>\n            </div>\n          </div> -->\n          <!-- <div class=\"row\">\n            <div class=\"col font-use login-email \">\n              <span style=\"padding-left: 25px\">Log in with email</span>\n            </div>\n          </div> -->\n          <form #loginForm=\"ngForm\">\n            <div class=\" d-flex justify-content-center pt-3\">\n              <div class=\"row\">\n                <!-- <div id=\"circularG\" *ngIf=\"loading==1\">\n                  <div id=\"circularG_1\" class=\"circularG\"></div>\n                  <div id=\"circularG_2\" class=\"circularG\"></div>\n                  <div id=\"circularG_3\" class=\"circularG\"></div>\n                  <div id=\"circularG_4\" class=\"circularG\"></div>\n                  <div id=\"circularG_5\" class=\"circularG\"></div>\n                  <div id=\"circularG_6\" class=\"circularG\"></div>\n                  <div id=\"circularG_7\" class=\"circularG\"></div>\n                  <div id=\"circularG_8\" class=\"circularG\"></div>\n                </div> -->\n                <div class=\"col\">\n                  <!-- <div class=\"form-group\">\n                    <input type=\"text\" [(ngModel)]=\"objLogin.username\" class=\"form-control input-email\"\n                      pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$\" id=\"email\" name=\"email\" ngModel\n                      #emailref=\"ngModel\" required=\"required\" placeholder=\"Email\">\n                    <div *ngIf=\"emailref.errors &&(emailref.touched || emailref.dirty)\" class=\"pass-feedback\">\n                      <div [hidden]=\"!emailref.errors?.pattern\">\n                        Enter valid email e.g abc@xyz.com\n                      </div>\n                    </div>\n                  </div> -->\n                  <div id=\"form\">\n                    <input class=\"inp\" [(ngModel)]=\"val1\" (keyup)=\"keytab($event, 1)\" name=\"v1\" type=\"text\"\n                      maxLength=\"1\" size=\"1\" min=\"0\" max=\"9\" pattern=\"[0-9]{1}\" />\n                    <input class=\"inp\" [(ngModel)]=\"val2\" name=\"v1\" (keyup)=\"keytab($event, 1)\" type=\"text\"\n                      maxLength=\"1\" size=\"1\" min=\"0\" max=\"9\" pattern=\"[0-9]{1}\" />\n                    <input class=\"inp\" [(ngModel)]=\"val3\" name=\"v1\" (keyup)=\"keytab($event, 1)\" type=\"text\"\n                      maxLength=\"1\" size=\"1\" min=\"0\" max=\"9\" pattern=\"[0-9]{1}\" />\n                    <input class=\"inp\" [(ngModel)]=\"val4\" name=\"v1\" (keyup)=\"keytab($event, 1)\" type=\"text\"\n                      maxLength=\"1\" size=\"1\" min=\"0\" max=\"9\" pattern=\"[0-9]{1}\" />\n                    <button (click)=\"verify()\" class=\"btn11 btn-primary btn-embossed\">continue</button>\n                  </div>\n\n                </div>\n              </div>\n            </div>\n\n            <!-- <div class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <input [type]=\"show ? 'text' : 'password'\" class=\"form-control input-email\" name=\"password\"\n                      id=\"password\" placeholder=\"Password\" [(ngModel)]=\"objLogin.password\" required=\"required\" ngModel\n                      #passref=\"ngModel\">\n                    <div *ngIf=\"passref.errors &&(passref.touched || passref.dirty)\" class=\"pass-feedback\">\n                      <div [hidden]=\"!passref.errors?.pattern\">\n                        Enter a password\n                      </div>\n                    </div>\n                    <span (click)=\"showHidePassword1()\"><img *ngIf=\"!show\" class=\"password-show\"\n                        src=\"../../../assets/Vector.png\">\n                      <img *ngIf=\"show\" class=\"password-show1\" src=\"../../../assets/showpassword.png\" width=\"24\">\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div> -->\n\n            <!-- <div class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col font-use alert-text \">\n                  <p>{{isLogin}}</p>\n                </div>\n              </div>\n            </div> -->\n            <div *ngIf=\"verfiy1 === true\" class=\"d-flex justify-content-center\" style=\"margin-bottom: 20px;\">\n              <div class=\"row\" style=\"color:red;\">\n                You have entered invalid number\n              </div>\n            </div>\n\n            <div *ngIf=\"isTrue == false\" class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col form-group\">\n                  <button type=\"submit\" (click)=\"login()\" [disabled]=\"!loginForm.form.valid\" style=\"cursor: pointer;\"\n                    class=\"btn btn-primary login-btn font-use \">JOIN</button>\n                </div>\n              </div>\n            </div>\n            <div *ngIf=\"verfication == true\" class=\"d-flex justify-content-center\">\n              <div class=\"row\">\n                <div class=\"col form-group\">\n                  Didn't receive an OTP? <a style=\"color:#28a745\" (click)=\"back()\">Click here</a>\n                  <!-- <button type=\"submit\" (click)=\"back()\" style=\"cursor: pointer;\"\n                    class=\"font-use \">Click here</button> -->\n                  <!-- <a class=\"nav-link \" (click)=\" navigateToCreateActivityPage()\">Create Activity</a> -->\n\n\n                </div>\n              </div>\n            </div>\n          </form>\n          <!-- <div class=\"d-flex justify-content-center\">\n            <div class=\"row\">\n              <div class=\"col pt-3\">\n                <a href=\"#/forgetpassword\" class=\"font-use2 forget-password\" style=\"text-decoration: none;\">Forgot\n                  Password</a>\n              </div>\n            </div>\n          </div> -->\n          <!-- <div class=\"d-flex justify-content-center\">\n            <div class=\"row\">\n              <div class=\"col font-use2 new-user-reg pt-3\">\n                Are you a new User ?<a (click)=\"navigateToRegisterPage()\" class=\"register-here\"\n                  style=\"text-decoration: none; cursor: pointer;\"> Register\n                  here</a>\n              </div>\n            </div>\n          </div> -->\n          <!-- <div class=\"d-flex justify-content-center\" style=\"padding-top:50px;\">\n            <div class=\"row\">\n              <div class=\"col font-use2 term-condition \">\n                By registering you are agree all <b><a href=\"#/LicenseAgreement\"\n                    style=\"text-decoration: none; color: rgba(0, 0, 0, 0.3);\">Terms\n                    <br> and Conditions</a></b>\n                and\n                <b><a href=\"#/Privacy\" style=\"text-decoration: none; color: rgba(0, 0, 0, 0.3);\">Privacy Policy</a></b>\n              </div>\n\n\n\n            </div>\n          </div> -->\n\n          <!-- <div class=\"d-flex justify-content-center\">\n            <div class=\"row\">\n            \n\n            </div>\n          </div> -->\n\n        </div>\n      </div>\n      <!-- end of verification -->\n\n\n    </div>\n  </div>\n</section>","export class ILogin {\n    grant_type: string;\n    username: string;\n    password: string;\n    client_id: string;\n    client_secret: string;\n    location: string;\n\n}\n"],"sourceRoot":"webpack:///"}