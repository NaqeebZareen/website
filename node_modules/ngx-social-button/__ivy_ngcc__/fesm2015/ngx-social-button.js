import { Injectable, Component, Input, Output, EventEmitter, Inject, ViewChild, NgModule, defineInjectable, inject } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { DOCUMENT } from '@angular/common';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/**
 * @abstract
 */
import * as Éµngcc0 from '@angular/core';

const _c0 = ["element"];
class BaseLoginProviderImpl {
    constructor() { }
    /**
     * @param {?} obj
     * @param {?} onload
     * @return {?}
     */
    loadScript(obj, onload) {
        if (document.getElementById(obj.name)) {
            return;
        }
        /** @type {?} */
        let signInJS = document.createElement('script');
        signInJS.async = true;
        signInJS.src = obj.url;
        signInJS.onload = onload;
        if (obj.name === 'linkedin') {
            signInJS.async = false;
            signInJS.text = ('api_key: ' + obj.id).replace('\'', '');
        }
        document.head.appendChild(signInJS);
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class SocialUser {
}
class LoginProviderClass {
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class FacebookLoginProvider extends BaseLoginProviderImpl {
    /**
     * @param {?} clientId
     */
    constructor(clientId) {
        super();
        this.clientId = clientId;
        this.TYPE = 'facebook';
        this.loginProviderObj = new LoginProviderClass();
        this.loginProviderObj.id = clientId;
        this.loginProviderObj.name = 'facebook';
        this.loginProviderObj.url = 'https://connect.facebook.net/en_US/sdk.js';
    }
    /**
     * @return {?}
     */
    initialize() {
        return new Promise((resolve, reject) => {
            this.loadScript(this.loginProviderObj, () => {
                FB.init({
                    appId: this.clientId,
                    autoLogAppEvents: true,
                    cookie: true,
                    xfbml: true,
                    version: 'v2.8'
                });
                FB.AppEvents.logPageView();
                FB.getLoginStatus(function (response) {
                    if (response.status === 'connected') {
                        /** @type {?} */
                        const accessToken = FB.getAuthResponse()['accessToken'];
                        FB.api('/me?fields=name,email,picture', (res) => {
                            resolve(FacebookLoginProvider.drawUser(Object.assign({}, { token: accessToken }, res)));
                        });
                    }
                });
            });
        });
    }
    /**
     * @param {?} response
     * @return {?}
     */
    static drawUser(response) {
        /** @type {?} */
        let user = new SocialUser();
        user.id = response.id;
        user.name = response.name;
        user.email = response.email;
        user.accessToken = response.accessToken;
        user.image = 'https://graph.facebook.com/' + response.id + '/picture?type=normal';
        return user;
    }
    /**
     * @param {?=} scopes
     * @return {?}
     */
    signIn(scopes) {
        return new Promise((resolve, reject) => {
            FB.login((response) => {
                console.log("facebook", response);
                if (response.authResponse) {
                    /** @type {?} */
                    const accessToken = FB.getAuthResponse()['accessToken'];
                    FB.api('/me?fields=name,email,picture', (res) => {
                        console.log("me", res);
                        resolve(FacebookLoginProvider.drawUser(Object.assign({}, { accessToken: accessToken }, res)));
                    });
                }
            }, { scope: scopes && scopes.length > 0 ? scopes.join(',') : 'email,public_profile' });
        });
    }
    /**
     * @param {?=} share
     * @return {?}
     */
    sharing(share) {
        return new Promise((resolve, reject) => {
            FB.ui({
                method: 'share',
                href: share.href,
                hashtag: (share.hashtag && share.hashtag.indexOf('#') >= 0) ? share.hashtag : null
            }, function (response) {
                console.log(response);
                resolve();
            });
        });
    }
    /**
     * @return {?}
     */
    signOut() {
        return new Promise((resolve, reject) => {
            FB.logout((response) => {
                resolve();
            });
        });
    }
}
FacebookLoginProvider.PROVIDER_TYPE = 'facebook';
FacebookLoginProvider.SCOPES = {
    EMAIL: 'email',
    PUBLIC_PROFILE: 'public_profile'
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class GoogleLoginProvider extends BaseLoginProviderImpl {
    /**
     * @param {?} clientId
     */
    constructor(clientId) {
        super();
        this.clientId = clientId;
        this.loginProviderObj = new LoginProviderClass();
        this.TYPE = 'google';
        this.loginProviderObj.id = clientId;
        this.loginProviderObj.name = 'google';
        this.loginProviderObj.url = 'https://apis.google.com/js/platform.js';
    }
    /**
     * @return {?}
     */
    initialize() {
        return new Promise((resolve, reject) => {
            this.loadScript(this.loginProviderObj, () => {
                gapi.load('auth2', () => {
                    this.auth2 = gapi.auth2.init({
                        client_id: this.clientId,
                        scope: 'email'
                    });
                    this.auth2.then(() => {
                        if (this.auth2.isSignedIn.get()) {
                            resolve(this.drawUser());
                        }
                    });
                });
            });
        });
    }
    /**
     * @return {?}
     */
    drawUser() {
        /** @type {?} */
        const user = new SocialUser();
        /** @type {?} */
        const profile = this.auth2.currentUser.get().getBasicProfile();
        /** @type {?} */
        const authResponseObj = this.auth2.currentUser.get().getAuthResponse(true);
        user.id = profile.getId();
        user.name = profile.getName();
        user.email = profile.getEmail();
        user.image = profile.getImageUrl();
        user.accessToken = authResponseObj.access_token;
        user.idToken = authResponseObj.id_token;
        return user;
    }
    /**
     * @param {?=} scopes
     * @return {?}
     */
    signIn(scopes) {
        return new Promise((resolve, reject) => {
            /** @type {?} */
            const promise = this.auth2.signIn();
            promise.then(() => {
                resolve(this.drawUser());
            }).catch((err) => {
                reject(err);
            });
        });
    }
    /**
     * @return {?}
     */
    signOut() {
        return new Promise((resolve, reject) => {
            this.auth2.signOut().then((err) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve();
                }
            });
        });
    }
    /**
     * @param {?=} share
     * @return {?}
     */
    sharing(share) {
        return new Promise((resolve, reject) => {
            resolve();
        });
    }
}
GoogleLoginProvider.PROVIDER_TYPE = 'google';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class LinkedinLoginProvider extends BaseLoginProviderImpl {
    /**
     * @param {?} clientId
     */
    constructor(clientId) {
        super();
        this.clientId = clientId;
        this.loginProviderObj = new LoginProviderClass();
        this.TYPE = 'linkedin';
        this.loginProviderObj.id = clientId;
        this.loginProviderObj.name = 'linkedin';
        this.loginProviderObj.url = 'https://platform.linkedin.com/in.js';
    }
    /**
     * @return {?}
     */
    initialize() {
        return new Promise((resolve, reject) => {
            this.loadScript(this.loginProviderObj, () => {
                IN.init({
                    api_key: this.clientId,
                    authorize: true,
                    onLoad: this.onLinkedInLoad()
                });
                IN.Event.on(IN, 'auth', () => {
                    if (IN.User.isAuthorized()) {
                        IN.API.Raw('/people/~:(id,first-name,last-name,email-address,picture-url)').result((res) => {
                            resolve(this.drawUser(res));
                        });
                    }
                });
            });
        });
    }
    /**
     * @return {?}
     */
    onLinkedInLoad() {
        IN.Event.on(IN, 'systemReady', () => {
            IN.User.refresh();
        });
    }
    /**
     * @param {?} response
     * @return {?}
     */
    drawUser(response) {
        /** @type {?} */
        const user = new SocialUser();
        user.id = response.id;
        user.name = response.firstName + ' ' + response.lastName;
        user.email = response.emailAddress;
        user.image = response.pictureUrl;
        user.accessToken = IN.ENV.auth.oauth_token;
        return user;
    }
    /**
     * @return {?}
     */
    signIn() {
        return new Promise((resolve, reject) => {
            IN.User.authorize(() => {
                IN.API.Raw('/people/~:(id,first-name,last-name,email-address,picture-url)').result((res) => {
                    console.log('linkedin', res);
                    resolve(this.drawUser(res));
                });
            });
        });
    }
    /**
     * @return {?}
     */
    signOut() {
        return new Promise((resolve, reject) => {
            IN.User.logout((response) => {
                resolve();
            }, (err) => {
                reject(err);
            });
        });
    }
    /**
     * @param {?=} share
     * @return {?}
     */
    sharing(share) {
        return new Promise((resolve, reject) => {
            /** @type {?} */
            const payload = {
                'comment': share ? share.comment : '',
                'visibility': {
                    'code': 'anyone'
                }
            };
            IN.API.Raw('/people/~/shares?format=json')
                .method('POST')
                .body(JSON.stringify(payload))
                .result(data => {
                console.log('linkedin share', data);
                resolve();
            })
                .error(onError => {
                console.log('linkedin', onError);
            });
        });
    }
}
LinkedinLoginProvider.PROVIDER_TYPE = 'linkedin';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class SocialServiceConfig {
    /**
     * @param {?=} providers
     */
    constructor(providers) {
        this.providers = new Map();
        if (providers) {
            for (let i = 0; i < providers.length; i++) {
                /** @type {?} */
                const element = providers[i];
                this.providers.set(element.provider.TYPE, element.provider);
            }
        }
    }
    /**
     * @return {?}
     */
    getProviders() {
        return this.providers;
    }
    /**
     * @param {?} provider
     * @return {?}
     */
    addProvider(provider) {
        if (!this.providers.get(provider.TYPE)) {
            this.providers.set(provider.TYPE, provider);
        }
    }
    /**
     * @param {?} clientId
     * @return {?}
     */
    addFacebook(clientId) {
        this.addProvider(new FacebookLoginProvider(clientId));
        return this;
    }
    /**
     * @param {?} clientId
     * @return {?}
     */
    addGoogle(clientId) {
        this.addProvider(new GoogleLoginProvider(clientId));
        return this;
    }
    /**
     * @param {?} clientId
     * @return {?}
     */
    addLinkedIn(clientId) {
        this.addProvider(new LinkedinLoginProvider(clientId));
        return this;
    }
}
class SocialService {
    /**
     * @param {?} config
     */
    constructor(config) {
        this._user = null;
        this._authState = new BehaviorSubject(null);
        this.providers = config.getProviders();
        this.providers.forEach((provider, key) => {
            provider.initialize().then((user) => {
                user.provider = key;
                this._user = user;
                this._authState.next(user);
            }).catch((err) => {
                // this._authState.next(null);
            });
        });
    }
    /**
     * @return {?}
     */
    get authState() {
        return this._authState.asObservable();
    }
    /**
     * @return {?}
     */
    isSocialLoggedIn() {
        return (this._user != null);
    }
    /**
     * @param {?} providerType
     * @param {?=} share
     * @return {?}
     */
    sharing(providerType, share) {
        return new Promise((resolve, reject) => {
            /** @type {?} */
            let providerObject = this.providers.get(providerType);
            if (providerObject) {
                providerObject.sharing(share).then(() => {
                    resolve(true);
                });
            }
            else {
                reject(SocialService.LOGIN_PROVIDER_NOT_FOUND);
            }
        });
    }
    /**
     * @param {?=} share
     * @return {?}
     */
    facebookSharing(share) {
        return this.sharing('facebook', share);
    }
    /**
     * @param {?} providerType
     * @param {?=} scopes
     * @return {?}
     */
    signIn(providerType, scopes) {
        return new Promise((resolve, reject) => {
            /** @type {?} */
            let providerObject = this.providers.get(providerType);
            if (providerObject) {
                providerObject.signIn(scopes).then((user) => {
                    user.provider = providerType;
                    resolve(user);
                    this._user = user;
                    this._authState.next(user);
                }).catch((err) => {
                    reject(SocialService.USER_POPUP_CLOSE);
                });
            }
            else {
                reject(SocialService.LOGIN_PROVIDER_NOT_FOUND);
            }
        });
    }
    /**
     * @return {?}
     */
    signOut() {
        return new Promise((resolve, reject) => {
            if (this._user && this._user.provider) {
                /** @type {?} */
                let providerType = this._user.provider;
                /** @type {?} */
                let providerObject = this.providers.get(providerType);
                providerObject.signOut().then(() => {
                    this._user = null;
                    this._authState.next(null);
                    resolve();
                }).catch((err) => {
                    this._authState.next(null);
                });
            }
            else {
                reject(SocialService.LOGIN_PROVIDER_NOT_FOUND);
            }
        });
    }
}
SocialService.Éµfac = function SocialService_Factory(t) { return new (t || SocialService)(Éµngcc0.ÉµÉµinject(SocialServiceConfig)); };
SocialService.Éµprov = Éµngcc0.ÉµÉµdefineInjectable({ token: SocialService, factory: SocialService.Éµfac, providedIn: 'root' });
SocialService.LOGIN_PROVIDER_NOT_FOUND = 'Login provider not found';
SocialService.USER_POPUP_CLOSE = 'User close the popup';
/** @nocollapse */
SocialService.ctorParameters = () => [
    { type: SocialServiceConfig }
];
/** @nocollapse */ SocialService.ngInjectableDef = defineInjectable({ factory: function SocialService_Factory() { return new SocialService(inject(SocialServiceConfig)); }, token: SocialService, providedIn: "root" });
/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(SocialService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: SocialServiceConfig }]; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class FacebookLoginButton {
    /**
     * @param {?} socialAuthService
     */
    constructor(socialAuthService) {
        this.socialAuthService = socialAuthService;
        this.socialUser = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    socialSignIn() {
        this.socialAuthService.signIn('facebook', this.scopes).then((userData) => {
            console.log("socialSignIn", userData);
            this.socialUser.emit(userData);
        }).catch(() => {
            this.socialUser.emit(null);
        });
    }
}
FacebookLoginButton.Éµfac = function FacebookLoginButton_Factory(t) { return new (t || FacebookLoginButton)(Éµngcc0.ÉµÉµdirectiveInject(SocialService)); };
FacebookLoginButton.Éµcmp = Éµngcc0.ÉµÉµdefineComponent({ type: FacebookLoginButton, selectors: [["facebook-login-button"]], inputs: { size: "size", text: "text", style: "style", scopes: "scopes" }, outputs: { socialUser: "socialUser" }, decls: 2, vars: 2, consts: [["type", "button", 3, "className", "click"]], template: function FacebookLoginButton_Template(rf, ctx) { if (rf & 1) {
        Éµngcc0.ÉµÉµelementStart(0, "button", 0);
        Éµngcc0.ÉµÉµlistener("click", function FacebookLoginButton_Template_button_click_0_listener() { return ctx.socialSignIn(); });
        Éµngcc0.ÉµÉµtext(1);
        Éµngcc0.ÉµÉµelementEnd();
    } if (rf & 2) {
        Éµngcc0.ÉµÉµproperty("className", ctx.style == "round" ? "social-btn facebook " : "button btn-block loginBtn --facebook ");
        Éµngcc0.ÉµÉµadvance(1);
        Éµngcc0.ÉµÉµtextInterpolate1(" ", ctx.style == "round" ? "" : ctx.text ? ctx.text : "Login with Facebook", "");
    } }, styles: [".button[_ngcontent-%COMP%]{font-family:Lato,\"Lucida Grande\",\"Lucida Sans Unicode\",Tahoma,Sans-Serif;-webkit-appearance:none;display:inline-block;outline:0;border-radius:3px;border:3px solid transparent;cursor:pointer;text-overflow:ellipsis;text-decoration:none!important;font-weight:400!important}.loginBtn[_ngcontent-%COMP%]{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.loginBtn[_ngcontent-%COMP%]:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.loginBtn[_ngcontent-%COMP%]:focus{outline:0}.loginBtn[_ngcontent-%COMP%]:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.shareBtn[_ngcontent-%COMP%]{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.shareBtn[_ngcontent-%COMP%]:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.shareBtn[_ngcontent-%COMP%]:focus{outline:0}.shareBtn[_ngcontent-%COMP%]:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.--facebook[_ngcontent-%COMP%]{background-color:#4c69ba;background-image:linear-gradient(#4c69ba,#3b55a0);text-shadow:0 -1px 0 #354c8c}.--facebook[_ngcontent-%COMP%]:before{border-right:1px solid #364e92;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_facebook.png) 6px 6px no-repeat}.--facebook[_ngcontent-%COMP%]:focus, .--facebook[_ngcontent-%COMP%]:hover{background-color:#5b7bd5;background-image:linear-gradient(#5b7bd5,#4864b1)}.--google[_ngcontent-%COMP%]{background:#dd4b39}.--google[_ngcontent-%COMP%]:before{border-right:1px solid #bb3f30;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_google.png) 6px 6px no-repeat}.--google[_ngcontent-%COMP%]:focus, .--google[_ngcontent-%COMP%]:hover{background:#e74b37}.--linkedin[_ngcontent-%COMP%]{background:#007bb6}.--linkedin[_ngcontent-%COMP%]:before{border-right:1px solid #007bb6;background:url(https://content.linkedin.com/content/dam/developer/global/en_US/site/img/signin-button.png) -3px -3px no-repeat}.--linkedin[_ngcontent-%COMP%]:focus, .--linkedin[_ngcontent-%COMP%]:hover{background:linear-gradient(#007bb6,#4864b1)}.social-btn[_ngcontent-%COMP%]{width:50px;height:50px;background-size:cover;background-repeat:no-repeat;cursor:pointer;border-radius:10px;border:none}.social-btn.facebook[_ngcontent-%COMP%]{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/facebook.png)}.social-btn.google[_ngcontent-%COMP%]{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/google.png)}.social-btn.linkedin[_ngcontent-%COMP%]{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/LinkedIn.png)}.social-btn.wechat[_ngcontent-%COMP%]{background-image:url(https://github.com/JohnnieLi/ngx-social-button/blob/master/assets/wechat.png?raw=true)}"] });
/** @nocollapse */
FacebookLoginButton.ctorParameters = () => [
    { type: SocialService }
];
FacebookLoginButton.propDecorators = {
    size: [{ type: Input }],
    text: [{ type: Input }],
    style: [{ type: Input }],
    scopes: [{ type: Input }],
    socialUser: [{ type: Output }]
};
/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(FacebookLoginButton, [{
        type: Component,
        args: [{
                selector: 'facebook-login-button',
                template: `
      <button [className]="style == 'round' ? 'social-btn facebook ' : 'button btn-block loginBtn --facebook '"
              (click)="socialSignIn()" type="button">
          {{style == 'round' ? '': text ? text : 'Login with Facebook'}}</button>
  `,
                styles: [`.button{font-family:Lato,"Lucida Grande","Lucida Sans Unicode",Tahoma,Sans-Serif;-webkit-appearance:none;display:inline-block;outline:0;border-radius:3px;border:3px solid transparent;cursor:pointer;text-overflow:ellipsis;text-decoration:none!important;font-weight:400!important}.loginBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.loginBtn:before{content:"";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.loginBtn:focus{outline:0}.loginBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.shareBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.shareBtn:before{content:"";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.shareBtn:focus{outline:0}.shareBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.--facebook{background-color:#4c69ba;background-image:linear-gradient(#4c69ba,#3b55a0);text-shadow:0 -1px 0 #354c8c}.--facebook:before{border-right:1px solid #364e92;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_facebook.png) 6px 6px no-repeat}.--facebook:focus,.--facebook:hover{background-color:#5b7bd5;background-image:linear-gradient(#5b7bd5,#4864b1)}.--google{background:#dd4b39}.--google:before{border-right:1px solid #bb3f30;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_google.png) 6px 6px no-repeat}.--google:focus,.--google:hover{background:#e74b37}.--linkedin{background:#007bb6}.--linkedin:before{border-right:1px solid #007bb6;background:url(https://content.linkedin.com/content/dam/developer/global/en_US/site/img/signin-button.png) -3px -3px no-repeat}.--linkedin:focus,.--linkedin:hover{background:linear-gradient(#007bb6,#4864b1)}.social-btn{width:50px;height:50px;background-size:cover;background-repeat:no-repeat;cursor:pointer;border-radius:10px;border:none}.social-btn.facebook{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/facebook.png)}.social-btn.google{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/google.png)}.social-btn.linkedin{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/LinkedIn.png)}.social-btn.wechat{background-image:url(https://github.com/JohnnieLi/ngx-social-button/blob/master/assets/wechat.png?raw=true)}`]
            }]
    }], function () { return [{ type: SocialService }]; }, { socialUser: [{
            type: Output
        }], size: [{
            type: Input
        }], text: [{
            type: Input
        }], style: [{
            type: Input
        }], scopes: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class GoogleLoginButton {
    /**
     * @param {?} socialAuthService
     */
    constructor(socialAuthService) {
        this.socialAuthService = socialAuthService;
        this.socialUser = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    socialSignIn() {
        this.socialAuthService.signIn('google', this.scopes).then((userData) => {
            this.socialUser.emit(userData);
        }).catch(() => {
            this.socialUser.emit(null);
        });
    }
}
GoogleLoginButton.Éµfac = function GoogleLoginButton_Factory(t) { return new (t || GoogleLoginButton)(Éµngcc0.ÉµÉµdirectiveInject(SocialService)); };
GoogleLoginButton.Éµcmp = Éµngcc0.ÉµÉµdefineComponent({ type: GoogleLoginButton, selectors: [["google-login-button"]], inputs: { size: "size", style: "style", text: "text", scopes: "scopes" }, outputs: { socialUser: "socialUser" }, decls: 2, vars: 2, consts: [["type", "button", 3, "className", "click"]], template: function GoogleLoginButton_Template(rf, ctx) { if (rf & 1) {
        Éµngcc0.ÉµÉµelementStart(0, "button", 0);
        Éµngcc0.ÉµÉµlistener("click", function GoogleLoginButton_Template_button_click_0_listener() { return ctx.socialSignIn(); });
        Éµngcc0.ÉµÉµtext(1);
        Éµngcc0.ÉµÉµelementEnd();
    } if (rf & 2) {
        Éµngcc0.ÉµÉµproperty("className", ctx.style == "round" ? "social-btn google" : "button btn-block loginBtn --google");
        Éµngcc0.ÉµÉµadvance(1);
        Éµngcc0.ÉµÉµtextInterpolate1(" ", ctx.style == "round" ? "" : ctx.text ? ctx.text : "Login with Google", " ");
    } }, styles: [".button[_ngcontent-%COMP%]{font-family:Lato,\"Lucida Grande\",\"Lucida Sans Unicode\",Tahoma,Sans-Serif;-webkit-appearance:none;display:inline-block;outline:0;border-radius:3px;border:3px solid transparent;cursor:pointer;text-overflow:ellipsis;text-decoration:none!important;font-weight:400!important}.loginBtn[_ngcontent-%COMP%]{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.loginBtn[_ngcontent-%COMP%]:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.loginBtn[_ngcontent-%COMP%]:focus{outline:0}.loginBtn[_ngcontent-%COMP%]:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.shareBtn[_ngcontent-%COMP%]{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.shareBtn[_ngcontent-%COMP%]:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.shareBtn[_ngcontent-%COMP%]:focus{outline:0}.shareBtn[_ngcontent-%COMP%]:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.--facebook[_ngcontent-%COMP%]{background-color:#4c69ba;background-image:linear-gradient(#4c69ba,#3b55a0);text-shadow:0 -1px 0 #354c8c}.--facebook[_ngcontent-%COMP%]:before{border-right:1px solid #364e92;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_facebook.png) 6px 6px no-repeat}.--facebook[_ngcontent-%COMP%]:focus, .--facebook[_ngcontent-%COMP%]:hover{background-color:#5b7bd5;background-image:linear-gradient(#5b7bd5,#4864b1)}.--google[_ngcontent-%COMP%]{background:#dd4b39}.--google[_ngcontent-%COMP%]:before{border-right:1px solid #bb3f30;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_google.png) 6px 6px no-repeat}.--google[_ngcontent-%COMP%]:focus, .--google[_ngcontent-%COMP%]:hover{background:#e74b37}.--linkedin[_ngcontent-%COMP%]{background:#007bb6}.--linkedin[_ngcontent-%COMP%]:before{border-right:1px solid #007bb6;background:url(https://content.linkedin.com/content/dam/developer/global/en_US/site/img/signin-button.png) -3px -3px no-repeat}.--linkedin[_ngcontent-%COMP%]:focus, .--linkedin[_ngcontent-%COMP%]:hover{background:linear-gradient(#007bb6,#4864b1)}.social-btn[_ngcontent-%COMP%]{width:50px;height:50px;background-size:cover;background-repeat:no-repeat;cursor:pointer;border-radius:10px;border:none}.social-btn.facebook[_ngcontent-%COMP%]{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/facebook.png)}.social-btn.google[_ngcontent-%COMP%]{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/google.png)}.social-btn.linkedin[_ngcontent-%COMP%]{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/LinkedIn.png)}.social-btn.wechat[_ngcontent-%COMP%]{background-image:url(https://github.com/JohnnieLi/ngx-social-button/blob/master/assets/wechat.png?raw=true)}"] });
/** @nocollapse */
GoogleLoginButton.ctorParameters = () => [
    { type: SocialService }
];
GoogleLoginButton.propDecorators = {
    size: [{ type: Input }],
    style: [{ type: Input }],
    text: [{ type: Input }],
    scopes: [{ type: Input }],
    socialUser: [{ type: Output }]
};
/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(GoogleLoginButton, [{
        type: Component,
        args: [{
                selector: 'google-login-button',
                template: `
		<button [className]="style == 'round' ? 'social-btn google' : 'button btn-block loginBtn --google'"
		        (click)="socialSignIn()" type="button">
			{{style == 'round' ? '':  text ? text : 'Login with Google'}}
		</button>
    `, styles: [`.button{font-family:Lato,"Lucida Grande","Lucida Sans Unicode",Tahoma,Sans-Serif;-webkit-appearance:none;display:inline-block;outline:0;border-radius:3px;border:3px solid transparent;cursor:pointer;text-overflow:ellipsis;text-decoration:none!important;font-weight:400!important}.loginBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.loginBtn:before{content:"";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.loginBtn:focus{outline:0}.loginBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.shareBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.shareBtn:before{content:"";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.shareBtn:focus{outline:0}.shareBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.--facebook{background-color:#4c69ba;background-image:linear-gradient(#4c69ba,#3b55a0);text-shadow:0 -1px 0 #354c8c}.--facebook:before{border-right:1px solid #364e92;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_facebook.png) 6px 6px no-repeat}.--facebook:focus,.--facebook:hover{background-color:#5b7bd5;background-image:linear-gradient(#5b7bd5,#4864b1)}.--google{background:#dd4b39}.--google:before{border-right:1px solid #bb3f30;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_google.png) 6px 6px no-repeat}.--google:focus,.--google:hover{background:#e74b37}.--linkedin{background:#007bb6}.--linkedin:before{border-right:1px solid #007bb6;background:url(https://content.linkedin.com/content/dam/developer/global/en_US/site/img/signin-button.png) -3px -3px no-repeat}.--linkedin:focus,.--linkedin:hover{background:linear-gradient(#007bb6,#4864b1)}.social-btn{width:50px;height:50px;background-size:cover;background-repeat:no-repeat;cursor:pointer;border-radius:10px;border:none}.social-btn.facebook{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/facebook.png)}.social-btn.google{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/google.png)}.social-btn.linkedin{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/LinkedIn.png)}.social-btn.wechat{background-image:url(https://github.com/JohnnieLi/ngx-social-button/blob/master/assets/wechat.png?raw=true)}`]
            }]
    }], function () { return [{ type: SocialService }]; }, { socialUser: [{
            type: Output
        }], size: [{
            type: Input
        }], style: [{
            type: Input
        }], text: [{
            type: Input
        }], scopes: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class LinkedinLoginButton {
    /**
     * @param {?} socialAuthService
     */
    constructor(socialAuthService) {
        this.socialAuthService = socialAuthService;
        this.socialUser = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    socialSignIn() {
        this.socialAuthService.signIn('linkedin', this.scopes).then((userData) => {
            this.socialUser.emit(userData);
        }).catch(() => {
            this.socialUser.emit(null);
        });
    }
}
LinkedinLoginButton.Éµfac = function LinkedinLoginButton_Factory(t) { return new (t || LinkedinLoginButton)(Éµngcc0.ÉµÉµdirectiveInject(SocialService)); };
LinkedinLoginButton.Éµcmp = Éµngcc0.ÉµÉµdefineComponent({ type: LinkedinLoginButton, selectors: [["linkedin-login-button"]], inputs: { size: "size", style: "style", text: "text", scopes: "scopes" }, outputs: { socialUser: "socialUser" }, decls: 2, vars: 2, consts: [["type", "button", 3, "className", "click"]], template: function LinkedinLoginButton_Template(rf, ctx) { if (rf & 1) {
        Éµngcc0.ÉµÉµelementStart(0, "button", 0);
        Éµngcc0.ÉµÉµlistener("click", function LinkedinLoginButton_Template_button_click_0_listener() { return ctx.socialSignIn(); });
        Éµngcc0.ÉµÉµtext(1);
        Éµngcc0.ÉµÉµelementEnd();
    } if (rf & 2) {
        Éµngcc0.ÉµÉµproperty("className", ctx.style == "round" ? "social-btn linkedin" : "button btn-block loginBtn --linkedin");
        Éµngcc0.ÉµÉµadvance(1);
        Éµngcc0.ÉµÉµtextInterpolate1(" ", ctx.style == "round" ? "" : ctx.text ? ctx.text : "Login with LinkedIn", " ");
    } }, styles: [".button[_ngcontent-%COMP%]{font-family:Lato,\"Lucida Grande\",\"Lucida Sans Unicode\",Tahoma,Sans-Serif;-webkit-appearance:none;display:inline-block;outline:0;border-radius:3px;border:3px solid transparent;cursor:pointer;text-overflow:ellipsis;text-decoration:none!important;font-weight:400!important}.loginBtn[_ngcontent-%COMP%]{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.loginBtn[_ngcontent-%COMP%]:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.loginBtn[_ngcontent-%COMP%]:focus{outline:0}.loginBtn[_ngcontent-%COMP%]:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.shareBtn[_ngcontent-%COMP%]{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.shareBtn[_ngcontent-%COMP%]:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.shareBtn[_ngcontent-%COMP%]:focus{outline:0}.shareBtn[_ngcontent-%COMP%]:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.--facebook[_ngcontent-%COMP%]{background-color:#4c69ba;background-image:linear-gradient(#4c69ba,#3b55a0);text-shadow:0 -1px 0 #354c8c}.--facebook[_ngcontent-%COMP%]:before{border-right:1px solid #364e92;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_facebook.png) 6px 6px no-repeat}.--facebook[_ngcontent-%COMP%]:focus, .--facebook[_ngcontent-%COMP%]:hover{background-color:#5b7bd5;background-image:linear-gradient(#5b7bd5,#4864b1)}.--google[_ngcontent-%COMP%]{background:#dd4b39}.--google[_ngcontent-%COMP%]:before{border-right:1px solid #bb3f30;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_google.png) 6px 6px no-repeat}.--google[_ngcontent-%COMP%]:focus, .--google[_ngcontent-%COMP%]:hover{background:#e74b37}.--linkedin[_ngcontent-%COMP%]{background:#007bb6}.--linkedin[_ngcontent-%COMP%]:before{border-right:1px solid #007bb6;background:url(https://content.linkedin.com/content/dam/developer/global/en_US/site/img/signin-button.png) -3px -3px no-repeat}.--linkedin[_ngcontent-%COMP%]:focus, .--linkedin[_ngcontent-%COMP%]:hover{background:linear-gradient(#007bb6,#4864b1)}.social-btn[_ngcontent-%COMP%]{width:50px;height:50px;background-size:cover;background-repeat:no-repeat;cursor:pointer;border-radius:10px;border:none}.social-btn.facebook[_ngcontent-%COMP%]{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/facebook.png)}.social-btn.google[_ngcontent-%COMP%]{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/google.png)}.social-btn.linkedin[_ngcontent-%COMP%]{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/LinkedIn.png)}.social-btn.wechat[_ngcontent-%COMP%]{background-image:url(https://github.com/JohnnieLi/ngx-social-button/blob/master/assets/wechat.png?raw=true)}"] });
/** @nocollapse */
LinkedinLoginButton.ctorParameters = () => [
    { type: SocialService }
];
LinkedinLoginButton.propDecorators = {
    size: [{ type: Input }],
    style: [{ type: Input }],
    text: [{ type: Input }],
    scopes: [{ type: Input }],
    socialUser: [{ type: Output }]
};
/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(LinkedinLoginButton, [{
        type: Component,
        args: [{
                selector: 'linkedin-login-button',
                template: `
		<button [className]="style == 'round' ? 'social-btn linkedin' : 'button btn-block loginBtn --linkedin'"
		        (click)="socialSignIn()" type="button">
			{{style == 'round' ? '':  text ? text : 'Login with LinkedIn'}}
		</button>
    `, styles: [`.button{font-family:Lato,"Lucida Grande","Lucida Sans Unicode",Tahoma,Sans-Serif;-webkit-appearance:none;display:inline-block;outline:0;border-radius:3px;border:3px solid transparent;cursor:pointer;text-overflow:ellipsis;text-decoration:none!important;font-weight:400!important}.loginBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.loginBtn:before{content:"";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.loginBtn:focus{outline:0}.loginBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.shareBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.shareBtn:before{content:"";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.shareBtn:focus{outline:0}.shareBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.--facebook{background-color:#4c69ba;background-image:linear-gradient(#4c69ba,#3b55a0);text-shadow:0 -1px 0 #354c8c}.--facebook:before{border-right:1px solid #364e92;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_facebook.png) 6px 6px no-repeat}.--facebook:focus,.--facebook:hover{background-color:#5b7bd5;background-image:linear-gradient(#5b7bd5,#4864b1)}.--google{background:#dd4b39}.--google:before{border-right:1px solid #bb3f30;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_google.png) 6px 6px no-repeat}.--google:focus,.--google:hover{background:#e74b37}.--linkedin{background:#007bb6}.--linkedin:before{border-right:1px solid #007bb6;background:url(https://content.linkedin.com/content/dam/developer/global/en_US/site/img/signin-button.png) -3px -3px no-repeat}.--linkedin:focus,.--linkedin:hover{background:linear-gradient(#007bb6,#4864b1)}.social-btn{width:50px;height:50px;background-size:cover;background-repeat:no-repeat;cursor:pointer;border-radius:10px;border:none}.social-btn.facebook{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/facebook.png)}.social-btn.google{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/google.png)}.social-btn.linkedin{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/LinkedIn.png)}.social-btn.wechat{background-image:url(https://github.com/JohnnieLi/ngx-social-button/blob/master/assets/wechat.png?raw=true)}`]
            }]
    }], function () { return [{ type: SocialService }]; }, { socialUser: [{
            type: Output
        }], size: [{
            type: Input
        }], style: [{
            type: Input
        }], text: [{
            type: Input
        }], scopes: [{
            type: Input
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class FacebookSharingButton {
    /**
     * @param {?} socialAuthService
     * @param {?} document
     */
    constructor(socialAuthService, document) {
        this.socialAuthService = socialAuthService;
        this.document = document;
        this.share = null;
        this.response = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    sharing() {
        console.log(this.document.location.href);
        if (!this.share) {
            this.share = { href: this.document.location.href };
        }
        else if (!this.share.href) {
            this.share.href = this.document.location.href;
        }
        this.socialAuthService.facebookSharing(this.share).then(() => {
            this.response.emit(true);
        }).catch((err) => {
            this.response.emit(false);
        });
    }
}
FacebookSharingButton.Éµfac = function FacebookSharingButton_Factory(t) { return new (t || FacebookSharingButton)(Éµngcc0.ÉµÉµdirectiveInject(SocialService), Éµngcc0.ÉµÉµdirectiveInject(DOCUMENT)); };
FacebookSharingButton.Éµcmp = Éµngcc0.ÉµÉµdefineComponent({ type: FacebookSharingButton, selectors: [["facebook-share-button"]], inputs: { share: "share" }, outputs: { response: "response" }, decls: 2, vars: 0, consts: [["type", "button", 1, "button", "btn-block", "loginBtn", "--facebook", 3, "click"]], template: function FacebookSharingButton_Template(rf, ctx) { if (rf & 1) {
        Éµngcc0.ÉµÉµelementStart(0, "button", 0);
        Éµngcc0.ÉµÉµlistener("click", function FacebookSharingButton_Template_button_click_0_listener() { return ctx.sharing(); });
        Éµngcc0.ÉµÉµtext(1, "Share");
        Éµngcc0.ÉµÉµelementEnd();
    } }, styles: [".button[_ngcontent-%COMP%]{font-family:Lato,\"Lucida Grande\",\"Lucida Sans Unicode\",Tahoma,Sans-Serif;-webkit-appearance:none;display:inline-block;outline:0;border-radius:3px;border:3px solid transparent;cursor:pointer;text-overflow:ellipsis;text-decoration:none!important;font-weight:400!important}.loginBtn[_ngcontent-%COMP%]{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.loginBtn[_ngcontent-%COMP%]:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.loginBtn[_ngcontent-%COMP%]:focus{outline:0}.loginBtn[_ngcontent-%COMP%]:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.shareBtn[_ngcontent-%COMP%]{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.shareBtn[_ngcontent-%COMP%]:before{content:\"\";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.shareBtn[_ngcontent-%COMP%]:focus{outline:0}.shareBtn[_ngcontent-%COMP%]:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.--facebook[_ngcontent-%COMP%]{background-color:#4c69ba;background-image:linear-gradient(#4c69ba,#3b55a0);text-shadow:0 -1px 0 #354c8c}.--facebook[_ngcontent-%COMP%]:before{border-right:1px solid #364e92;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_facebook.png) 6px 6px no-repeat}.--facebook[_ngcontent-%COMP%]:focus, .--facebook[_ngcontent-%COMP%]:hover{background-color:#5b7bd5;background-image:linear-gradient(#5b7bd5,#4864b1)}.--google[_ngcontent-%COMP%]{background:#dd4b39}.--google[_ngcontent-%COMP%]:before{border-right:1px solid #bb3f30;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_google.png) 6px 6px no-repeat}.--google[_ngcontent-%COMP%]:focus, .--google[_ngcontent-%COMP%]:hover{background:#e74b37}.--linkedin[_ngcontent-%COMP%]{background:#007bb6}.--linkedin[_ngcontent-%COMP%]:before{border-right:1px solid #007bb6;background:url(https://content.linkedin.com/content/dam/developer/global/en_US/site/img/signin-button.png) -3px -3px no-repeat}.--linkedin[_ngcontent-%COMP%]:focus, .--linkedin[_ngcontent-%COMP%]:hover{background:linear-gradient(#007bb6,#4864b1)}.social-btn[_ngcontent-%COMP%]{width:50px;height:50px;background-size:cover;background-repeat:no-repeat;cursor:pointer;border-radius:10px;border:none}.social-btn.facebook[_ngcontent-%COMP%]{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/facebook.png)}.social-btn.google[_ngcontent-%COMP%]{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/google.png)}.social-btn.linkedin[_ngcontent-%COMP%]{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/LinkedIn.png)}.social-btn.wechat[_ngcontent-%COMP%]{background-image:url(https://github.com/JohnnieLi/ngx-social-button/blob/master/assets/wechat.png?raw=true)}"] });
/** @nocollapse */
FacebookSharingButton.ctorParameters = () => [
    { type: SocialService },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
];
FacebookSharingButton.propDecorators = {
    share: [{ type: Input }],
    response: [{ type: Output }]
};
/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(FacebookSharingButton, [{
        type: Component,
        args: [{
                selector: 'facebook-share-button',
                template: `
      <button class="button btn-block loginBtn --facebook" 
              (click)="sharing()" type="button">Share</button>
  `,
                styles: [`.button{font-family:Lato,"Lucida Grande","Lucida Sans Unicode",Tahoma,Sans-Serif;-webkit-appearance:none;display:inline-block;outline:0;border-radius:3px;border:3px solid transparent;cursor:pointer;text-overflow:ellipsis;text-decoration:none!important;font-weight:400!important}.loginBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.loginBtn:before{content:"";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.loginBtn:focus{outline:0}.loginBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.shareBtn{box-sizing:border-box;position:relative;margin:.2em;padding:0 15px 0 46px;border:none;text-align:left;line-height:34px;white-space:nowrap;border-radius:3px;font-size:16px;color:#fff}.shareBtn:before{content:"";box-sizing:border-box;position:absolute;top:0;left:0;width:34px;height:100%}.shareBtn:focus{outline:0}.shareBtn:active{box-shadow:inset 0 0 0 32px rgba(0,0,0,.1)}.--facebook{background-color:#4c69ba;background-image:linear-gradient(#4c69ba,#3b55a0);text-shadow:0 -1px 0 #354c8c}.--facebook:before{border-right:1px solid #364e92;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_facebook.png) 6px 6px no-repeat}.--facebook:focus,.--facebook:hover{background-color:#5b7bd5;background-image:linear-gradient(#5b7bd5,#4864b1)}.--google{background:#dd4b39}.--google:before{border-right:1px solid #bb3f30;background:url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/14082/icon_google.png) 6px 6px no-repeat}.--google:focus,.--google:hover{background:#e74b37}.--linkedin{background:#007bb6}.--linkedin:before{border-right:1px solid #007bb6;background:url(https://content.linkedin.com/content/dam/developer/global/en_US/site/img/signin-button.png) -3px -3px no-repeat}.--linkedin:focus,.--linkedin:hover{background:linear-gradient(#007bb6,#4864b1)}.social-btn{width:50px;height:50px;background-size:cover;background-repeat:no-repeat;cursor:pointer;border-radius:10px;border:none}.social-btn.facebook{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/facebook.png)}.social-btn.google{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/google.png)}.social-btn.linkedin{background-image:url(https://raw.githubusercontent.com/JohnnieLi/ngx-social-button/master/assets/LinkedIn.png)}.social-btn.wechat{background-image:url(https://github.com/JohnnieLi/ngx-social-button/blob/master/assets/wechat.png?raw=true)}`]
            }]
    }], function () { return [{ type: SocialService }, { type: undefined, decorators: [{
                type: Inject,
                args: [DOCUMENT]
            }] }]; }, { share: [{
            type: Input
        }], response: [{
            type: Output
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class LinkedinSharingButton {
    /**
     * @param {?} socialAuthService
     * @param {?} document
     */
    constructor(socialAuthService, document) {
        this.socialAuthService = socialAuthService;
        this.document = document;
        this.share = { href: location.href };
        this.response = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        // add linkedin share button script tag to element
        this.element.nativeElement.innerHTML = `<script type="IN/Share" data-url="${this.share.href}"></script>`;
        // render share button
        // window['IN'] && window['IN'].parse();
    }
}
LinkedinSharingButton.Éµfac = function LinkedinSharingButton_Factory(t) { return new (t || LinkedinSharingButton)(Éµngcc0.ÉµÉµdirectiveInject(SocialService), Éµngcc0.ÉµÉµdirectiveInject(DOCUMENT)); };
LinkedinSharingButton.Éµcmp = Éµngcc0.ÉµÉµdefineComponent({ type: LinkedinSharingButton, selectors: [["linkedin-share-button"]], viewQuery: function LinkedinSharingButton_Query(rf, ctx) { if (rf & 1) {
        Éµngcc0.ÉµÉµviewQuery(_c0, true);
    } if (rf & 2) {
        var _t;
        Éµngcc0.ÉµÉµqueryRefresh(_t = Éµngcc0.ÉµÉµloadQuery()) && (ctx.element = _t.first);
    } }, inputs: { share: "share" }, outputs: { response: "response" }, decls: 2, vars: 0, consts: [["element", ""]], template: function LinkedinSharingButton_Template(rf, ctx) { if (rf & 1) {
        Éµngcc0.ÉµÉµelement(0, "span", null, 0);
    } }, encapsulation: 2 });
/** @nocollapse */
LinkedinSharingButton.ctorParameters = () => [
    { type: SocialService },
    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
];
LinkedinSharingButton.propDecorators = {
    share: [{ type: Input }],
    response: [{ type: Output }],
    element: [{ type: ViewChild, args: ['element',] }]
};
/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(LinkedinSharingButton, [{
        type: Component,
        args: [{
                selector: 'linkedin-share-button',
                template: `
        <span #element></span>
    `
            }]
    }], function () { return [{ type: SocialService }, { type: undefined, decorators: [{
                type: Inject,
                args: [DOCUMENT]
            }] }]; }, { share: [{
            type: Input
        }], response: [{
            type: Output
        }], element: [{
            type: ViewChild,
            args: ['element']
        }] }); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
class NgxSocialButtonModule {
}
NgxSocialButtonModule.Éµmod = Éµngcc0.ÉµÉµdefineNgModule({ type: NgxSocialButtonModule });
NgxSocialButtonModule.Éµinj = Éµngcc0.ÉµÉµdefineInjector({ factory: function NgxSocialButtonModule_Factory(t) { return new (t || NgxSocialButtonModule)(); }, imports: [[]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && Éµngcc0.ÉµÉµsetNgModuleScope(NgxSocialButtonModule, { declarations: [FacebookLoginButton,
        GoogleLoginButton,
        FacebookSharingButton,
        LinkedinLoginButton,
        LinkedinSharingButton], exports: [FacebookLoginButton,
        GoogleLoginButton,
        FacebookSharingButton,
        LinkedinLoginButton,
        LinkedinSharingButton] }); })();
/*@__PURE__*/ (function () { Éµngcc0.ÉµsetClassMetadata(NgxSocialButtonModule, [{
        type: NgModule,
        args: [{
                imports: [],
                declarations: [FacebookLoginButton, GoogleLoginButton,
                    FacebookSharingButton, LinkedinLoginButton,
                    LinkedinSharingButton],
                exports: [FacebookLoginButton, GoogleLoginButton,
                    FacebookSharingButton, LinkedinLoginButton,
                    LinkedinSharingButton]
            }]
    }], null, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

export { SocialServiceConfig, SocialService, FacebookLoginProvider, GoogleLoginProvider, FacebookLoginButton, GoogleLoginButton, LinkedinLoginButton, FacebookSharingButton, NgxSocialButtonModule, LinkedinSharingButton as Éµb, BaseLoginProviderImpl as Éµa };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,