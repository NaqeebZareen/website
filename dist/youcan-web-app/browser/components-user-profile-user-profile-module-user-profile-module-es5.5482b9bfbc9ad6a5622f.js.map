{"version":3,"sources":["webpack:///src/app/components/user-profile/profile/profile.component.ts","webpack:///src/app/components/user-profile/user-profile-module/user-profile-routing.module.ts","webpack:///src/app/components/user-profile/profile/profile.component.html","webpack:///src/app/components/user-profile/user-profile-module/user-profile.module.ts"],"names":["ProfileComponent","UserProfileRoutingModule","routes","path","component","activatedroute","router","srvJwthelperService","srvLoggingService","srvLocalStorageFactory","srvActivityService","_location","unsubscribe","Subject","getUserProfilePic","this","userProfilePic","getDataFromLocalStorage","USER_PROFILE_PIC","addEventLog","action","objIEventLog","user_id","getfromLocalStorage","USER_ID","user_ip","IP","category","city","CITY","country","COUNTRY","controller","session_id","SESSION_ID","page","Event_SaveLogs","pipe","takeUntil","subscribe","res","error","console","log","key","navigateToUpdateProfilePage","navigate","email","localStorage","getItem","url","userId","userEmail","userName","USER_FIRSTNAME","name","substring","lastIndexOf","next","complete","children","redirectTo","loadChildren","then","m","WishlistModule","forChild","UserProfileModule"],"mappings":"6eAiBaA,ECKAC,E,sKAlBPC,EAAiB,CACrB,CACEC,KAAM,GACNC,WDUSJ,EAAN,WAaL,WAAoBK,EAAwCC,EAAwBC,EAC1EC,EAA2CC,EAC3CC,EAA6CC,sCAFnC,KAAAN,iBAAwC,KAAAC,SAAwB,KAAAC,sBAC1E,KAAAC,oBAA2C,KAAAC,yBAC3C,KAAAC,qBAA6C,KAAAC,YAJhD,KAAAC,YAAc,IAAIC,EAAA,EAiCzB,KAAAC,kBAAoB,kBAClBC,EAAKC,eAAiBD,EAAKE,wBAAwB,IAAOC,kBAEtDH,EAAKC,gBAAyC,QAAvBD,EAAKC,eACvBD,EAAKC,eAEJD,EAAKC,eACX,kCAKN,KAAAG,YAAeC,YACbL,EAAKM,aAAaC,QAAUP,EAAKN,uBAAuBc,oBAAoB,IAAOC,SACnFT,EAAKM,aAAaI,QAAUV,EAAKN,uBAAuBc,oBAAoB,IAAOG,IACnFX,EAAKM,aAAaD,OAASA,EAC3BL,EAAKM,aAAaM,SAAW,eAC7BZ,EAAKM,aAAaO,KAAOb,EAAKN,uBAAuBc,oBAAoB,IAAOM,MAChFd,EAAKM,aAAaS,QAAUf,EAAKN,uBAAuBc,oBAAoB,IAAOQ,SACnFhB,EAAKM,aAAaW,WAAajB,EAAKiB,WACpCjB,EAAKM,aAAaY,WAAalB,EAAKN,uBAAuBc,oBAAoB,IAAOW,YACtFnB,EAAKM,aAAac,KAAOpB,EAAKoB,KAE9BpB,EAAKP,kBAAkB4B,eAAerB,EAAKM,cAAcgB,KAAK,OAAAC,EAAA,GAAUvB,EAAKH,cAAc2B,WAAUC,gBAElGC,YAAKA,OAAIC,QAAQC,IAAIF,OAK1B,KAAAxB,wBAA2B2B,YAAGA,OACrB7B,EAAKN,uBAAuBc,oBAAoBqB,IAQzD,KAAAC,4BAA8B,WAC5B9B,EAAKT,OAAOwC,SAAS,CAAC,qBApEtB/B,KAAKM,aAAe,IAAI,IAhBrB,wDAqBW,QADV0B,EAAQC,aAAaC,QAAQ,WAE/BlC,KAAKT,OAAOwC,SAAS,CAAC,MAExB/B,KAAKiB,WAAa,oBAClBjB,KAAKoB,KAAOpB,KAAKT,OAAO4C,IAExBnC,KAAKD,oBAELC,KAAKoC,OAASpC,KAAKE,wBAAwB,IAAOO,SAElDT,KAAKqC,UAAYrC,KAAKE,wBAAwB,SAE9CF,KAAKsC,SAAWtC,KAAKE,wBAAwB,IAAOqC,gBAGpD,IAAIP,EACAQ,GADAR,EAAQhC,KAAKqC,WACAI,UAAU,EAAGT,EAAMU,YAAY,MAE1B,SAAlB1C,KAAKsC,WACPtC,KAAKsC,SAAWE,KAxCf,8CAgFHxC,KAAKC,eAAiBD,KAAKD,sBAhFxB,oCAwFHC,KAAKH,YAAY8C,OACjB3C,KAAKH,YAAY+C,eAzFd,K,sCAAM3D,GAAgB,4Q,mDAAhBA,EAAgB,8oBEjB7B,yCACE,yCACE,yCACE,yCACE,yCACE,oCACA,yCACE,wCAAuB,yBAAY,8BACnC,uCAAqB,0BAAa,8BAClC,6CAAyD,qDAAS,EAAA6C,iCAA+B,yCACxF,8BACX,8BACA,sCAGF,8BACF,8BACA,2CACE,2CACE,0CACE,0CACE,yCAAqF,sCAAS,8BAChG,8BAQF,8BACF,8BACA,2CACE,6CACF,8BACF,8BACF,8BACF,8BAEF,+B,MAlCqC,2GAEF,yEACF,0EAaqC,0G,o5FDblEe,SAAU,CACR,CAAEzD,KAAM,GAAI0D,WAAY,aACxB,CACE1D,KAAM,YAAa2D,aAAc,kBAAM,wDACpCC,MAAKC,YAACA,OAAIA,EAAEC,uBAUhB,IAAMhE,EAAN,uC,gDAAMA,I,+EAAAA,IAAwB,SAH1B,CAAC,IAAaiE,SAAShE,IACtB,O,GEnBZ,kDAYO,IAAMiE,EAAN,IAAMA,EAAN,uC,gDAAMA,I,+EAAAA,IAAiB,SALnB,CACP,IACA,M","file":"x","sourcesContent":["import { Component, OnInit, AfterContentChecked, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { JwtHelper } from 'src/app/services/jwtHelper/jwt-helper.service';\nimport { LoggingService } from 'src/app/services/loggingFactory/logging-service.service';\nimport { LocalStorageFactoryService } from 'src/app/services/localStorageFactory/local-storage-factory.service';\nimport { ActivityService } from 'src/app/services/activityFactory/activity.service';\nimport { IEventLog } from 'src/app/models/event-log';\nimport { Subject } from 'rxjs';\nimport { DBkeys } from 'src/app/services/dbkeys/db-keys';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit, AfterContentChecked, OnDestroy {\n\n  // ... props ....\n  public page: string;\n  public controller: string;\n  public objIEventLog: IEventLog;\n  public userProfilePic: any;\n  public userId: string;\n  public userEmail: string;\n  public userName: string;\n  // subject to unsubscibe from obserable\n  public unsubscribe = new Subject<void>();\n\n  constructor(private activatedroute: ActivatedRoute, private router: Router, private srvJwthelperService: JwtHelper,\n    private srvLoggingService: LoggingService, private srvLocalStorageFactory: LocalStorageFactoryService,\n    private srvActivityService: ActivityService, private _location: Location, ) {\n    this.objIEventLog = new IEventLog();\n  }\n\n  ngOnInit() {\n    var email = localStorage.getItem('email');\n    if (email === null) {\n      this.router.navigate(['/']);\n    }\n    this.controller = \"Profile component\"\n    this.page = this.router.url;\n    // get profile pic from localStorage \n    this.getUserProfilePic();\n    // current user Id\n    this.userId = this.getDataFromLocalStorage(DBkeys.USER_ID);\n    // userEmail ...\n    this.userEmail = this.getDataFromLocalStorage('email');\n    // userName ....\n    this.userName = this.getDataFromLocalStorage(DBkeys.USER_FIRSTNAME);\n    //  + ' ' + this.getDataFromLocalStorage(DBkeys.USER_LASTNAME);\n\n    var email = this.userEmail;\n    var name = email.substring(0, email.lastIndexOf(\"@\"));\n\n    if (this.userName === 'null') {\n      this.userName = name;\n    }\n  }\n  // get image if not then return default..\n  getUserProfilePic = () => {\n    this.userProfilePic = this.getDataFromLocalStorage(DBkeys.USER_PROFILE_PIC);\n    // console.log(this.userProfilePic, \"321\");\n    if (this.userProfilePic && this.userProfilePic != 'null') {\n      return this.userProfilePic;\n    } else {\n      return (this.userProfilePic =\n        '../../../../assets/Default.jpg');\n    }\n  }\n\n  // fuc to track user actions .\n  addEventLog = (action) => {\n    this.objIEventLog.user_id = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.USER_ID);\n    this.objIEventLog.user_ip = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.IP);\n    this.objIEventLog.action = action;\n    this.objIEventLog.category = 'button click';\n    this.objIEventLog.city = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.CITY);\n    this.objIEventLog.country = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.COUNTRY);\n    this.objIEventLog.controller = this.controller;\n    this.objIEventLog.session_id = this.srvLocalStorageFactory.getfromLocalStorage(DBkeys.SESSION_ID);\n    this.objIEventLog.page = this.page;\n\n    this.srvLoggingService.Event_SaveLogs(this.objIEventLog).pipe(takeUntil(this.unsubscribe)).subscribe(res => {\n\n    }, error => console.log(error));\n\n  }\n  // helper function ,instead of calling localStorage factory multiple time it will help to call once ,\n  // means we trying to remove duplicate code ..\n  getDataFromLocalStorage = (key) => {\n    return this.srvLocalStorageFactory.getfromLocalStorage(key);\n  }\n  // you have to tell angular that you updated the content after ngAfterContentChecked you can\n  // else we will get error ExpressionChangedAfterItHasBeenCheckedError: if we call fuc not in ngafterC\n  ngAfterContentChecked(): void {\n    this.userProfilePic = this.getUserProfilePic();\n  }\n  // navigate to update-profile page\n  navigateToUpdateProfilePage = () => {\n    this.router.navigate(['/update-profile']);\n  }\n\n  ngOnDestroy(): void {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProfileComponent } from '../profile/profile.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfileComponent,\n    children: [\n      { path: '', redirectTo: 'wish-list' },\n      {\n        path: 'wish-list', loadChildren: () => import('../../user-profile/wishlist/wishlist-module/wishlist.module')\n          .then(m => m.WishlistModule)\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserProfileRoutingModule { }\n","<div class=\"container-fluid f-bg pt-5\">\n  <div class=\"col-sm-11 mx-auto\">\n    <div class=\"row\">\n      <div class=\"col-lg-3 col-sm-12 mb-4 f-radius\">\n        <div class=\"card mx-auto\">\n          <img class=\"card-img-top \" [src]=\"userProfilePic\" class=\"profile-pic\" alt=\"profilepic\">\n          <div class=\"card-body\" style=\"text-align: center;\">\n            <h4 class=\"card-title\">{{userName}}</h4>\n            <p class=\"card-text\">{{userEmail}}</p>\n            <button class=\"btn btn-sm edit-btn\" style=\"color:white;\" (click)=\"navigateToUpdateProfilePage()\">Edit\n              profile</button>\n          </div>\n          <div class=\"card-body\">\n\n          </div>\n        </div>\n      </div>\n      <div class=\"col-lg-9 col-sm-12\">\n        <nav class=\"navbar navbar-expand-sm shadow\" style=\"background-color: #fff;\">\n          <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link \" routerLinkActive=\"nav-item-active\" [routerLink]=\"['wish-list']\">Wishlist </a>\n            </li>\n            <!-- <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLinkActive=\"nav-item-active\" [routerLink]=\"['host-activities']\">Hosted\n                Acitivites</a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" routerLinkActive=\"nav-item-active\" [routerLink]=\"['join-activities']\">Joined </a>\n            </li> -->\n          </ul>\n        </nav>\n        <div class=\"mt-5 shadow\">\n          <router-outlet></router-outlet>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserProfileRoutingModule } from './user-profile-routing.module';\nimport { ProfileComponent } from '../profile/profile.component';\n\n@NgModule({\n  declarations: [ProfileComponent],\n  imports: [\n    CommonModule,\n    UserProfileRoutingModule\n  ]\n})\nexport class UserProfileModule { }\n"]}